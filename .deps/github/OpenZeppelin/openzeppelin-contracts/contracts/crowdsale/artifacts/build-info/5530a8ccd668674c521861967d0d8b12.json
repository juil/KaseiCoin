{
	"id": "5530a8ccd668674c521861967d0d8b12",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// pragma solidity ^0.5.0; // From OpenZeppelin v2.5\npragma solidity ^0.8;\n\n// import \"../GSN/Context.sol\";\n// import \"../token/ERC20/IERC20.sol\";\n// import \"../math/SafeMath.sol\";\n// import \"../token/ERC20/SafeERC20.sol\";\n// import \"../utils/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/Context.sol\";\n\n\n/**\n * @title Crowdsale\n * @dev Crowdsale is a base contract for managing a token crowdsale,\n * allowing investors to purchase tokens with ether. This contract implements\n * such functionality in its most fundamental form and can be extended to provide additional\n * functionality and/or custom behavior.\n * The external interface represents the basic interface for purchasing tokens, and conforms\n * the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n * The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n * the methods to add functionality. Consider using 'super' where appropriate to concatenate\n * behavior.\n */\ncontract Crowdsale is Context, ReentrancyGuard {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    // The token being sold\n    IERC20 private _token;\n\n    // Address where funds are collected\n    address payable private _wallet;\n\n    // How many token units a buyer gets per wei.\n    // The rate is the conversion between wei and the smallest and indivisible token unit.\n    // So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK\n    // 1 wei will give you 1 unit, or 0.001 TOK.\n    uint256 private _rate;\n\n    // Amount of wei raised\n    uint256 private _weiRaised;\n\n    /**\n     * Event for token purchase logging\n     * @param purchaser who paid for the tokens\n     * @param beneficiary who got the tokens\n     * @param value weis paid for purchase\n     * @param amount amount of tokens purchased\n     */\n    event TokensPurchased(address indexed purchaser, address indexed beneficiary, uint256 value, uint256 amount);\n\n    /**\n     * @param rate Number of token units a buyer gets per wei\n     * @dev The rate is the conversion between wei and the smallest and indivisible\n     * token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n     * with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n     * @param wallet Address where collected funds will be forwarded to\n     * @param token Address of the token being sold\n     */\n    constructor (uint256 rate, address payable wallet, IERC20 token) public {\n        require(rate > 0, \"Crowdsale: rate is 0\");\n        require(wallet != address(0), \"Crowdsale: wallet is the zero address\");\n        require(address(token) != address(0), \"Crowdsale: token is the zero address\");\n\n        _rate = rate;\n        _wallet = wallet;\n        _token = token;\n    }\n\n    /**\n     * @dev fallback function ***DO NOT OVERRIDE***\n     * Note that other contracts will transfer funds with a base gas stipend\n     * of 2300, which is not enough to call buyTokens. Consider calling\n     * buyTokens directly when purchasing tokens from a contract.\n     */\n    // solidity v0.5 fallback\n    // function () external payable {\n    //     buyTokens(_msgSender());\n    // }\n    // solidity v0.8 fallback\n    fallback() external payable {}\n    receive() external payable {}\n\n    /**\n     * @return the token being sold.\n     */\n    function token() public view returns (IERC20) {\n        return _token;\n    }\n\n    /**\n     * @return the address where funds are collected.\n     */\n    function wallet() public view returns (address payable) {\n        return _wallet;\n    }\n\n    /**\n     * @return the number of token units a buyer gets per wei.\n     */\n    function rate() public view returns (uint256) {\n        return _rate;\n    }\n\n    /**\n     * @return the amount of wei raised.\n     */\n    function weiRaised() public view returns (uint256) {\n        return _weiRaised;\n    }\n\n    /**\n     * @dev low level token purchase ***DO NOT OVERRIDE***\n     * This function has a non-reentrancy guard, so it shouldn't be called by\n     * another `nonReentrant` function.\n     * @param beneficiary Recipient of the token purchase\n     */\n    function buyTokens(address beneficiary) public nonReentrant payable {\n        uint256 weiAmount = msg.value;\n        _preValidatePurchase(beneficiary, weiAmount);\n\n        // calculate token amount to be created\n        uint256 tokens = _getTokenAmount(weiAmount);\n\n        // update state\n        _weiRaised = _weiRaised.add(weiAmount);\n\n        _processPurchase(beneficiary, tokens);\n        emit TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens);\n\n        _updatePurchasingState(beneficiary, weiAmount);\n\n        _forwardFunds();\n        _postValidatePurchase(beneficiary, weiAmount);\n    }\n\n    /**\n     * @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n     * Use `super` in contracts that inherit from Crowdsale to extend their validations.\n     * Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     *     super._preValidatePurchase(beneficiary, weiAmount);\n     *     require(weiRaised().add(weiAmount) <= cap);\n     * @param beneficiary Address performing the token purchase\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n        require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\");\n        require(weiAmount != 0, \"Crowdsale: weiAmount is 0\");\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n    }\n\n    /**\n     * @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n     * conditions are not met.\n     * @param beneficiary Address performing the token purchase\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n     * its tokens.\n     * @param beneficiary Address performing the token purchase\n     * @param tokenAmount Number of tokens to be emitted\n     */\n    function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {\n        _token.safeTransfer(beneficiary, tokenAmount);\n    }\n\n    /**\n     * @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n     * tokens.\n     * @param beneficiary Address receiving the tokens\n     * @param tokenAmount Number of tokens to be purchased\n     */\n    function _processPurchase(address beneficiary, uint256 tokenAmount) internal {\n        _deliverTokens(beneficiary, tokenAmount);\n    }\n\n    /**\n     * @dev Override for extensions that require an internal state to check for validity (current user contributions,\n     * etc.)\n     * @param beneficiary Address receiving the tokens\n     * @param weiAmount Value in wei involved in the purchase\n     */\n    function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {\n        // solhint-disable-previous-line no-empty-blocks\n    }\n\n    /**\n     * @dev Override to extend the way in which ether is converted to tokens.\n     * @param weiAmount Value in wei to be converted into tokens\n     * @return Number of tokens that can be purchased with the specified _weiAmount\n     */\n    function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {\n        return weiAmount.mul(_rate);\n    }\n\n    /**\n     * @dev Determines how ETH is stored/forwarded on purchases.\n     */\n    function _forwardFunds() internal {\n        _wallet.transfer(msg.value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../extensions/draft-IERC20Permit.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    function safePermit(\n        IERC20Permit token,\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal {\n        uint256 nonceBefore = token.nonces(owner);\n        token.permit(owner, spender, value, deadline, v, r, s);\n        uint256 nonceAfter = token.nonces(owner);\n        require(nonceAfter == nonceBefore + 1, \"SafeERC20: permit did not succeed\");\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol": {
				"Crowdsale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rate",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "wallet",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "purchaser",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "wallet",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "weiRaised",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"details": "Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.",
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"params": {
									"amount": "amount of tokens purchased",
									"beneficiary": "who got the tokens",
									"purchaser": "who paid for the tokens",
									"value": "weis paid for purchase"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"buyTokens(address)": {
								"details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
								"params": {
									"beneficiary": "Recipient of the token purchase"
								}
							},
							"constructor": {
								"details": "The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.",
								"params": {
									"rate": "Number of token units a buyer gets per wei",
									"token": "Address of the token being sold",
									"wallet": "Address where collected funds will be forwarded to"
								}
							},
							"rate()": {
								"returns": {
									"_0": "the number of token units a buyer gets per wei."
								}
							},
							"token()": {
								"returns": {
									"_0": "the token being sold."
								}
							},
							"wallet()": {
								"returns": {
									"_0": "the address where funds are collected."
								}
							},
							"weiRaised()": {
								"returns": {
									"_0": "the amount of wei raised."
								}
							}
						},
						"title": "Crowdsale",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":1234:8121  contract Crowdsale is Context, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2657:3027  constructor (uint256 rate, address payable wallet, IERC20 token) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2754:2755  0 */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2747:2751  rate */\n  dup4\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2747:2755  rate > 0 */\n  gt\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2739:2780  require(rate > 0, \"Crowdsale: rate is 0\") */\n  tag_8\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_8:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2816:2817  0 */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2798:2818  wallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2798:2804  wallet */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2798:2818  wallet != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2790:2860  require(wallet != address(0), \"Crowdsale: wallet is the zero address\") */\n  tag_11\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_11:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2904:2905  0 */\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2878:2906  address(token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2886:2891  token */\n  dup2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2878:2906  address(token) != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2870:2947  require(address(token) != address(0), \"Crowdsale: token is the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_15\n  swap1\n  tag_16\n  jump\t// in\ntag_15:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2966:2970  rate */\n  dup3\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2958:2963  _rate */\n  0x03\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2958:2970  _rate = rate */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2990:2996  wallet */\n  dup2\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2980:2987  _wallet */\n  0x02\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2980:2996  _wallet = wallet */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3015:3020  token */\n  dup1\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3006:3012  _token */\n  0x01\n  0x00\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3006:3020  _token = token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":2657:3027  constructor (uint256 rate, address payable wallet, IERC20 token) public {... */\n  pop\n  pop\n  pop\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":1234:8121  contract Crowdsale is Context, ReentrancyGuard {... */\n  jump(tag_17)\n    /* \"#utility.yul\":88:205   */\ntag_19:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_21:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_22:\n    /* \"#utility.yul\":490:514   */\n  tag_45\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_21\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_46\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_46:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_23:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_48\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_22\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:820   */\ntag_24:\n    /* \"#utility.yul\":731:738   */\n  0x00\n    /* \"#utility.yul\":771:813   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":764:769   */\n  dup3\n    /* \"#utility.yul\":760:814   */\n  and\n    /* \"#utility.yul\":749:814   */\n  swap1\n  pop\n    /* \"#utility.yul\":694:820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":826:930   */\ntag_25:\n    /* \"#utility.yul\":871:878   */\n  0x00\n    /* \"#utility.yul\":900:924   */\n  tag_51\n    /* \"#utility.yul\":918:923   */\n  dup3\n    /* \"#utility.yul\":900:924   */\n  tag_24\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":889:924   */\n  swap1\n  pop\n    /* \"#utility.yul\":826:930   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":936:1074   */\ntag_26:\n    /* \"#utility.yul\":1017:1049   */\n  tag_53\n    /* \"#utility.yul\":1043:1048   */\n  dup2\n    /* \"#utility.yul\":1017:1049   */\n  tag_25\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1010:1015   */\n  dup2\n    /* \"#utility.yul\":1007:1050   */\n  eq\n    /* \"#utility.yul\":997:1068   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1061:1062   */\n  dup1\n    /* \"#utility.yul\":1054:1066   */\n  revert\n    /* \"#utility.yul\":997:1068   */\ntag_54:\n    /* \"#utility.yul\":936:1074   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1080:1239   */\ntag_27:\n    /* \"#utility.yul\":1145:1150   */\n  0x00\n    /* \"#utility.yul\":1176:1182   */\n  dup2\n    /* \"#utility.yul\":1170:1183   */\n  mload\n    /* \"#utility.yul\":1161:1183   */\n  swap1\n  pop\n    /* \"#utility.yul\":1192:1233   */\n  tag_56\n    /* \"#utility.yul\":1227:1232   */\n  dup2\n    /* \"#utility.yul\":1192:1233   */\n  tag_26\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1080:1239   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1245:1341   */\ntag_28:\n    /* \"#utility.yul\":1282:1289   */\n  0x00\n    /* \"#utility.yul\":1311:1335   */\n  tag_58\n    /* \"#utility.yul\":1329:1334   */\n  dup3\n    /* \"#utility.yul\":1311:1335   */\n  tag_24\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1300:1335   */\n  swap1\n  pop\n    /* \"#utility.yul\":1245:1341   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1347:1457   */\ntag_29:\n    /* \"#utility.yul\":1398:1405   */\n  0x00\n    /* \"#utility.yul\":1427:1451   */\n  tag_60\n    /* \"#utility.yul\":1445:1450   */\n  dup3\n    /* \"#utility.yul\":1427:1451   */\n  tag_28\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1416:1451   */\n  swap1\n  pop\n    /* \"#utility.yul\":1347:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1613   */\ntag_30:\n    /* \"#utility.yul\":1550:1588   */\n  tag_62\n    /* \"#utility.yul\":1582:1587   */\n  dup2\n    /* \"#utility.yul\":1550:1588   */\n  tag_29\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1543:1548   */\n  dup2\n    /* \"#utility.yul\":1540:1589   */\n  eq\n    /* \"#utility.yul\":1530:1607   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":1603:1604   */\n  0x00\n    /* \"#utility.yul\":1600:1601   */\n  dup1\n    /* \"#utility.yul\":1593:1605   */\n  revert\n    /* \"#utility.yul\":1530:1607   */\ntag_63:\n    /* \"#utility.yul\":1463:1613   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1619:1790   */\ntag_31:\n    /* \"#utility.yul\":1690:1695   */\n  0x00\n    /* \"#utility.yul\":1721:1727   */\n  dup2\n    /* \"#utility.yul\":1715:1728   */\n  mload\n    /* \"#utility.yul\":1706:1728   */\n  swap1\n  pop\n    /* \"#utility.yul\":1737:1784   */\n  tag_65\n    /* \"#utility.yul\":1778:1783   */\n  dup2\n    /* \"#utility.yul\":1737:1784   */\n  tag_30\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1619:1790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1796:2503   */\ntag_3:\n    /* \"#utility.yul\":1906:1912   */\n  0x00\n    /* \"#utility.yul\":1914:1920   */\n  dup1\n    /* \"#utility.yul\":1922:1928   */\n  0x00\n    /* \"#utility.yul\":1971:1973   */\n  0x60\n    /* \"#utility.yul\":1959:1968   */\n  dup5\n    /* \"#utility.yul\":1950:1957   */\n  dup7\n    /* \"#utility.yul\":1946:1969   */\n  sub\n    /* \"#utility.yul\":1942:1974   */\n  slt\n    /* \"#utility.yul\":1939:2058   */\n  iszero\n  tag_67\n  jumpi\n    /* \"#utility.yul\":1977:2056   */\n  tag_68\n  tag_19\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1939:2058   */\ntag_67:\n    /* \"#utility.yul\":2097:2098   */\n  0x00\n    /* \"#utility.yul\":2122:2186   */\n  tag_69\n    /* \"#utility.yul\":2178:2185   */\n  dup7\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2158:2167   */\n  dup8\n    /* \"#utility.yul\":2154:2176   */\n  add\n    /* \"#utility.yul\":2122:2186   */\n  tag_23\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2112:2186   */\n  swap4\n  pop\n    /* \"#utility.yul\":2068:2196   */\n  pop\n    /* \"#utility.yul\":2235:2237   */\n  0x20\n    /* \"#utility.yul\":2261:2333   */\n  tag_70\n    /* \"#utility.yul\":2325:2332   */\n  dup7\n    /* \"#utility.yul\":2316:2322   */\n  dup3\n    /* \"#utility.yul\":2305:2314   */\n  dup8\n    /* \"#utility.yul\":2301:2323   */\n  add\n    /* \"#utility.yul\":2261:2333   */\n  tag_27\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2251:2333   */\n  swap3\n  pop\n    /* \"#utility.yul\":2206:2343   */\n  pop\n    /* \"#utility.yul\":2382:2384   */\n  0x40\n    /* \"#utility.yul\":2408:2486   */\n  tag_71\n    /* \"#utility.yul\":2478:2485   */\n  dup7\n    /* \"#utility.yul\":2469:2475   */\n  dup3\n    /* \"#utility.yul\":2458:2467   */\n  dup8\n    /* \"#utility.yul\":2454:2476   */\n  add\n    /* \"#utility.yul\":2408:2486   */\n  tag_31\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2398:2486   */\n  swap2\n  pop\n    /* \"#utility.yul\":2353:2496   */\n  pop\n    /* \"#utility.yul\":1796:2503   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":2509:2678   */\ntag_32:\n    /* \"#utility.yul\":2593:2604   */\n  0x00\n    /* \"#utility.yul\":2627:2633   */\n  dup3\n    /* \"#utility.yul\":2622:2625   */\n  dup3\n    /* \"#utility.yul\":2615:2634   */\n  mstore\n    /* \"#utility.yul\":2667:2671   */\n  0x20\n    /* \"#utility.yul\":2662:2665   */\n  dup3\n    /* \"#utility.yul\":2658:2672   */\n  add\n    /* \"#utility.yul\":2643:2672   */\n  swap1\n  pop\n    /* \"#utility.yul\":2509:2678   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2684:2854   */\ntag_33:\n    /* \"#utility.yul\":2824:2846   */\n  0x43726f776473616c653a20726174652069732030000000000000000000000000\n    /* \"#utility.yul\":2820:2821   */\n  0x00\n    /* \"#utility.yul\":2812:2818   */\n  dup3\n    /* \"#utility.yul\":2808:2822   */\n  add\n    /* \"#utility.yul\":2801:2847   */\n  mstore\n    /* \"#utility.yul\":2684:2854   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2860:3226   */\ntag_34:\n    /* \"#utility.yul\":3002:3005   */\n  0x00\n    /* \"#utility.yul\":3023:3090   */\n  tag_75\n    /* \"#utility.yul\":3087:3089   */\n  0x14\n    /* \"#utility.yul\":3082:3085   */\n  dup4\n    /* \"#utility.yul\":3023:3090   */\n  tag_32\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3016:3090   */\n  swap2\n  pop\n    /* \"#utility.yul\":3099:3192   */\n  tag_76\n    /* \"#utility.yul\":3188:3191   */\n  dup3\n    /* \"#utility.yul\":3099:3192   */\n  tag_33\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3217:3219   */\n  0x20\n    /* \"#utility.yul\":3212:3215   */\n  dup3\n    /* \"#utility.yul\":3208:3220   */\n  add\n    /* \"#utility.yul\":3201:3220   */\n  swap1\n  pop\n    /* \"#utility.yul\":2860:3226   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3232:3651   */\ntag_10:\n    /* \"#utility.yul\":3398:3402   */\n  0x00\n    /* \"#utility.yul\":3436:3438   */\n  0x20\n    /* \"#utility.yul\":3425:3434   */\n  dup3\n    /* \"#utility.yul\":3421:3439   */\n  add\n    /* \"#utility.yul\":3413:3439   */\n  swap1\n  pop\n    /* \"#utility.yul\":3485:3494   */\n  dup2\n    /* \"#utility.yul\":3479:3483   */\n  dup2\n    /* \"#utility.yul\":3475:3495   */\n  sub\n    /* \"#utility.yul\":3471:3472   */\n  0x00\n    /* \"#utility.yul\":3460:3469   */\n  dup4\n    /* \"#utility.yul\":3456:3473   */\n  add\n    /* \"#utility.yul\":3449:3496   */\n  mstore\n    /* \"#utility.yul\":3513:3644   */\n  tag_78\n    /* \"#utility.yul\":3639:3643   */\n  dup2\n    /* \"#utility.yul\":3513:3644   */\n  tag_34\n  jump\t// in\ntag_78:\n    /* \"#utility.yul\":3505:3644   */\n  swap1\n  pop\n    /* \"#utility.yul\":3232:3651   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3657:3881   */\ntag_35:\n    /* \"#utility.yul\":3797:3831   */\n  0x43726f776473616c653a2077616c6c657420697320746865207a65726f206164\n    /* \"#utility.yul\":3793:3794   */\n  0x00\n    /* \"#utility.yul\":3785:3791   */\n  dup3\n    /* \"#utility.yul\":3781:3795   */\n  add\n    /* \"#utility.yul\":3774:3832   */\n  mstore\n    /* \"#utility.yul\":3866:3873   */\n  0x6472657373000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3861:3863   */\n  0x20\n    /* \"#utility.yul\":3853:3859   */\n  dup3\n    /* \"#utility.yul\":3849:3864   */\n  add\n    /* \"#utility.yul\":3842:3874   */\n  mstore\n    /* \"#utility.yul\":3657:3881   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3887:4253   */\ntag_36:\n    /* \"#utility.yul\":4029:4032   */\n  0x00\n    /* \"#utility.yul\":4050:4117   */\n  tag_81\n    /* \"#utility.yul\":4114:4116   */\n  0x25\n    /* \"#utility.yul\":4109:4112   */\n  dup4\n    /* \"#utility.yul\":4050:4117   */\n  tag_32\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":4043:4117   */\n  swap2\n  pop\n    /* \"#utility.yul\":4126:4219   */\n  tag_82\n    /* \"#utility.yul\":4215:4218   */\n  dup3\n    /* \"#utility.yul\":4126:4219   */\n  tag_35\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":4244:4246   */\n  0x40\n    /* \"#utility.yul\":4239:4242   */\n  dup3\n    /* \"#utility.yul\":4235:4247   */\n  add\n    /* \"#utility.yul\":4228:4247   */\n  swap1\n  pop\n    /* \"#utility.yul\":3887:4253   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4259:4678   */\ntag_13:\n    /* \"#utility.yul\":4425:4429   */\n  0x00\n    /* \"#utility.yul\":4463:4465   */\n  0x20\n    /* \"#utility.yul\":4452:4461   */\n  dup3\n    /* \"#utility.yul\":4448:4466   */\n  add\n    /* \"#utility.yul\":4440:4466   */\n  swap1\n  pop\n    /* \"#utility.yul\":4512:4521   */\n  dup2\n    /* \"#utility.yul\":4506:4510   */\n  dup2\n    /* \"#utility.yul\":4502:4522   */\n  sub\n    /* \"#utility.yul\":4498:4499   */\n  0x00\n    /* \"#utility.yul\":4487:4496   */\n  dup4\n    /* \"#utility.yul\":4483:4500   */\n  add\n    /* \"#utility.yul\":4476:4523   */\n  mstore\n    /* \"#utility.yul\":4540:4671   */\n  tag_84\n    /* \"#utility.yul\":4666:4670   */\n  dup2\n    /* \"#utility.yul\":4540:4671   */\n  tag_36\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":4532:4671   */\n  swap1\n  pop\n    /* \"#utility.yul\":4259:4678   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4684:4907   */\ntag_37:\n    /* \"#utility.yul\":4824:4858   */\n  0x43726f776473616c653a20746f6b656e20697320746865207a65726f20616464\n    /* \"#utility.yul\":4820:4821   */\n  0x00\n    /* \"#utility.yul\":4812:4818   */\n  dup3\n    /* \"#utility.yul\":4808:4822   */\n  add\n    /* \"#utility.yul\":4801:4859   */\n  mstore\n    /* \"#utility.yul\":4893:4899   */\n  0x7265737300000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":4888:4890   */\n  0x20\n    /* \"#utility.yul\":4880:4886   */\n  dup3\n    /* \"#utility.yul\":4876:4891   */\n  add\n    /* \"#utility.yul\":4869:4900   */\n  mstore\n    /* \"#utility.yul\":4684:4907   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4913:5279   */\ntag_38:\n    /* \"#utility.yul\":5055:5058   */\n  0x00\n    /* \"#utility.yul\":5076:5143   */\n  tag_87\n    /* \"#utility.yul\":5140:5142   */\n  0x24\n    /* \"#utility.yul\":5135:5138   */\n  dup4\n    /* \"#utility.yul\":5076:5143   */\n  tag_32\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":5069:5143   */\n  swap2\n  pop\n    /* \"#utility.yul\":5152:5245   */\n  tag_88\n    /* \"#utility.yul\":5241:5244   */\n  dup3\n    /* \"#utility.yul\":5152:5245   */\n  tag_37\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":5270:5272   */\n  0x40\n    /* \"#utility.yul\":5265:5268   */\n  dup3\n    /* \"#utility.yul\":5261:5273   */\n  add\n    /* \"#utility.yul\":5254:5273   */\n  swap1\n  pop\n    /* \"#utility.yul\":4913:5279   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5285:5704   */\ntag_16:\n    /* \"#utility.yul\":5451:5455   */\n  0x00\n    /* \"#utility.yul\":5489:5491   */\n  0x20\n    /* \"#utility.yul\":5478:5487   */\n  dup3\n    /* \"#utility.yul\":5474:5492   */\n  add\n    /* \"#utility.yul\":5466:5492   */\n  swap1\n  pop\n    /* \"#utility.yul\":5538:5547   */\n  dup2\n    /* \"#utility.yul\":5532:5536   */\n  dup2\n    /* \"#utility.yul\":5528:5548   */\n  sub\n    /* \"#utility.yul\":5524:5525   */\n  0x00\n    /* \"#utility.yul\":5513:5522   */\n  dup4\n    /* \"#utility.yul\":5509:5526   */\n  add\n    /* \"#utility.yul\":5502:5549   */\n  mstore\n    /* \"#utility.yul\":5566:5697   */\n  tag_90\n    /* \"#utility.yul\":5692:5696   */\n  dup2\n    /* \"#utility.yul\":5566:5697   */\n  tag_38\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":5558:5697   */\n  swap1\n  pop\n    /* \"#utility.yul\":5285:5704   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":1234:8121  contract Crowdsale is Context, ReentrancyGuard {... */\ntag_17:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":1234:8121  contract Crowdsale is Context, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x2c4e722e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4042b66f\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x521eb273\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xec8ac4d8\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xfc0c546a\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      stop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3906:3981  function rate() public view returns (uint256) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_12:\n      pop\n      tag_13\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4044:4129  function weiRaised() public view returns (uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_20\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3734:3821  function wallet() public view returns (address payable) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4386:4991  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_6:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3582:3658  function token() public view returns (IERC20) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      pop\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3906:3981  function rate() public view returns (uint256) {... */\n    tag_14:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3943:3950  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3969:3974  _rate */\n      sload(0x03)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3962:3974  return _rate */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3906:3981  function rate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4044:4129  function weiRaised() public view returns (uint256) {... */\n    tag_19:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4086:4093  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4112:4122  _weiRaised */\n      sload(0x04)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4105:4122  return _weiRaised */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4044:4129  function weiRaised() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3734:3821  function wallet() public view returns (address payable) {... */\n    tag_23:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3773:3788  address payable */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3807:3814  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3800:3814  return _wallet */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3734:3821  function wallet() public view returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4386:4991  function buyTokens(address beneficiary) public nonReentrant payable {... */\n    tag_29:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_39\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_40\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_39:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4464:4481  uint256 weiAmount */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4484:4493  msg.value */\n      callvalue\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4464:4493  uint256 weiAmount = msg.value */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4503:4547  _preValidatePurchase(beneficiary, weiAmount) */\n      tag_42\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4524:4535  beneficiary */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4537:4546  weiAmount */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4503:4523  _preValidatePurchase */\n      tag_43\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4503:4547  _preValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_42:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4606:4620  uint256 tokens */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4623:4649  _getTokenAmount(weiAmount) */\n      tag_44\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4639:4648  weiAmount */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4623:4638  _getTokenAmount */\n      tag_45\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4623:4649  _getTokenAmount(weiAmount) */\n      jump\t// in\n    tag_44:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4606:4649  uint256 tokens = _getTokenAmount(weiAmount) */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4697:4722  _weiRaised.add(weiAmount) */\n      tag_46\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4712:4721  weiAmount */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4697:4707  _weiRaised */\n      sload(0x04)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4697:4711  _weiRaised.add */\n      tag_47\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4697:4722  _weiRaised.add(weiAmount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_46:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4684:4694  _weiRaised */\n      0x04\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4684:4722  _weiRaised = _weiRaised.add(weiAmount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4733:4770  _processPurchase(beneficiary, tokens) */\n      tag_48\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4750:4761  beneficiary */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4763:4769  tokens */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4733:4749  _processPurchase */\n      tag_49\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4733:4770  _processPurchase(beneficiary, tokens) */\n      jump\t// in\n    tag_48:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4815:4826  beneficiary */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4785:4846  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4801:4813  _msgSender() */\n      tag_50\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4801:4811  _msgSender */\n      tag_51\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4801:4813  _msgSender() */\n      jump\t// in\n    tag_50:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4785:4846  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4828:4837  weiAmount */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4839:4845  tokens */\n      dup5\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4785:4846  TokensPurchased(_msgSender(), beneficiary, weiAmount, tokens) */\n      mload(0x40)\n      tag_52\n      swap3\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4857:4903  _updatePurchasingState(beneficiary, weiAmount) */\n      tag_54\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4880:4891  beneficiary */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4893:4902  weiAmount */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4857:4879  _updatePurchasingState */\n      tag_55\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4857:4903  _updatePurchasingState(beneficiary, weiAmount) */\n      jump\t// in\n    tag_54:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4914:4929  _forwardFunds() */\n      tag_56\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4914:4927  _forwardFunds */\n      tag_57\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4914:4929  _forwardFunds() */\n      jump\t// in\n    tag_56:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4939:4984  _postValidatePurchase(beneficiary, weiAmount) */\n      tag_58\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4961:4972  beneficiary */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4974:4983  weiAmount */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4939:4960  _postValidatePurchase */\n      tag_59\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4939:4984  _postValidatePurchase(beneficiary, weiAmount) */\n      jump\t// in\n    tag_58:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4454:4991  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_60\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_61\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_60:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":4386:4991  function buyTokens(address beneficiary) public nonReentrant payable {... */\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3582:3658  function token() public view returns (IERC20) {... */\n    tag_32:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3620:3626  IERC20 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3645:3651  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3638:3651  return _token */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":3582:3658  function token() public view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5533:5909  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal view {... */\n    tag_43:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5658:5659  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5635:5660  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5635:5646  beneficiary */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5635:5660  beneficiary != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5627:5707  require(beneficiary != address(0), \"Crowdsale: beneficiary is the zero address\") */\n      tag_68\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_69\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_68:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5738:5739  0 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5725:5734  weiAmount */\n      dup2\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5725:5739  weiAmount != 0 */\n      sub\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5717:5769  require(weiAmount != 0, \"Crowdsale: weiAmount is 0\") */\n      tag_71\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_72\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_71:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":5533:5909  function _preValidatePurchase(address beneficiary, uint256 weiAmount) internal view {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7834:7954  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {... */\n    tag_45:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7901:7908  uint256 */\n      0x00\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7927:7947  weiAmount.mul(_rate) */\n      tag_75\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7941:7946  _rate */\n      sload(0x03)\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7927:7936  weiAmount */\n      dup4\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7927:7940  weiAmount.mul */\n      tag_76\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7927:7947  weiAmount.mul(_rate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_75:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7920:7947  return weiAmount.mul(_rate) */\n      swap1\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7834:7954  function _getTokenAmount(uint256 weiAmount) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2813:2820  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2843:2844  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2840  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2839:2844  a + b */\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2832:2844  return a + b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":2755:2851  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7036:7170  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n    tag_49:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7123:7163  _deliverTokens(beneficiary, tokenAmount) */\n      tag_81\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7138:7149  beneficiary */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7151:7162  tokenAmount */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7123:7137  _deliverTokens */\n      tag_82\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7123:7163  _deliverTokens(beneficiary, tokenAmount) */\n      jump\t// in\n    tag_81:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7036:7170  function _processPurchase(address beneficiary, uint256 tokenAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":7440:7585  function _updatePurchasingState(address beneficiary, uint256 weiAmount) internal {... */\n    tag_55:\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8041:8119  function _forwardFunds() internal {... */\n    tag_57:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8085:8092  _wallet */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8085:8101  _wallet.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8085:8112  _wallet.transfer(msg.value) */\n      0x08fc\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8102:8111  msg.value */\n      callvalue\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8085:8112  _wallet.transfer(msg.value) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_87\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_87:\n      pop\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":8041:8119  function _forwardFunds() internal {... */\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6204:6353  function _postValidatePurchase(address beneficiary, uint256 weiAmount) internal view {... */\n    tag_59:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3523:3530  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3553:3554  b */\n      dup2\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3550  a */\n      dup4\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3549:3554  a * b */\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3542:3554  return a * b */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":3465:3561  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6633:6770  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {... */\n    tag_82:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6718:6763  _token.safeTransfer(beneficiary, tokenAmount) */\n      tag_94\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6738:6749  beneficiary */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6751:6762  tokenAmount */\n      dup3\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6718:6724  _token */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6718:6737  _token.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_95\n      swap1\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6718:6763  _token.safeTransfer(beneficiary, tokenAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_94:\n        /* \".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":6633:6770  function _deliverTokens(address beneficiary, uint256 tokenAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n    tag_95:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_97\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":895:900  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":925:948  token.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":950:952  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":954:959  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":902:960  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_98\n      swap3\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:894  _callOptionalReturn */\n      tag_100\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":875:961  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":763:968  function safeTransfer(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4189  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_102\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4220:4224  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4200:4205  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4219  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_103\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4192:4261  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4166:4261  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4295:4296  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4285  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4292  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4275:4296  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n      iszero\n      tag_104\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4370:4380  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4359:4389  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4351:4436  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4271:4447  if (returndata.length > 0) {... */\n    tag_104:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3817:4453  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":3747:4453  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n    tag_103:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4006:4018  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_111\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4059:4065  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4067:4071  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4073:4074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4076:4088  errorMessage */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4058  functionCallWithValue */\n      tag_112\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4037:4089  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_111:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4030:4089  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3873:4096  function functionCall(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n    tag_112:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5125:5137  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5182:5187  value */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5178  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5157:5187  address(this).balance >= value */\n      lt\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5149:5230  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_114\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_115\n      swap1\n      tag_116\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_114:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5241:5253  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5255:5278  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5288  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5293  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5301:5306  value */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5308:5312  data */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5282:5313  target.call{value: value}(data) */\n      mload(0x40)\n      tag_117\n      swap2\n      swap1\n      tag_118\n      jump\t// in\n    tag_117:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_121\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_120)\n    tag_121:\n      0x60\n      swap2\n      pop\n    tag_120:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5240:5313  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      tag_122\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5357:5363  target */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5365:5372  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5374:5384  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5386:5398  errorMessage */\n      dup8\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5356  verifyCallResultFromTarget */\n      tag_123\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5330:5399  verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5323:5399  return verifyCallResultFromTarget(target, success, returndata, errorMessage) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4960:5406  function functionCallWithValue(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_123:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7646:7658  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7674:7681  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7722:7723  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7711  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7718  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7701:7723  returndata.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n      tag_126\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      tag_127\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7927:7933  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7926  isContract */\n      tag_128\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7916:7934  isContract(target) */\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7908:7968  require(isContract(target), \"Address: call to non-contract\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7697:7983  if (returndata.length == 0) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8003:8013  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7996:8013  return returndata */\n      swap1\n      pop\n      jump(tag_124)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7670:8088  if (success) {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      tag_133\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8052:8062  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8064:8076  errorMessage */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8051  _revert */\n      tag_134\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8044:8077  _revert(returndata, errorMessage) */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":7466:8094  function verifyCallResultFromTarget(... */\n    tag_124:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1235:1239  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1487:1488  0 */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1472  account */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1484  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1465:1488  account.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1458:1488  return account.code.length > 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":1175:1495  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8616:9156  function _revert(bytes memory returndata, string memory errorMessage) private pure {... */\n    tag_134:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8795:8796  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8785  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8792  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8775:8796  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n      iszero\n      tag_137\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9003:9013  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8997:9014  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9059:9074  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9046:9056  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9042:9044  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9038:9057  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9031:9075  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":8771:9150  if (returndata.length > 0) {... */\n    tag_137:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9126:9138  errorMessage */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":9119:9139  revert(errorMessage) */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":7:84   */\n    tag_141:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_142:\n        /* \"#utility.yul\":177:201   */\n      tag_185\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_141\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_16:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_187\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_142\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:568   */\n    tag_143:\n        /* \"#utility.yul\":479:486   */\n      0x00\n        /* \"#utility.yul\":519:561   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":512:517   */\n      dup3\n        /* \"#utility.yul\":508:562   */\n      and\n        /* \"#utility.yul\":497:562   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:568   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":574:678   */\n    tag_144:\n        /* \"#utility.yul\":619:626   */\n      0x00\n        /* \"#utility.yul\":648:672   */\n      tag_190\n        /* \"#utility.yul\":666:671   */\n      dup3\n        /* \"#utility.yul\":648:672   */\n      tag_143\n      jump\t// in\n    tag_190:\n        /* \"#utility.yul\":637:672   */\n      swap1\n      pop\n        /* \"#utility.yul\":574:678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":684:826   */\n    tag_145:\n        /* \"#utility.yul\":787:819   */\n      tag_192\n        /* \"#utility.yul\":813:818   */\n      dup2\n        /* \"#utility.yul\":787:819   */\n      tag_144\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":782:785   */\n      dup3\n        /* \"#utility.yul\":775:820   */\n      mstore\n        /* \"#utility.yul\":684:826   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":832:1086   */\n    tag_25:\n        /* \"#utility.yul\":941:945   */\n      0x00\n        /* \"#utility.yul\":979:981   */\n      0x20\n        /* \"#utility.yul\":968:977   */\n      dup3\n        /* \"#utility.yul\":964:982   */\n      add\n        /* \"#utility.yul\":956:982   */\n      swap1\n      pop\n        /* \"#utility.yul\":992:1079   */\n      tag_194\n        /* \"#utility.yul\":1076:1077   */\n      0x00\n        /* \"#utility.yul\":1065:1074   */\n      dup4\n        /* \"#utility.yul\":1061:1078   */\n      add\n        /* \"#utility.yul\":1052:1058   */\n      dup5\n        /* \"#utility.yul\":992:1079   */\n      tag_145\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":832:1086   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1173:1290   */\n    tag_147:\n        /* \"#utility.yul\":1282:1283   */\n      0x00\n        /* \"#utility.yul\":1279:1280   */\n      dup1\n        /* \"#utility.yul\":1272:1284   */\n      revert\n        /* \"#utility.yul\":1419:1515   */\n    tag_149:\n        /* \"#utility.yul\":1456:1463   */\n      0x00\n        /* \"#utility.yul\":1485:1509   */\n      tag_199\n        /* \"#utility.yul\":1503:1508   */\n      dup3\n        /* \"#utility.yul\":1485:1509   */\n      tag_143\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":1474:1509   */\n      swap1\n      pop\n        /* \"#utility.yul\":1419:1515   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1521:1643   */\n    tag_150:\n        /* \"#utility.yul\":1594:1618   */\n      tag_201\n        /* \"#utility.yul\":1612:1617   */\n      dup2\n        /* \"#utility.yul\":1594:1618   */\n      tag_149\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":1587:1592   */\n      dup2\n        /* \"#utility.yul\":1584:1619   */\n      eq\n        /* \"#utility.yul\":1574:1637   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1633:1634   */\n      0x00\n        /* \"#utility.yul\":1630:1631   */\n      dup1\n        /* \"#utility.yul\":1623:1635   */\n      revert\n        /* \"#utility.yul\":1574:1637   */\n    tag_202:\n        /* \"#utility.yul\":1521:1643   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1649:1788   */\n    tag_151:\n        /* \"#utility.yul\":1695:1700   */\n      0x00\n        /* \"#utility.yul\":1733:1739   */\n      dup2\n        /* \"#utility.yul\":1720:1740   */\n      calldataload\n        /* \"#utility.yul\":1711:1740   */\n      swap1\n      pop\n        /* \"#utility.yul\":1749:1782   */\n      tag_204\n        /* \"#utility.yul\":1776:1781   */\n      dup2\n        /* \"#utility.yul\":1749:1782   */\n      tag_150\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":1649:1788   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1794:2123   */\n    tag_28:\n        /* \"#utility.yul\":1853:1859   */\n      0x00\n        /* \"#utility.yul\":1902:1904   */\n      0x20\n        /* \"#utility.yul\":1890:1899   */\n      dup3\n        /* \"#utility.yul\":1881:1888   */\n      dup5\n        /* \"#utility.yul\":1877:1900   */\n      sub\n        /* \"#utility.yul\":1873:1905   */\n      slt\n        /* \"#utility.yul\":1870:1989   */\n      iszero\n      tag_206\n      jumpi\n        /* \"#utility.yul\":1908:1987   */\n      tag_207\n      tag_147\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":1870:1989   */\n    tag_206:\n        /* \"#utility.yul\":2028:2029   */\n      0x00\n        /* \"#utility.yul\":2053:2106   */\n      tag_208\n        /* \"#utility.yul\":2098:2105   */\n      dup5\n        /* \"#utility.yul\":2089:2095   */\n      dup3\n        /* \"#utility.yul\":2078:2087   */\n      dup6\n        /* \"#utility.yul\":2074:2096   */\n      add\n        /* \"#utility.yul\":2053:2106   */\n      tag_151\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":2043:2106   */\n      swap2\n      pop\n        /* \"#utility.yul\":1999:2116   */\n      pop\n        /* \"#utility.yul\":1794:2123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2129:2189   */\n    tag_152:\n        /* \"#utility.yul\":2157:2160   */\n      0x00\n        /* \"#utility.yul\":2178:2183   */\n      dup2\n        /* \"#utility.yul\":2171:2183   */\n      swap1\n      pop\n        /* \"#utility.yul\":2129:2189   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2195:2337   */\n    tag_153:\n        /* \"#utility.yul\":2245:2254   */\n      0x00\n        /* \"#utility.yul\":2278:2331   */\n      tag_211\n        /* \"#utility.yul\":2296:2330   */\n      tag_212\n        /* \"#utility.yul\":2305:2329   */\n      tag_213\n        /* \"#utility.yul\":2323:2328   */\n      dup5\n        /* \"#utility.yul\":2305:2329   */\n      tag_143\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2296:2330   */\n      tag_152\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":2278:2331   */\n      tag_143\n      jump\t// in\n    tag_211:\n        /* \"#utility.yul\":2265:2331   */\n      swap1\n      pop\n        /* \"#utility.yul\":2195:2337   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2343:2469   */\n    tag_154:\n        /* \"#utility.yul\":2393:2402   */\n      0x00\n        /* \"#utility.yul\":2426:2463   */\n      tag_215\n        /* \"#utility.yul\":2457:2462   */\n      dup3\n        /* \"#utility.yul\":2426:2463   */\n      tag_153\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2413:2463   */\n      swap1\n      pop\n        /* \"#utility.yul\":2343:2469   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2475:2615   */\n    tag_155:\n        /* \"#utility.yul\":2539:2548   */\n      0x00\n        /* \"#utility.yul\":2572:2609   */\n      tag_217\n        /* \"#utility.yul\":2603:2608   */\n      dup3\n        /* \"#utility.yul\":2572:2609   */\n      tag_154\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":2559:2609   */\n      swap1\n      pop\n        /* \"#utility.yul\":2475:2615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2621:2780   */\n    tag_156:\n        /* \"#utility.yul\":2722:2773   */\n      tag_219\n        /* \"#utility.yul\":2767:2772   */\n      dup2\n        /* \"#utility.yul\":2722:2773   */\n      tag_155\n      jump\t// in\n    tag_219:\n        /* \"#utility.yul\":2717:2720   */\n      dup3\n        /* \"#utility.yul\":2710:2774   */\n      mstore\n        /* \"#utility.yul\":2621:2780   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2786:3036   */\n    tag_34:\n        /* \"#utility.yul\":2893:2897   */\n      0x00\n        /* \"#utility.yul\":2931:2933   */\n      0x20\n        /* \"#utility.yul\":2920:2929   */\n      dup3\n        /* \"#utility.yul\":2916:2934   */\n      add\n        /* \"#utility.yul\":2908:2934   */\n      swap1\n      pop\n        /* \"#utility.yul\":2944:3029   */\n      tag_221\n        /* \"#utility.yul\":3026:3027   */\n      0x00\n        /* \"#utility.yul\":3015:3024   */\n      dup4\n        /* \"#utility.yul\":3011:3028   */\n      add\n        /* \"#utility.yul\":3002:3008   */\n      dup5\n        /* \"#utility.yul\":2944:3029   */\n      tag_156\n      jump\t// in\n    tag_221:\n        /* \"#utility.yul\":2786:3036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3042:3374   */\n    tag_53:\n        /* \"#utility.yul\":3163:3167   */\n      0x00\n        /* \"#utility.yul\":3201:3203   */\n      0x40\n        /* \"#utility.yul\":3190:3199   */\n      dup3\n        /* \"#utility.yul\":3186:3204   */\n      add\n        /* \"#utility.yul\":3178:3204   */\n      swap1\n      pop\n        /* \"#utility.yul\":3214:3285   */\n      tag_223\n        /* \"#utility.yul\":3282:3283   */\n      0x00\n        /* \"#utility.yul\":3271:3280   */\n      dup4\n        /* \"#utility.yul\":3267:3284   */\n      add\n        /* \"#utility.yul\":3258:3264   */\n      dup6\n        /* \"#utility.yul\":3214:3285   */\n      tag_142\n      jump\t// in\n    tag_223:\n        /* \"#utility.yul\":3295:3367   */\n      tag_224\n        /* \"#utility.yul\":3363:3365   */\n      0x20\n        /* \"#utility.yul\":3352:3361   */\n      dup4\n        /* \"#utility.yul\":3348:3366   */\n      add\n        /* \"#utility.yul\":3339:3345   */\n      dup5\n        /* \"#utility.yul\":3295:3367   */\n      tag_142\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":3042:3374   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3380:3549   */\n    tag_157:\n        /* \"#utility.yul\":3464:3475   */\n      0x00\n        /* \"#utility.yul\":3498:3504   */\n      dup3\n        /* \"#utility.yul\":3493:3496   */\n      dup3\n        /* \"#utility.yul\":3486:3505   */\n      mstore\n        /* \"#utility.yul\":3538:3542   */\n      0x20\n        /* \"#utility.yul\":3533:3536   */\n      dup3\n        /* \"#utility.yul\":3529:3543   */\n      add\n        /* \"#utility.yul\":3514:3543   */\n      swap1\n      pop\n        /* \"#utility.yul\":3380:3549   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3555:3736   */\n    tag_158:\n        /* \"#utility.yul\":3695:3728   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3691:3692   */\n      0x00\n        /* \"#utility.yul\":3683:3689   */\n      dup3\n        /* \"#utility.yul\":3679:3693   */\n      add\n        /* \"#utility.yul\":3672:3729   */\n      mstore\n        /* \"#utility.yul\":3555:3736   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3742:4108   */\n    tag_159:\n        /* \"#utility.yul\":3884:3887   */\n      0x00\n        /* \"#utility.yul\":3905:3972   */\n      tag_228\n        /* \"#utility.yul\":3969:3971   */\n      0x1f\n        /* \"#utility.yul\":3964:3967   */\n      dup4\n        /* \"#utility.yul\":3905:3972   */\n      tag_157\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":3898:3972   */\n      swap2\n      pop\n        /* \"#utility.yul\":3981:4074   */\n      tag_229\n        /* \"#utility.yul\":4070:4073   */\n      dup3\n        /* \"#utility.yul\":3981:4074   */\n      tag_158\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4099:4101   */\n      0x20\n        /* \"#utility.yul\":4094:4097   */\n      dup3\n        /* \"#utility.yul\":4090:4102   */\n      add\n        /* \"#utility.yul\":4083:4102   */\n      swap1\n      pop\n        /* \"#utility.yul\":3742:4108   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4114:4533   */\n    tag_66:\n        /* \"#utility.yul\":4280:4284   */\n      0x00\n        /* \"#utility.yul\":4318:4320   */\n      0x20\n        /* \"#utility.yul\":4307:4316   */\n      dup3\n        /* \"#utility.yul\":4303:4321   */\n      add\n        /* \"#utility.yul\":4295:4321   */\n      swap1\n      pop\n        /* \"#utility.yul\":4367:4376   */\n      dup2\n        /* \"#utility.yul\":4361:4365   */\n      dup2\n        /* \"#utility.yul\":4357:4377   */\n      sub\n        /* \"#utility.yul\":4353:4354   */\n      0x00\n        /* \"#utility.yul\":4342:4351   */\n      dup4\n        /* \"#utility.yul\":4338:4355   */\n      add\n        /* \"#utility.yul\":4331:4378   */\n      mstore\n        /* \"#utility.yul\":4395:4526   */\n      tag_231\n        /* \"#utility.yul\":4521:4525   */\n      dup2\n        /* \"#utility.yul\":4395:4526   */\n      tag_159\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":4387:4526   */\n      swap1\n      pop\n        /* \"#utility.yul\":4114:4533   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4539:4768   */\n    tag_160:\n        /* \"#utility.yul\":4679:4713   */\n      0x43726f776473616c653a2062656e656669636961727920697320746865207a65\n        /* \"#utility.yul\":4675:4676   */\n      0x00\n        /* \"#utility.yul\":4667:4673   */\n      dup3\n        /* \"#utility.yul\":4663:4677   */\n      add\n        /* \"#utility.yul\":4656:4714   */\n      mstore\n        /* \"#utility.yul\":4748:4760   */\n      0x726f206164647265737300000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4743:4745   */\n      0x20\n        /* \"#utility.yul\":4735:4741   */\n      dup3\n        /* \"#utility.yul\":4731:4746   */\n      add\n        /* \"#utility.yul\":4724:4761   */\n      mstore\n        /* \"#utility.yul\":4539:4768   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4774:5140   */\n    tag_161:\n        /* \"#utility.yul\":4916:4919   */\n      0x00\n        /* \"#utility.yul\":4937:5004   */\n      tag_234\n        /* \"#utility.yul\":5001:5003   */\n      0x2a\n        /* \"#utility.yul\":4996:4999   */\n      dup4\n        /* \"#utility.yul\":4937:5004   */\n      tag_157\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":4930:5004   */\n      swap2\n      pop\n        /* \"#utility.yul\":5013:5106   */\n      tag_235\n        /* \"#utility.yul\":5102:5105   */\n      dup3\n        /* \"#utility.yul\":5013:5106   */\n      tag_160\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":5131:5133   */\n      0x40\n        /* \"#utility.yul\":5126:5129   */\n      dup3\n        /* \"#utility.yul\":5122:5134   */\n      add\n        /* \"#utility.yul\":5115:5134   */\n      swap1\n      pop\n        /* \"#utility.yul\":4774:5140   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5146:5565   */\n    tag_70:\n        /* \"#utility.yul\":5312:5316   */\n      0x00\n        /* \"#utility.yul\":5350:5352   */\n      0x20\n        /* \"#utility.yul\":5339:5348   */\n      dup3\n        /* \"#utility.yul\":5335:5353   */\n      add\n        /* \"#utility.yul\":5327:5353   */\n      swap1\n      pop\n        /* \"#utility.yul\":5399:5408   */\n      dup2\n        /* \"#utility.yul\":5393:5397   */\n      dup2\n        /* \"#utility.yul\":5389:5409   */\n      sub\n        /* \"#utility.yul\":5385:5386   */\n      0x00\n        /* \"#utility.yul\":5374:5383   */\n      dup4\n        /* \"#utility.yul\":5370:5387   */\n      add\n        /* \"#utility.yul\":5363:5410   */\n      mstore\n        /* \"#utility.yul\":5427:5558   */\n      tag_237\n        /* \"#utility.yul\":5553:5557   */\n      dup2\n        /* \"#utility.yul\":5427:5558   */\n      tag_161\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":5419:5558   */\n      swap1\n      pop\n        /* \"#utility.yul\":5146:5565   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5571:5746   */\n    tag_162:\n        /* \"#utility.yul\":5711:5738   */\n      0x43726f776473616c653a20776569416d6f756e74206973203000000000000000\n        /* \"#utility.yul\":5707:5708   */\n      0x00\n        /* \"#utility.yul\":5699:5705   */\n      dup3\n        /* \"#utility.yul\":5695:5709   */\n      add\n        /* \"#utility.yul\":5688:5739   */\n      mstore\n        /* \"#utility.yul\":5571:5746   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5752:6118   */\n    tag_163:\n        /* \"#utility.yul\":5894:5897   */\n      0x00\n        /* \"#utility.yul\":5915:5982   */\n      tag_240\n        /* \"#utility.yul\":5979:5981   */\n      0x19\n        /* \"#utility.yul\":5974:5977   */\n      dup4\n        /* \"#utility.yul\":5915:5982   */\n      tag_157\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5908:5982   */\n      swap2\n      pop\n        /* \"#utility.yul\":5991:6084   */\n      tag_241\n        /* \"#utility.yul\":6080:6083   */\n      dup3\n        /* \"#utility.yul\":5991:6084   */\n      tag_162\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":6109:6111   */\n      0x20\n        /* \"#utility.yul\":6104:6107   */\n      dup3\n        /* \"#utility.yul\":6100:6112   */\n      add\n        /* \"#utility.yul\":6093:6112   */\n      swap1\n      pop\n        /* \"#utility.yul\":5752:6118   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6124:6543   */\n    tag_73:\n        /* \"#utility.yul\":6290:6294   */\n      0x00\n        /* \"#utility.yul\":6328:6330   */\n      0x20\n        /* \"#utility.yul\":6317:6326   */\n      dup3\n        /* \"#utility.yul\":6313:6331   */\n      add\n        /* \"#utility.yul\":6305:6331   */\n      swap1\n      pop\n        /* \"#utility.yul\":6377:6386   */\n      dup2\n        /* \"#utility.yul\":6371:6375   */\n      dup2\n        /* \"#utility.yul\":6367:6387   */\n      sub\n        /* \"#utility.yul\":6363:6364   */\n      0x00\n        /* \"#utility.yul\":6352:6361   */\n      dup4\n        /* \"#utility.yul\":6348:6365   */\n      add\n        /* \"#utility.yul\":6341:6388   */\n      mstore\n        /* \"#utility.yul\":6405:6536   */\n      tag_243\n        /* \"#utility.yul\":6531:6535   */\n      dup2\n        /* \"#utility.yul\":6405:6536   */\n      tag_163\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":6397:6536   */\n      swap1\n      pop\n        /* \"#utility.yul\":6124:6543   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6549:6729   */\n    tag_164:\n        /* \"#utility.yul\":6597:6674   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6594:6595   */\n      0x00\n        /* \"#utility.yul\":6587:6675   */\n      mstore\n        /* \"#utility.yul\":6694:6698   */\n      0x11\n        /* \"#utility.yul\":6691:6692   */\n      0x04\n        /* \"#utility.yul\":6684:6699   */\n      mstore\n        /* \"#utility.yul\":6718:6722   */\n      0x24\n        /* \"#utility.yul\":6715:6716   */\n      0x00\n        /* \"#utility.yul\":6708:6723   */\n      revert\n        /* \"#utility.yul\":6735:6926   */\n    tag_79:\n        /* \"#utility.yul\":6775:6778   */\n      0x00\n        /* \"#utility.yul\":6794:6814   */\n      tag_246\n        /* \"#utility.yul\":6812:6813   */\n      dup3\n        /* \"#utility.yul\":6794:6814   */\n      tag_141\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":6789:6814   */\n      swap2\n      pop\n        /* \"#utility.yul\":6828:6848   */\n      tag_247\n        /* \"#utility.yul\":6846:6847   */\n      dup4\n        /* \"#utility.yul\":6828:6848   */\n      tag_141\n      jump\t// in\n    tag_247:\n        /* \"#utility.yul\":6823:6848   */\n      swap3\n      pop\n        /* \"#utility.yul\":6871:6872   */\n      dup3\n        /* \"#utility.yul\":6868:6869   */\n      dup3\n        /* \"#utility.yul\":6864:6873   */\n      add\n        /* \"#utility.yul\":6857:6873   */\n      swap1\n      pop\n        /* \"#utility.yul\":6892:6895   */\n      dup1\n        /* \"#utility.yul\":6889:6890   */\n      dup3\n        /* \"#utility.yul\":6886:6896   */\n      gt\n        /* \"#utility.yul\":6883:6919   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":6899:6917   */\n      tag_249\n      tag_164\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":6883:6919   */\n    tag_248:\n        /* \"#utility.yul\":6735:6926   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6932:7342   */\n    tag_92:\n        /* \"#utility.yul\":6972:6979   */\n      0x00\n        /* \"#utility.yul\":6995:7015   */\n      tag_251\n        /* \"#utility.yul\":7013:7014   */\n      dup3\n        /* \"#utility.yul\":6995:7015   */\n      tag_141\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":6990:7015   */\n      swap2\n      pop\n        /* \"#utility.yul\":7029:7049   */\n      tag_252\n        /* \"#utility.yul\":7047:7048   */\n      dup4\n        /* \"#utility.yul\":7029:7049   */\n      tag_141\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":7024:7049   */\n      swap3\n      pop\n        /* \"#utility.yul\":7084:7085   */\n      dup3\n        /* \"#utility.yul\":7081:7082   */\n      dup3\n        /* \"#utility.yul\":7077:7086   */\n      mul\n        /* \"#utility.yul\":7106:7136   */\n      tag_253\n        /* \"#utility.yul\":7124:7135   */\n      dup2\n        /* \"#utility.yul\":7106:7136   */\n      tag_141\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":7095:7136   */\n      swap2\n      pop\n        /* \"#utility.yul\":7285:7286   */\n      dup3\n        /* \"#utility.yul\":7276:7283   */\n      dup3\n        /* \"#utility.yul\":7272:7287   */\n      div\n        /* \"#utility.yul\":7269:7270   */\n      dup5\n        /* \"#utility.yul\":7266:7288   */\n      eq\n        /* \"#utility.yul\":7246:7247   */\n      dup4\n        /* \"#utility.yul\":7239:7248   */\n      iszero\n        /* \"#utility.yul\":7219:7302   */\n      or\n        /* \"#utility.yul\":7196:7335   */\n      tag_254\n      jumpi\n        /* \"#utility.yul\":7315:7333   */\n      tag_255\n      tag_164\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":7196:7335   */\n    tag_254:\n        /* \"#utility.yul\":6980:7342   */\n      pop\n        /* \"#utility.yul\":6932:7342   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7348:7466   */\n    tag_165:\n        /* \"#utility.yul\":7435:7459   */\n      tag_257\n        /* \"#utility.yul\":7453:7458   */\n      dup2\n        /* \"#utility.yul\":7435:7459   */\n      tag_149\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":7430:7433   */\n      dup3\n        /* \"#utility.yul\":7423:7460   */\n      mstore\n        /* \"#utility.yul\":7348:7466   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7472:7804   */\n    tag_99:\n        /* \"#utility.yul\":7593:7597   */\n      0x00\n        /* \"#utility.yul\":7631:7633   */\n      0x40\n        /* \"#utility.yul\":7620:7629   */\n      dup3\n        /* \"#utility.yul\":7616:7634   */\n      add\n        /* \"#utility.yul\":7608:7634   */\n      swap1\n      pop\n        /* \"#utility.yul\":7644:7715   */\n      tag_259\n        /* \"#utility.yul\":7712:7713   */\n      0x00\n        /* \"#utility.yul\":7701:7710   */\n      dup4\n        /* \"#utility.yul\":7697:7714   */\n      add\n        /* \"#utility.yul\":7688:7694   */\n      dup6\n        /* \"#utility.yul\":7644:7715   */\n      tag_165\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":7725:7797   */\n      tag_260\n        /* \"#utility.yul\":7793:7795   */\n      0x20\n        /* \"#utility.yul\":7782:7791   */\n      dup4\n        /* \"#utility.yul\":7778:7796   */\n      add\n        /* \"#utility.yul\":7769:7775   */\n      dup5\n        /* \"#utility.yul\":7725:7797   */\n      tag_142\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":7472:7804   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7810:7900   */\n    tag_166:\n        /* \"#utility.yul\":7844:7851   */\n      0x00\n        /* \"#utility.yul\":7887:7892   */\n      dup2\n        /* \"#utility.yul\":7880:7893   */\n      iszero\n        /* \"#utility.yul\":7873:7894   */\n      iszero\n        /* \"#utility.yul\":7862:7894   */\n      swap1\n      pop\n        /* \"#utility.yul\":7810:7900   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7906:8022   */\n    tag_167:\n        /* \"#utility.yul\":7976:7997   */\n      tag_263\n        /* \"#utility.yul\":7991:7996   */\n      dup2\n        /* \"#utility.yul\":7976:7997   */\n      tag_166\n      jump\t// in\n    tag_263:\n        /* \"#utility.yul\":7969:7974   */\n      dup2\n        /* \"#utility.yul\":7966:7998   */\n      eq\n        /* \"#utility.yul\":7956:8016   */\n      tag_264\n      jumpi\n        /* \"#utility.yul\":8012:8013   */\n      0x00\n        /* \"#utility.yul\":8009:8010   */\n      dup1\n        /* \"#utility.yul\":8002:8014   */\n      revert\n        /* \"#utility.yul\":7956:8016   */\n    tag_264:\n        /* \"#utility.yul\":7906:8022   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8028:8165   */\n    tag_168:\n        /* \"#utility.yul\":8082:8087   */\n      0x00\n        /* \"#utility.yul\":8113:8119   */\n      dup2\n        /* \"#utility.yul\":8107:8120   */\n      mload\n        /* \"#utility.yul\":8098:8120   */\n      swap1\n      pop\n        /* \"#utility.yul\":8129:8159   */\n      tag_266\n        /* \"#utility.yul\":8153:8158   */\n      dup2\n        /* \"#utility.yul\":8129:8159   */\n      tag_167\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":8028:8165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8171:8516   */\n    tag_106:\n        /* \"#utility.yul\":8238:8244   */\n      0x00\n        /* \"#utility.yul\":8287:8289   */\n      0x20\n        /* \"#utility.yul\":8275:8284   */\n      dup3\n        /* \"#utility.yul\":8266:8273   */\n      dup5\n        /* \"#utility.yul\":8262:8285   */\n      sub\n        /* \"#utility.yul\":8258:8290   */\n      slt\n        /* \"#utility.yul\":8255:8374   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":8293:8372   */\n      tag_269\n      tag_147\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":8255:8374   */\n    tag_268:\n        /* \"#utility.yul\":8413:8414   */\n      0x00\n        /* \"#utility.yul\":8438:8499   */\n      tag_270\n        /* \"#utility.yul\":8491:8498   */\n      dup5\n        /* \"#utility.yul\":8482:8488   */\n      dup3\n        /* \"#utility.yul\":8471:8480   */\n      dup6\n        /* \"#utility.yul\":8467:8489   */\n      add\n        /* \"#utility.yul\":8438:8499   */\n      tag_168\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":8428:8499   */\n      swap2\n      pop\n        /* \"#utility.yul\":8384:8509   */\n      pop\n        /* \"#utility.yul\":8171:8516   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8522:8751   */\n    tag_169:\n        /* \"#utility.yul\":8662:8696   */\n      0x5361666545524332303a204552433230206f7065726174696f6e20646964206e\n        /* \"#utility.yul\":8658:8659   */\n      0x00\n        /* \"#utility.yul\":8650:8656   */\n      dup3\n        /* \"#utility.yul\":8646:8660   */\n      add\n        /* \"#utility.yul\":8639:8697   */\n      mstore\n        /* \"#utility.yul\":8731:8743   */\n      0x6f74207375636365656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8726:8728   */\n      0x20\n        /* \"#utility.yul\":8718:8724   */\n      dup3\n        /* \"#utility.yul\":8714:8729   */\n      add\n        /* \"#utility.yul\":8707:8744   */\n      mstore\n        /* \"#utility.yul\":8522:8751   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8757:9123   */\n    tag_170:\n        /* \"#utility.yul\":8899:8902   */\n      0x00\n        /* \"#utility.yul\":8920:8987   */\n      tag_273\n        /* \"#utility.yul\":8984:8986   */\n      0x2a\n        /* \"#utility.yul\":8979:8982   */\n      dup4\n        /* \"#utility.yul\":8920:8987   */\n      tag_157\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":8913:8987   */\n      swap2\n      pop\n        /* \"#utility.yul\":8996:9089   */\n      tag_274\n        /* \"#utility.yul\":9085:9088   */\n      dup3\n        /* \"#utility.yul\":8996:9089   */\n      tag_169\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":9114:9116   */\n      0x40\n        /* \"#utility.yul\":9109:9112   */\n      dup3\n        /* \"#utility.yul\":9105:9117   */\n      add\n        /* \"#utility.yul\":9098:9117   */\n      swap1\n      pop\n        /* \"#utility.yul\":8757:9123   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9129:9548   */\n    tag_109:\n        /* \"#utility.yul\":9295:9299   */\n      0x00\n        /* \"#utility.yul\":9333:9335   */\n      0x20\n        /* \"#utility.yul\":9322:9331   */\n      dup3\n        /* \"#utility.yul\":9318:9336   */\n      add\n        /* \"#utility.yul\":9310:9336   */\n      swap1\n      pop\n        /* \"#utility.yul\":9382:9391   */\n      dup2\n        /* \"#utility.yul\":9376:9380   */\n      dup2\n        /* \"#utility.yul\":9372:9392   */\n      sub\n        /* \"#utility.yul\":9368:9369   */\n      0x00\n        /* \"#utility.yul\":9357:9366   */\n      dup4\n        /* \"#utility.yul\":9353:9370   */\n      add\n        /* \"#utility.yul\":9346:9393   */\n      mstore\n        /* \"#utility.yul\":9410:9541   */\n      tag_276\n        /* \"#utility.yul\":9536:9540   */\n      dup2\n        /* \"#utility.yul\":9410:9541   */\n      tag_170\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":9402:9541   */\n      swap1\n      pop\n        /* \"#utility.yul\":9129:9548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9554:9779   */\n    tag_171:\n        /* \"#utility.yul\":9694:9728   */\n      0x416464726573733a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":9690:9691   */\n      0x00\n        /* \"#utility.yul\":9682:9688   */\n      dup3\n        /* \"#utility.yul\":9678:9692   */\n      add\n        /* \"#utility.yul\":9671:9729   */\n      mstore\n        /* \"#utility.yul\":9763:9771   */\n      0x722063616c6c0000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9758:9760   */\n      0x20\n        /* \"#utility.yul\":9750:9756   */\n      dup3\n        /* \"#utility.yul\":9746:9761   */\n      add\n        /* \"#utility.yul\":9739:9772   */\n      mstore\n        /* \"#utility.yul\":9554:9779   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9785:10151   */\n    tag_172:\n        /* \"#utility.yul\":9927:9930   */\n      0x00\n        /* \"#utility.yul\":9948:10015   */\n      tag_279\n        /* \"#utility.yul\":10012:10014   */\n      0x26\n        /* \"#utility.yul\":10007:10010   */\n      dup4\n        /* \"#utility.yul\":9948:10015   */\n      tag_157\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":9941:10015   */\n      swap2\n      pop\n        /* \"#utility.yul\":10024:10117   */\n      tag_280\n        /* \"#utility.yul\":10113:10116   */\n      dup3\n        /* \"#utility.yul\":10024:10117   */\n      tag_171\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10142:10144   */\n      0x40\n        /* \"#utility.yul\":10137:10140   */\n      dup3\n        /* \"#utility.yul\":10133:10145   */\n      add\n        /* \"#utility.yul\":10126:10145   */\n      swap1\n      pop\n        /* \"#utility.yul\":9785:10151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10157:10576   */\n    tag_116:\n        /* \"#utility.yul\":10323:10327   */\n      0x00\n        /* \"#utility.yul\":10361:10363   */\n      0x20\n        /* \"#utility.yul\":10350:10359   */\n      dup3\n        /* \"#utility.yul\":10346:10364   */\n      add\n        /* \"#utility.yul\":10338:10364   */\n      swap1\n      pop\n        /* \"#utility.yul\":10410:10419   */\n      dup2\n        /* \"#utility.yul\":10404:10408   */\n      dup2\n        /* \"#utility.yul\":10400:10420   */\n      sub\n        /* \"#utility.yul\":10396:10397   */\n      0x00\n        /* \"#utility.yul\":10385:10394   */\n      dup4\n        /* \"#utility.yul\":10381:10398   */\n      add\n        /* \"#utility.yul\":10374:10421   */\n      mstore\n        /* \"#utility.yul\":10438:10569   */\n      tag_282\n        /* \"#utility.yul\":10564:10568   */\n      dup2\n        /* \"#utility.yul\":10438:10569   */\n      tag_172\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":10430:10569   */\n      swap1\n      pop\n        /* \"#utility.yul\":10157:10576   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10582:10680   */\n    tag_173:\n        /* \"#utility.yul\":10633:10639   */\n      0x00\n        /* \"#utility.yul\":10667:10672   */\n      dup2\n        /* \"#utility.yul\":10661:10673   */\n      mload\n        /* \"#utility.yul\":10651:10673   */\n      swap1\n      pop\n        /* \"#utility.yul\":10582:10680   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10686:10833   */\n    tag_174:\n        /* \"#utility.yul\":10787:10798   */\n      0x00\n        /* \"#utility.yul\":10824:10827   */\n      dup2\n        /* \"#utility.yul\":10809:10827   */\n      swap1\n      pop\n        /* \"#utility.yul\":10686:10833   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10839:11085   */\n    tag_175:\n        /* \"#utility.yul\":10920:10921   */\n      0x00\n        /* \"#utility.yul\":10930:11043   */\n    tag_286:\n        /* \"#utility.yul\":10944:10950   */\n      dup4\n        /* \"#utility.yul\":10941:10942   */\n      dup2\n        /* \"#utility.yul\":10938:10951   */\n      lt\n        /* \"#utility.yul\":10930:11043   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":11029:11030   */\n      dup1\n        /* \"#utility.yul\":11024:11027   */\n      dup3\n        /* \"#utility.yul\":11020:11031   */\n      add\n        /* \"#utility.yul\":11014:11032   */\n      mload\n        /* \"#utility.yul\":11010:11011   */\n      dup2\n        /* \"#utility.yul\":11005:11008   */\n      dup5\n        /* \"#utility.yul\":11001:11012   */\n      add\n        /* \"#utility.yul\":10994:11033   */\n      mstore\n        /* \"#utility.yul\":10966:10968   */\n      0x20\n        /* \"#utility.yul\":10963:10964   */\n      dup2\n        /* \"#utility.yul\":10959:10969   */\n      add\n        /* \"#utility.yul\":10954:10969   */\n      swap1\n      pop\n        /* \"#utility.yul\":10930:11043   */\n      jump(tag_286)\n    tag_288:\n        /* \"#utility.yul\":11077:11078   */\n      0x00\n        /* \"#utility.yul\":11068:11074   */\n      dup5\n        /* \"#utility.yul\":11063:11066   */\n      dup5\n        /* \"#utility.yul\":11059:11075   */\n      add\n        /* \"#utility.yul\":11052:11079   */\n      mstore\n        /* \"#utility.yul\":10901:11085   */\n      pop\n        /* \"#utility.yul\":10839:11085   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11091:11477   */\n    tag_176:\n        /* \"#utility.yul\":11195:11198   */\n      0x00\n        /* \"#utility.yul\":11223:11261   */\n      tag_290\n        /* \"#utility.yul\":11255:11260   */\n      dup3\n        /* \"#utility.yul\":11223:11261   */\n      tag_173\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":11277:11365   */\n      tag_291\n        /* \"#utility.yul\":11358:11364   */\n      dup2\n        /* \"#utility.yul\":11353:11356   */\n      dup6\n        /* \"#utility.yul\":11277:11365   */\n      tag_174\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":11270:11365   */\n      swap4\n      pop\n        /* \"#utility.yul\":11374:11439   */\n      tag_292\n        /* \"#utility.yul\":11432:11438   */\n      dup2\n        /* \"#utility.yul\":11427:11430   */\n      dup6\n        /* \"#utility.yul\":11420:11424   */\n      0x20\n        /* \"#utility.yul\":11413:11418   */\n      dup7\n        /* \"#utility.yul\":11409:11425   */\n      add\n        /* \"#utility.yul\":11374:11439   */\n      tag_175\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":11464:11470   */\n      dup1\n        /* \"#utility.yul\":11459:11462   */\n      dup5\n        /* \"#utility.yul\":11455:11471   */\n      add\n        /* \"#utility.yul\":11448:11471   */\n      swap2\n      pop\n        /* \"#utility.yul\":11199:11477   */\n      pop\n        /* \"#utility.yul\":11091:11477   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11483:11754   */\n    tag_118:\n        /* \"#utility.yul\":11613:11616   */\n      0x00\n        /* \"#utility.yul\":11635:11728   */\n      tag_294\n        /* \"#utility.yul\":11724:11727   */\n      dup3\n        /* \"#utility.yul\":11715:11721   */\n      dup5\n        /* \"#utility.yul\":11635:11728   */\n      tag_176\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11628:11728   */\n      swap2\n      pop\n        /* \"#utility.yul\":11745:11748   */\n      dup2\n        /* \"#utility.yul\":11738:11748   */\n      swap1\n      pop\n        /* \"#utility.yul\":11483:11754   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11760:11939   */\n    tag_177:\n        /* \"#utility.yul\":11900:11931   */\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n        /* \"#utility.yul\":11896:11897   */\n      0x00\n        /* \"#utility.yul\":11888:11894   */\n      dup3\n        /* \"#utility.yul\":11884:11898   */\n      add\n        /* \"#utility.yul\":11877:11932   */\n      mstore\n        /* \"#utility.yul\":11760:11939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11945:12311   */\n    tag_178:\n        /* \"#utility.yul\":12087:12090   */\n      0x00\n        /* \"#utility.yul\":12108:12175   */\n      tag_297\n        /* \"#utility.yul\":12172:12174   */\n      0x1d\n        /* \"#utility.yul\":12167:12170   */\n      dup4\n        /* \"#utility.yul\":12108:12175   */\n      tag_157\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":12101:12175   */\n      swap2\n      pop\n        /* \"#utility.yul\":12184:12277   */\n      tag_298\n        /* \"#utility.yul\":12273:12276   */\n      dup3\n        /* \"#utility.yul\":12184:12277   */\n      tag_177\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":12302:12304   */\n      0x20\n        /* \"#utility.yul\":12297:12300   */\n      dup3\n        /* \"#utility.yul\":12293:12305   */\n      add\n        /* \"#utility.yul\":12286:12305   */\n      swap1\n      pop\n        /* \"#utility.yul\":11945:12311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12317:12736   */\n    tag_131:\n        /* \"#utility.yul\":12483:12487   */\n      0x00\n        /* \"#utility.yul\":12521:12523   */\n      0x20\n        /* \"#utility.yul\":12510:12519   */\n      dup3\n        /* \"#utility.yul\":12506:12524   */\n      add\n        /* \"#utility.yul\":12498:12524   */\n      swap1\n      pop\n        /* \"#utility.yul\":12570:12579   */\n      dup2\n        /* \"#utility.yul\":12564:12568   */\n      dup2\n        /* \"#utility.yul\":12560:12580   */\n      sub\n        /* \"#utility.yul\":12556:12557   */\n      0x00\n        /* \"#utility.yul\":12545:12554   */\n      dup4\n        /* \"#utility.yul\":12541:12558   */\n      add\n        /* \"#utility.yul\":12534:12581   */\n      mstore\n        /* \"#utility.yul\":12598:12729   */\n      tag_300\n        /* \"#utility.yul\":12724:12728   */\n      dup2\n        /* \"#utility.yul\":12598:12729   */\n      tag_178\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12590:12729   */\n      swap1\n      pop\n        /* \"#utility.yul\":12317:12736   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12742:12841   */\n    tag_179:\n        /* \"#utility.yul\":12794:12800   */\n      0x00\n        /* \"#utility.yul\":12828:12833   */\n      dup2\n        /* \"#utility.yul\":12822:12834   */\n      mload\n        /* \"#utility.yul\":12812:12834   */\n      swap1\n      pop\n        /* \"#utility.yul\":12742:12841   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12847:12949   */\n    tag_180:\n        /* \"#utility.yul\":12888:12894   */\n      0x00\n        /* \"#utility.yul\":12939:12941   */\n      0x1f\n        /* \"#utility.yul\":12935:12942   */\n      not\n        /* \"#utility.yul\":12930:12932   */\n      0x1f\n        /* \"#utility.yul\":12923:12928   */\n      dup4\n        /* \"#utility.yul\":12919:12933   */\n      add\n        /* \"#utility.yul\":12915:12943   */\n      and\n        /* \"#utility.yul\":12905:12943   */\n      swap1\n      pop\n        /* \"#utility.yul\":12847:12949   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12955:13332   */\n    tag_181:\n        /* \"#utility.yul\":13043:13046   */\n      0x00\n        /* \"#utility.yul\":13071:13110   */\n      tag_304\n        /* \"#utility.yul\":13104:13109   */\n      dup3\n        /* \"#utility.yul\":13071:13110   */\n      tag_179\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":13126:13197   */\n      tag_305\n        /* \"#utility.yul\":13190:13196   */\n      dup2\n        /* \"#utility.yul\":13185:13188   */\n      dup6\n        /* \"#utility.yul\":13126:13197   */\n      tag_157\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":13119:13197   */\n      swap4\n      pop\n        /* \"#utility.yul\":13206:13271   */\n      tag_306\n        /* \"#utility.yul\":13264:13270   */\n      dup2\n        /* \"#utility.yul\":13259:13262   */\n      dup6\n        /* \"#utility.yul\":13252:13256   */\n      0x20\n        /* \"#utility.yul\":13245:13250   */\n      dup7\n        /* \"#utility.yul\":13241:13257   */\n      add\n        /* \"#utility.yul\":13206:13271   */\n      tag_175\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":13296:13325   */\n      tag_307\n        /* \"#utility.yul\":13318:13324   */\n      dup2\n        /* \"#utility.yul\":13296:13325   */\n      tag_180\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":13291:13294   */\n      dup5\n        /* \"#utility.yul\":13287:13326   */\n      add\n        /* \"#utility.yul\":13280:13326   */\n      swap2\n      pop\n        /* \"#utility.yul\":13047:13332   */\n      pop\n        /* \"#utility.yul\":12955:13332   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13338:13651   */\n    tag_140:\n        /* \"#utility.yul\":13451:13455   */\n      0x00\n        /* \"#utility.yul\":13489:13491   */\n      0x20\n        /* \"#utility.yul\":13478:13487   */\n      dup3\n        /* \"#utility.yul\":13474:13492   */\n      add\n        /* \"#utility.yul\":13466:13492   */\n      swap1\n      pop\n        /* \"#utility.yul\":13538:13547   */\n      dup2\n        /* \"#utility.yul\":13532:13536   */\n      dup2\n        /* \"#utility.yul\":13528:13548   */\n      sub\n        /* \"#utility.yul\":13524:13525   */\n      0x00\n        /* \"#utility.yul\":13513:13522   */\n      dup4\n        /* \"#utility.yul\":13509:13526   */\n      add\n        /* \"#utility.yul\":13502:13549   */\n      mstore\n        /* \"#utility.yul\":13566:13644   */\n      tag_309\n        /* \"#utility.yul\":13639:13643   */\n      dup2\n        /* \"#utility.yul\":13630:13636   */\n      dup5\n        /* \"#utility.yul\":13566:13644   */\n      tag_181\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":13558:13644   */\n      swap1\n      pop\n        /* \"#utility.yul\":13338:13651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122066d716b82eba2b274a57d2de82413b766b8be45fe49927ef08f5daaeb42bd28664736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_317": {
									"entryPoint": null,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_91": {
									"entryPoint": null,
									"id": 91,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable_fromMemory": {
									"entryPoint": 649,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$430_fromMemory": {
									"entryPoint": 738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$430_fromMemory": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 950,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$430": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 507,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82": {
									"entryPoint": 1136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6": {
									"entryPoint": 984,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$430": {
									"entryPoint": 712,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5707:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:8",
														"type": ""
													}
												],
												"src": "7:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:8",
														"type": ""
													}
												],
												"src": "334:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:8"
															},
															"nodeType": "YulIf",
															"src": "470:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:8",
														"type": ""
													}
												],
												"src": "417:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "608:80:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "618:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "649:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "649:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "586:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "594:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "602:5:8",
														"type": ""
													}
												],
												"src": "545:143:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "739:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "749:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "764:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "771:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "760:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "760:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "749:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "721:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "731:7:8",
														"type": ""
													}
												],
												"src": "694:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "918:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "900:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "861:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "871:7:8",
														"type": ""
													}
												],
												"src": "826:104:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "987:87:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1052:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1061:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1054:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1054:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1054:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1010:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1043:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1017:25:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1017:32:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1007:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1007:43:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1000:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1000:51:8"
															},
															"nodeType": "YulIf",
															"src": "997:71:8"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "980:5:8",
														"type": ""
													}
												],
												"src": "936:138:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1151:88:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1161:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1176:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1170:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1170:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1161:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1227:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "1192:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1192:41:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1192:41:8"
														}
													]
												},
												"name": "abi_decode_t_address_payable_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1129:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1137:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1145:5:8",
														"type": ""
													}
												],
												"src": "1080:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1290:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1300:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1329:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1311:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1311:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1300:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1272:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1282:7:8",
														"type": ""
													}
												],
												"src": "1245:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1406:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1416:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1445:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1427:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1427:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1416:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$430",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1388:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1398:7:8",
														"type": ""
													}
												],
												"src": "1347:110:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1520:93:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1543:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1582:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$430",
																					"nodeType": "YulIdentifier",
																					"src": "1550:31:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1550:38:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1540:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1540:49:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1533:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1533:57:8"
															},
															"nodeType": "YulIf",
															"src": "1530:77:8"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$430",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1513:5:8",
														"type": ""
													}
												],
												"src": "1463:150:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1696:94:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1706:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1721:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1715:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1706:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1778:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$430",
																	"nodeType": "YulIdentifier",
																	"src": "1737:40:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1737:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1737:47:8"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$430_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1674:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1682:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1690:5:8",
														"type": ""
													}
												],
												"src": "1619:171:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1929:574:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1975:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1977:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1977:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1977:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1950:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1959:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1946:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1946:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1971:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1942:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1942:32:8"
															},
															"nodeType": "YulIf",
															"src": "1939:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "2068:128:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2083:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2087:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2112:74:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2122:31:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:64:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2112:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2206:137:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2221:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2235:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2225:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2251:82:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2305:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2316:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2301:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2301:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2325:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2261:39:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2261:72:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2251:6:8"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2353:143:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2368:16:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2382:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2372:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2398:88:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$430_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "2408:45:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:78:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2398:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$430_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1883:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1894:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1906:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1914:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1922:6:8",
														"type": ""
													}
												],
												"src": "1796:707:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2605:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2622:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2627:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2615:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2615:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2615:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2643:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2662:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2667:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2658:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "2643:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2577:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2582:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "2593:11:8",
														"type": ""
													}
												],
												"src": "2509:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2790:64:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2812:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2820:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:14:8"
																	},
																	{
																		"hexValue": "43726f776473616c653a20726174652069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2824:22:8",
																		"type": "",
																		"value": "Crowdsale: rate is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2801:46:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2801:46:8"
														}
													]
												},
												"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2782:6:8",
														"type": ""
													}
												],
												"src": "2684:170:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3006:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3016:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3082:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3087:2:8",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3023:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3023:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3016:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3188:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																	"nodeType": "YulIdentifier",
																	"src": "3099:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3099:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3201:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3208:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3208:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2994:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3002:3:8",
														"type": ""
													}
												],
												"src": "2860:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3403:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3413:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3425:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3436:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3421:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3421:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3413:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3460:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3471:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3456:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3456:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3479:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3449:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3449:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3449:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3505:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3639:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3513:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3513:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3505:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3383:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3398:4:8",
														"type": ""
													}
												],
												"src": "3232:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3763:118:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3785:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3793:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3781:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3781:14:8"
																	},
																	{
																		"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3797:34:8",
																		"type": "",
																		"value": "Crowdsale: wallet is the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3774:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3774:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3774:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3853:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3861:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:15:8"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3866:7:8",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3842:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3842:32:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3842:32:8"
														}
													]
												},
												"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3755:6:8",
														"type": ""
													}
												],
												"src": "3657:224:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4033:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4043:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4109:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:8",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4050:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4043:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																	"nodeType": "YulIdentifier",
																	"src": "4126:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4126:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4126:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4228:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4239:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4244:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4235:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4228:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4021:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4029:3:8",
														"type": ""
													}
												],
												"src": "3887:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4430:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4440:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4448:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4487:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4498:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4483:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4483:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4506:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4512:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4502:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4476:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4476:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4476:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4532:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4666:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4540:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4540:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4532:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4410:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4425:4:8",
														"type": ""
													}
												],
												"src": "4259:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4790:117:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4812:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4820:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4808:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4808:14:8"
																	},
																	{
																		"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4824:34:8",
																		"type": "",
																		"value": "Crowdsale: token is the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4801:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4880:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4888:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:15:8"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4893:6:8",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:31:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4869:31:8"
														}
													]
												},
												"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4782:6:8",
														"type": ""
													}
												],
												"src": "4684:223:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5059:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5069:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5135:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5140:2:8",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5076:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5076:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5069:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5241:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																	"nodeType": "YulIdentifier",
																	"src": "5152:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5152:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5254:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5265:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5270:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5261:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5261:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5254:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5047:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5055:3:8",
														"type": ""
													}
												],
												"src": "4913:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5466:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5489:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5474:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5524:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5509:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5532:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5538:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5528:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5528:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5502:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5502:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5558:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5692:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5566:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5558:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5436:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5451:4:8",
														"type": ""
													}
												],
												"src": "5285:419:8"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$430(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$430(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$430(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$430_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$430(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payablet_contract$_IERC20_$430_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IERC20_$430_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: rate is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: wallet is the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: token is the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620013f1380380620013f18339818101604052810190620000379190620002f9565b60016000819055506000831162000085576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200007c90620003b6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620000f7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620000ee906200044e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000169576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200016090620004e6565b60405180910390fd5b8260038190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505062000508565b600080fd5b6000819050919050565b620002158162000200565b81146200022157600080fd5b50565b60008151905062000235816200020a565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000268826200023b565b9050919050565b6200027a816200025b565b81146200028657600080fd5b50565b6000815190506200029a816200026f565b92915050565b6000620002ad826200023b565b9050919050565b6000620002c182620002a0565b9050919050565b620002d381620002b4565b8114620002df57600080fd5b50565b600081519050620002f381620002c8565b92915050565b600080600060608486031215620003155762000314620001fb565b5b6000620003258682870162000224565b9350506020620003388682870162000289565b92505060406200034b86828701620002e2565b9150509250925092565b600082825260208201905092915050565b7f43726f776473616c653a20726174652069732030000000000000000000000000600082015250565b60006200039e60148362000355565b9150620003ab8262000366565b602082019050919050565b60006020820190508181036000830152620003d1816200038f565b9050919050565b7f43726f776473616c653a2077616c6c657420697320746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006200043660258362000355565b91506200044382620003d8565b604082019050919050565b60006020820190508181036000830152620004698162000427565b9050919050565b7f43726f776473616c653a20746f6b656e20697320746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000620004ce60248362000355565b9150620004db8262000470565b604082019050919050565b600060208201905081810360008301526200050181620004bf565b9050919050565b610ed980620005186000396000f3fe60806040526004361061004e5760003560e01c80632c4e722e146100575780634042b66f14610082578063521eb273146100ad578063ec8ac4d8146100d8578063fc0c546a146100f457610055565b3661005557005b005b34801561006357600080fd5b5061006c61011f565b60405161007991906107cd565b60405180910390f35b34801561008e57600080fd5b50610097610129565b6040516100a491906107cd565b60405180910390f35b3480156100b957600080fd5b506100c2610133565b6040516100cf9190610829565b60405180910390f35b6100f260048036038101906100ed9190610887565b61015d565b005b34801561010057600080fd5b5061010961023d565b6040516101169190610913565b60405180910390f35b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610165610267565b600034905061017482826102b6565b600061017f8261036c565b90506101968260045461038a90919063ffffffff16565b6004819055506101a683826103a0565b8273ffffffffffffffffffffffffffffffffffffffff166101c56103ae565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b848460405161020c92919061092e565b60405180910390a361021e83836103b6565b6102266103ba565b6102308383610425565b505061023a610429565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002600054036102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906109b4565b60405180910390fd5b6002600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031c90610a46565b60405180910390fd5b60008103610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90610ab2565b60405180910390fd5b5050565b60006103836003548361043390919063ffffffff16565b9050919050565b600081836103989190610b01565b905092915050565b6103aa8282610449565b5050565b600033905090565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610422573d6000803e3d6000fd5b50565b5050565b6001600081905550565b600081836104419190610b35565b905092915050565b6104968282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661049a9092919063ffffffff16565b5050565b61051b8363a9059cbb60e01b84846040516024016104b9929190610b86565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610520565b505050565b6000610582826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105e79092919063ffffffff16565b90506000815111156105e257808060200190518101906105a29190610be7565b6105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d890610c86565b60405180910390fd5b5b505050565b60606105f684846000856105ff565b90509392505050565b606082471015610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90610d18565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161066d9190610da9565b60006040518083038185875af1925050503d80600081146106aa576040519150601f19603f3d011682016040523d82523d6000602084013e6106af565b606091505b50915091506106c0878383876106cc565b92505050949350505050565b6060831561072e576000835103610726576106e685610741565b610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90610e0c565b60405180910390fd5b5b829050610739565b6107388383610764565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156107775781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab9190610e81565b60405180910390fd5b6000819050919050565b6107c7816107b4565b82525050565b60006020820190506107e260008301846107be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610813826107e8565b9050919050565b61082381610808565b82525050565b600060208201905061083e600083018461081a565b92915050565b600080fd5b6000610854826107e8565b9050919050565b61086481610849565b811461086f57600080fd5b50565b6000813590506108818161085b565b92915050565b60006020828403121561089d5761089c610844565b5b60006108ab84828501610872565b91505092915050565b6000819050919050565b60006108d96108d46108cf846107e8565b6108b4565b6107e8565b9050919050565b60006108eb826108be565b9050919050565b60006108fd826108e0565b9050919050565b61090d816108f2565b82525050565b60006020820190506109286000830184610904565b92915050565b600060408201905061094360008301856107be565b61095060208301846107be565b9392505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061099e601f83610957565b91506109a982610968565b602082019050919050565b600060208201905081810360008301526109cd81610991565b9050919050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000610a30602a83610957565b9150610a3b826109d4565b604082019050919050565b60006020820190508181036000830152610a5f81610a23565b9050919050565b7f43726f776473616c653a20776569416d6f756e74206973203000000000000000600082015250565b6000610a9c601983610957565b9150610aa782610a66565b602082019050919050565b60006020820190508181036000830152610acb81610a8f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0c826107b4565b9150610b17836107b4565b9250828201905080821115610b2f57610b2e610ad2565b5b92915050565b6000610b40826107b4565b9150610b4b836107b4565b9250828202610b59816107b4565b91508282048414831517610b7057610b6f610ad2565b5b5092915050565b610b8081610849565b82525050565b6000604082019050610b9b6000830185610b77565b610ba860208301846107be565b9392505050565b60008115159050919050565b610bc481610baf565b8114610bcf57600080fd5b50565b600081519050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610844565b5b6000610c0b84828501610bd2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610c70602a83610957565b9150610c7b82610c14565b604082019050919050565b60006020820190508181036000830152610c9f81610c63565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610d02602683610957565b9150610d0d82610ca6565b604082019050919050565b60006020820190508181036000830152610d3181610cf5565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610d6c578082015181840152602081019050610d51565b60008484015250505050565b6000610d8382610d38565b610d8d8185610d43565b9350610d9d818560208601610d4e565b80840191505092915050565b6000610db58284610d78565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610df6601d83610957565b9150610e0182610dc0565b602082019050919050565b60006020820190508181036000830152610e2581610de9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610e5382610e2c565b610e5d8185610957565b9350610e6d818560208601610d4e565b610e7681610e37565b840191505092915050565b60006020820190508181036000830152610e9b8184610e48565b90509291505056fea264697066735822122066d716b82eba2b274a57d2de82413b766b8be45fe49927ef08f5daaeb42bd28664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x13F1 CODESIZE SUB DUP1 PUSH3 0x13F1 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2F9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP4 GT PUSH3 0x85 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x7C SWAP1 PUSH3 0x3B6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xF7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xEE SWAP1 PUSH3 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x169 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x160 SWAP1 PUSH3 0x4E6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH3 0x508 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x215 DUP2 PUSH3 0x200 JUMP JUMPDEST DUP2 EQ PUSH3 0x221 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x235 DUP2 PUSH3 0x20A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x268 DUP3 PUSH3 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x27A DUP2 PUSH3 0x25B JUMP JUMPDEST DUP2 EQ PUSH3 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x29A DUP2 PUSH3 0x26F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2AD DUP3 PUSH3 0x23B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2C1 DUP3 PUSH3 0x2A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x2D3 DUP2 PUSH3 0x2B4 JUMP JUMPDEST DUP2 EQ PUSH3 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x2F3 DUP2 PUSH3 0x2C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x315 JUMPI PUSH3 0x314 PUSH3 0x1FB JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x325 DUP7 DUP3 DUP8 ADD PUSH3 0x224 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH3 0x338 DUP7 DUP3 DUP8 ADD PUSH3 0x289 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x34B DUP7 DUP3 DUP8 ADD PUSH3 0x2E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20726174652069732030000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x39E PUSH1 0x14 DUP4 PUSH3 0x355 JUMP JUMPDEST SWAP2 POP PUSH3 0x3AB DUP3 PUSH3 0x366 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x3D1 DUP2 PUSH3 0x38F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2077616C6C657420697320746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x436 PUSH1 0x25 DUP4 PUSH3 0x355 JUMP JUMPDEST SWAP2 POP PUSH3 0x443 DUP3 PUSH3 0x3D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x469 DUP2 PUSH3 0x427 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20746F6B656E20697320746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4CE PUSH1 0x24 DUP4 PUSH3 0x355 JUMP JUMPDEST SWAP2 POP PUSH3 0x4DB DUP3 PUSH3 0x470 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH3 0x501 DUP2 PUSH3 0x4BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xED9 DUP1 PUSH3 0x518 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xF4 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x174 DUP3 DUP3 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F DUP3 PUSH2 0x36C JUMP JUMPDEST SWAP1 POP PUSH2 0x196 DUP3 PUSH1 0x4 SLOAD PUSH2 0x38A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1A6 DUP4 DUP3 PUSH2 0x3A0 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C5 PUSH2 0x3AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x20C SWAP3 SWAP2 SWAP1 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x21E DUP4 DUP4 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x230 DUP4 DUP4 PUSH2 0x425 JUMP JUMPDEST POP POP PUSH2 0x23A PUSH2 0x429 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP1 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH1 0x3 SLOAD DUP4 PUSH2 0x433 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AA DUP3 DUP3 PUSH2 0x449 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x422 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x496 DUP3 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x49A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4B9 SWAP3 SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x520 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x5E2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63B SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6C0 DUP8 DUP4 DUP4 DUP8 PUSH2 0x6CC JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x726 JUMPI PUSH2 0x6E6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP1 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x739 JUMP JUMPDEST PUSH2 0x738 DUP4 DUP4 PUSH2 0x764 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x777 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH2 0x7B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x823 DUP2 PUSH2 0x808 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x83E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x81A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x854 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x864 DUP2 PUSH2 0x849 JUMP JUMPDEST DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x881 DUP2 PUSH2 0x85B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0x844 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8AB DUP5 DUP3 DUP6 ADD PUSH2 0x872 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 PUSH2 0x8D4 PUSH2 0x8CF DUP5 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FD DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90D DUP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x928 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x904 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x943 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x950 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E PUSH1 0x1F DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A9 DUP3 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CD DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA30 PUSH1 0x2A DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3B DUP3 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA5F DUP2 PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9C PUSH1 0x19 DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA7 DUP3 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACB DUP2 PUSH2 0xA8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB17 DUP4 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0xAD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4B DUP4 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB59 DUP2 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB70 JUMPI PUSH2 0xB6F PUSH2 0xAD2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0x849 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB9B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0xBA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0xBAF JUMP JUMPDEST DUP2 EQ PUSH2 0xBCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE1 DUP2 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0x844 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0B DUP5 DUP3 DUP6 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 PUSH1 0x2A DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7B DUP3 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9F DUP2 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD02 PUSH1 0x26 DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0D DUP3 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD31 DUP2 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD83 DUP3 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xD8D DUP2 DUP6 PUSH2 0xD43 JUMP JUMPDEST SWAP4 POP PUSH2 0xD9D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB5 DUP3 DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF6 PUSH1 0x1D DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP3 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE25 DUP2 PUSH2 0xDE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xE5D DUP2 DUP6 PUSH2 0x957 JUMP JUMPDEST SWAP4 POP PUSH2 0xE6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4E JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE37 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9B DUP2 DUP5 PUSH2 0xE48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD716B82EBA2B27 0x4A JUMPI 0xD2 0xDE DUP3 COINBASE EXTCODESIZE PUSH23 0x6B8BE45FE49927EF08F5DAAEB42BD28664736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "1234:6887:0:-:0;;;2657:370;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:1;1821:7;:22;;;;2754:1:0;2747:4;:8;2739:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;2816:1;2798:20;;:6;:20;;;2790:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;2904:1;2878:28;;2886:5;2878:28;;;2870:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2966:4;2958:5;:12;;;;2990:6;2980:7;;:16;;;;;;;;;;;;;;;;;;3015:5;3006:6;;:14;;;;;;;;;;;;;;;;;;2657:370;;;1234:6887;;88:117:8;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:126::-;731:7;771:42;764:5;760:54;749:65;;694:126;;;:::o;826:104::-;871:7;900:24;918:5;900:24;:::i;:::-;889:35;;826:104;;;:::o;936:138::-;1017:32;1043:5;1017:32;:::i;:::-;1010:5;1007:43;997:71;;1064:1;1061;1054:12;997:71;936:138;:::o;1080:159::-;1145:5;1176:6;1170:13;1161:22;;1192:41;1227:5;1192:41;:::i;:::-;1080:159;;;;:::o;1245:96::-;1282:7;1311:24;1329:5;1311:24;:::i;:::-;1300:35;;1245:96;;;:::o;1347:110::-;1398:7;1427:24;1445:5;1427:24;:::i;:::-;1416:35;;1347:110;;;:::o;1463:150::-;1550:38;1582:5;1550:38;:::i;:::-;1543:5;1540:49;1530:77;;1603:1;1600;1593:12;1530:77;1463:150;:::o;1619:171::-;1690:5;1721:6;1715:13;1706:22;;1737:47;1778:5;1737:47;:::i;:::-;1619:171;;;;:::o;1796:707::-;1906:6;1914;1922;1971:2;1959:9;1950:7;1946:23;1942:32;1939:119;;;1977:79;;:::i;:::-;1939:119;2097:1;2122:64;2178:7;2169:6;2158:9;2154:22;2122:64;:::i;:::-;2112:74;;2068:128;2235:2;2261:72;2325:7;2316:6;2305:9;2301:22;2261:72;:::i;:::-;2251:82;;2206:137;2382:2;2408:78;2478:7;2469:6;2458:9;2454:22;2408:78;:::i;:::-;2398:88;;2353:143;1796:707;;;;;:::o;2509:169::-;2593:11;2627:6;2622:3;2615:19;2667:4;2662:3;2658:14;2643:29;;2509:169;;;;:::o;2684:170::-;2824:22;2820:1;2812:6;2808:14;2801:46;2684:170;:::o;2860:366::-;3002:3;3023:67;3087:2;3082:3;3023:67;:::i;:::-;3016:74;;3099:93;3188:3;3099:93;:::i;:::-;3217:2;3212:3;3208:12;3201:19;;2860:366;;;:::o;3232:419::-;3398:4;3436:2;3425:9;3421:18;3413:26;;3485:9;3479:4;3475:20;3471:1;3460:9;3456:17;3449:47;3513:131;3639:4;3513:131;:::i;:::-;3505:139;;3232:419;;;:::o;3657:224::-;3797:34;3793:1;3785:6;3781:14;3774:58;3866:7;3861:2;3853:6;3849:15;3842:32;3657:224;:::o;3887:366::-;4029:3;4050:67;4114:2;4109:3;4050:67;:::i;:::-;4043:74;;4126:93;4215:3;4126:93;:::i;:::-;4244:2;4239:3;4235:12;4228:19;;3887:366;;;:::o;4259:419::-;4425:4;4463:2;4452:9;4448:18;4440:26;;4512:9;4506:4;4502:20;4498:1;4487:9;4483:17;4476:47;4540:131;4666:4;4540:131;:::i;:::-;4532:139;;4259:419;;;:::o;4684:223::-;4824:34;4820:1;4812:6;4808:14;4801:58;4893:6;4888:2;4880:6;4876:15;4869:31;4684:223;:::o;4913:366::-;5055:3;5076:67;5140:2;5135:3;5076:67;:::i;:::-;5069:74;;5152:93;5241:3;5152:93;:::i;:::-;5270:2;5265:3;5261:12;5254:19;;4913:366;;;:::o;5285:419::-;5451:4;5489:2;5478:9;5474:18;5466:26;;5538:9;5532:4;5528:20;5524:1;5513:9;5509:17;5502:47;5566:131;5692:4;5566:131;:::i;:::-;5558:139;;5285:419;;;:::o;1234:6887:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_100": {
									"entryPoint": null,
									"id": 100,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_746": {
									"entryPoint": 1312,
									"id": 746,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_deliverTokens_248": {
									"entryPoint": 1097,
									"id": 248,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_forwardFunds_297": {
									"entryPoint": 954,
									"id": 297,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getTokenAmount_285": {
									"entryPoint": 876,
									"id": 285,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_1089": {
									"entryPoint": 942,
									"id": 1089,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_351": {
									"entryPoint": 1065,
									"id": 351,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_343": {
									"entryPoint": 615,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_postValidatePurchase_232": {
									"entryPoint": 1061,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_preValidatePurchase_223": {
									"entryPoint": 694,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_processPurchase_262": {
									"entryPoint": 928,
									"id": 262,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_revert_1076": {
									"entryPoint": 1892,
									"id": 1076,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_updatePurchasingState_271": {
									"entryPoint": 950,
									"id": 271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@add_1275": {
									"entryPoint": 906,
									"id": 1275,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@buyTokens_195": {
									"entryPoint": 349,
									"id": 195,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionCallWithValue_901": {
									"entryPoint": 1535,
									"id": 901,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@functionCall_837": {
									"entryPoint": 1511,
									"id": 837,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@isContract_765": {
									"entryPoint": 1857,
									"id": 765,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mul_1305": {
									"entryPoint": 1075,
									"id": 1305,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@rate_128": {
									"entryPoint": 287,
									"id": 128,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@safeTransfer_498": {
									"entryPoint": 1178,
									"id": 498,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@token_110": {
									"entryPoint": 573,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_1032": {
									"entryPoint": 1740,
									"id": 1032,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@wallet_119": {
									"entryPoint": 307,
									"id": 119,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@weiRaised_137": {
									"entryPoint": 297,
									"id": 137,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3047,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 2074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2935,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack": {
									"entryPoint": 2308,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3656,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3317,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3171,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 2703,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 3497,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
									"entryPoint": 2089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 2950,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$430__to_t_address__fromStack_reversed": {
									"entryPoint": 2323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3352,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3206,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2484,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 2738,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1997,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2350,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 3384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 3395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2817,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2869,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 2056,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 2991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$430_to_t_address": {
									"entryPoint": 2290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 2228,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2116,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3639,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c": {
									"entryPoint": 3238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad": {
									"entryPoint": 3520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd": {
									"entryPoint": 3092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2408,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c": {
									"entryPoint": 2662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 3003,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13654:8",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "52:32:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "62:16:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "73:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "34:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "44:7:8",
														"type": ""
													}
												],
												"src": "7:77:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "155:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "165:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "165:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "143:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "150:3:8",
														"type": ""
													}
												],
												"src": "90:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "312:124:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "322:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "345:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "330:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "426:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "358:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "284:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "296:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "307:4:8",
														"type": ""
													}
												],
												"src": "214:222:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:81:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "512:5:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "519:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "508:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "497:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "479:7:8",
														"type": ""
													}
												],
												"src": "442:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "627:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "637:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "666:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "648:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "637:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "609:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "619:7:8",
														"type": ""
													}
												],
												"src": "574:104:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "765:61:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "782:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "813:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "787:25:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "787:32:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:45:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:45:8"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "760:3:8",
														"type": ""
													}
												],
												"src": "684:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "946:140:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "956:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "968:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "979:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "956:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1052:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1065:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1076:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1061:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1061:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "992:59:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:87:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "992:87:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "918:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "930:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "941:4:8",
														"type": ""
													}
												],
												"src": "832:254:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1132:35:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1142:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1158:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1152:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1142:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1125:6:8",
														"type": ""
													}
												],
												"src": "1092:75:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1262:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1279:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1282:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1272:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1272:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1173:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1385:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1402:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1405:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1395:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1395:12:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1395:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1296:117:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1464:51:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1474:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1503:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1485:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1485:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1474:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1446:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1456:7:8",
														"type": ""
													}
												],
												"src": "1419:96:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1564:79:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1621:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1630:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1633:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1623:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1623:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1623:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1587:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1612:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1594:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1594:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1584:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1584:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1577:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1577:43:8"
															},
															"nodeType": "YulIf",
															"src": "1574:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1557:5:8",
														"type": ""
													}
												],
												"src": "1521:122:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1701:87:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1711:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1733:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1720:12:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1720:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1711:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1776:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1749:26:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1749:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1749:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1679:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1687:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1695:5:8",
														"type": ""
													}
												],
												"src": "1649:139:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:263:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1906:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1908:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1908:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1908:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1881:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1890:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1877:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1877:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1902:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "1873:32:8"
															},
															"nodeType": "YulIf",
															"src": "1870:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "1999:117:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2014:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2018:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2043:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2078:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2089:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2074:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2074:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2098:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2053:20:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2053:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2043:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1830:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1841:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1853:6:8",
														"type": ""
													}
												],
												"src": "1794:329:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2161:28:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2171:12:8",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2178:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "2171:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2147:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "2157:3:8",
														"type": ""
													}
												],
												"src": "2129:60:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2255:82:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2265:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2323:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "2305:17:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2305:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "2296:8:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2296:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2278:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2278:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2265:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2235:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2245:9:8",
														"type": ""
													}
												],
												"src": "2195:142:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2403:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2413:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2457:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2426:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2426:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2413:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2383:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2393:9:8",
														"type": ""
													}
												],
												"src": "2343:126:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2549:66:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2559:50:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2603:5:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2572:30:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:37:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "2559:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$430_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "2539:9:8",
														"type": ""
													}
												],
												"src": "2475:140:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2700:80:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2717:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2767:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$430_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2722:44:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2722:51:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2710:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:64:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2710:64:8"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2688:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2695:3:8",
														"type": ""
													}
												],
												"src": "2621:159:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2898:138:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2908:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2920:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2931:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2916:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2916:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2908:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3002:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3015:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3026:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3011:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3011:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2944:57:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "2944:85:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2944:85:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$430__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2870:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2882:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2893:4:8",
														"type": ""
													}
												],
												"src": "2786:250:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3168:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3178:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3190:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3201:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3186:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3186:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3178:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3258:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3271:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3282:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3267:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3267:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3214:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3214:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3214:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3339:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3352:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3363:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3348:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3348:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3295:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3295:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3132:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3144:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3152:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3163:4:8",
														"type": ""
													}
												],
												"src": "3042:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3476:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3493:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3498:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3486:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:19:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3486:19:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3514:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3538:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3529:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3529:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3514:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3448:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3453:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3464:11:8",
														"type": ""
													}
												],
												"src": "3380:169:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3661:75:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3683:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3691:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3679:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3679:14:8"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3695:33:8",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3672:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3672:57:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3672:57:8"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "3653:6:8",
														"type": ""
													}
												],
												"src": "3555:181:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3888:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3898:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3964:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3969:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3905:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3905:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4070:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "3981:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "3981:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3981:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4083:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4094:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4099:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4090:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4090:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4083:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3876:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3884:3:8",
														"type": ""
													}
												],
												"src": "3742:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4285:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4295:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4307:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4318:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4303:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4295:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4342:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4353:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4338:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4338:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4361:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4367:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4357:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4357:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4331:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4331:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4331:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4387:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4521:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4395:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4395:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4387:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4265:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4280:4:8",
														"type": ""
													}
												],
												"src": "4114:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4645:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4667:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4663:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4663:14:8"
																	},
																	{
																		"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4679:34:8",
																		"type": "",
																		"value": "Crowdsale: beneficiary is the ze"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4656:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4656:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4735:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4743:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4731:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4731:15:8"
																	},
																	{
																		"hexValue": "726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4748:12:8",
																		"type": "",
																		"value": "ro address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4724:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4724:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4724:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4637:6:8",
														"type": ""
													}
												],
												"src": "4539:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4920:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4930:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4996:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5001:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4937:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "4937:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4930:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5102:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																	"nodeType": "YulIdentifier",
																	"src": "5013:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5013:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5115:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5126:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5131:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5122:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5122:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5115:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4908:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4916:3:8",
														"type": ""
													}
												],
												"src": "4774:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5317:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5327:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5339:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5350:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5335:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5335:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5327:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5374:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5385:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5370:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5370:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5393:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5399:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5389:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5389:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5363:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5363:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5363:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5419:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5553:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5427:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5427:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5419:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5297:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5312:4:8",
														"type": ""
													}
												],
												"src": "5146:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5677:69:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5699:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5707:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5695:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5695:14:8"
																	},
																	{
																		"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5711:27:8",
																		"type": "",
																		"value": "Crowdsale: weiAmount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5688:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5688:51:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5688:51:8"
														}
													]
												},
												"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5669:6:8",
														"type": ""
													}
												],
												"src": "5571:175:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5898:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5908:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5974:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5979:2:8",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5915:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5915:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "5908:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6080:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																	"nodeType": "YulIdentifier",
																	"src": "5991:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5991:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6093:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6104:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6109:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6100:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6100:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6093:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5886:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5894:3:8",
														"type": ""
													}
												],
												"src": "5752:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6295:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6305:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6317:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6328:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6313:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6313:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6305:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6352:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6363:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6371:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6377:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6367:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6367:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6341:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6341:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6341:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6397:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6531:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6405:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6405:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6397:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6275:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6290:4:8",
														"type": ""
													}
												],
												"src": "6124:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6577:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6594:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6587:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6587:88:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6587:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6691:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6694:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6684:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6684:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6684:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6715:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6718:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6708:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6708:15:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6708:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6549:180:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:147:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6812:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6794:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6823:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6846:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6828:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6828:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6823:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6857:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6868:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6871:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6864:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6864:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "6857:3:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6897:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6899:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6899:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6899:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6889:1:8"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "6892:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6886:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6886:10:8"
															},
															"nodeType": "YulIf",
															"src": "6883:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6766:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6769:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6775:3:8",
														"type": ""
													}
												],
												"src": "6735:191:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6980:362:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6990:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6995:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6990:1:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7024:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7047:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7029:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7029:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "7024:1:8"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7058:28:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7081:1:8"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7084:1:8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "7077:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:9:8"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "7062:11:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7095:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "7124:11:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "7106:17:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7106:30:8"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "7095:7:8"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "7315:16:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:18:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "7246:1:8"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7239:6:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7239:9:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "7269:1:8"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "7276:7:8"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "7285:1:8"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "7272:3:8"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7272:15:8"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "7266:2:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7266:22:8"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "7219:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7219:83:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7199:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:113:8"
															},
															"nodeType": "YulIf",
															"src": "7196:139:8"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6963:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6966:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "6972:7:8",
														"type": ""
													}
												],
												"src": "6932:410:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7413:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7430:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7453:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "7435:17:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7435:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7423:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7423:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7401:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7408:3:8",
														"type": ""
													}
												],
												"src": "7348:118:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7598:206:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7608:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7620:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7631:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7616:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7616:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7608:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7701:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7712:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7697:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7697:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7644:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7644:71:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7644:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7769:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7782:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7793:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7778:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7778:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7725:43:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:72:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7725:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7562:9:8",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7574:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7582:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7593:4:8",
														"type": ""
													}
												],
												"src": "7472:332:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7852:48:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7862:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7887:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7880:6:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7880:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7873:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7873:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7862:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7834:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7844:7:8",
														"type": ""
													}
												],
												"src": "7810:90:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7946:76:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8000:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8009:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8012:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8002:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8002:12:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8002:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7969:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7991:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "7976:14:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7976:21:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7966:2:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7966:32:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7959:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:40:8"
															},
															"nodeType": "YulIf",
															"src": "7956:60:8"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7939:5:8",
														"type": ""
													}
												],
												"src": "7906:116:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8088:77:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8098:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8113:6:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8107:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8107:13:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8098:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8153:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8129:23:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8129:30:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8129:30:8"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8066:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8074:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8082:5:8",
														"type": ""
													}
												],
												"src": "8028:137:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8245:271:8",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8291:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8293:77:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8293:79:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8293:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8266:7:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8275:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8262:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8262:23:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8287:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8258:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8258:32:8"
															},
															"nodeType": "YulIf",
															"src": "8255:119:8"
														},
														{
															"nodeType": "YulBlock",
															"src": "8384:125:8",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8399:15:8",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8413:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8403:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8428:71:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8471:9:8"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8482:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8467:3:8"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8467:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8491:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8438:28:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8438:61:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8428:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8215:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8226:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8238:6:8",
														"type": ""
													}
												],
												"src": "8171:345:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8628:123:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8650:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8658:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8646:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8646:14:8"
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8662:34:8",
																		"type": "",
																		"value": "SafeERC20: ERC20 operation did n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8639:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8639:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8639:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8718:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8726:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8714:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8714:15:8"
																	},
																	{
																		"hexValue": "6f742073756363656564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8731:12:8",
																		"type": "",
																		"value": "ot succeed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8707:37:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8707:37:8"
														}
													]
												},
												"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8620:6:8",
														"type": ""
													}
												],
												"src": "8522:229:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8903:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8913:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8979:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8984:2:8",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8920:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8920:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8913:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9085:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																	"nodeType": "YulIdentifier",
																	"src": "8996:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "8996:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8996:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9098:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9109:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9114:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9105:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9105:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9098:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8891:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8899:3:8",
														"type": ""
													}
												],
												"src": "8757:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9300:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9310:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9322:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9333:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9318:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9318:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9310:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9357:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9368:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9353:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9353:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9376:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9382:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9372:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9372:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9346:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9346:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9346:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9402:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9536:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9410:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9410:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9402:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9280:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9295:4:8",
														"type": ""
													}
												],
												"src": "9129:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9660:119:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9682:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9690:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9678:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9678:14:8"
																	},
																	{
																		"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9694:34:8",
																		"type": "",
																		"value": "Address: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9671:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:58:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9671:58:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9750:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9758:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9746:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9746:15:8"
																	},
																	{
																		"hexValue": "722063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9763:8:8",
																		"type": "",
																		"value": "r call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9739:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9739:33:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9739:33:8"
														}
													]
												},
												"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9652:6:8",
														"type": ""
													}
												],
												"src": "9554:225:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9931:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9941:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10007:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10012:2:8",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9948:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9941:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10113:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																	"nodeType": "YulIdentifier",
																	"src": "10024:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10024:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10024:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10126:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10137:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10142:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10126:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9919:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9927:3:8",
														"type": ""
													}
												],
												"src": "9785:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10328:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10338:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10350:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10361:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10346:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10346:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10338:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10385:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10396:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10381:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10381:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10404:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10410:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10400:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10400:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10374:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10374:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10374:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10430:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10564:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10438:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10438:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10430:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10308:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10323:4:8",
														"type": ""
													}
												],
												"src": "10157:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10640:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10651:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10667:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10661:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10661:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10651:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10623:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10633:6:8",
														"type": ""
													}
												],
												"src": "10582:98:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10799:34:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10809:18:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "10824:3:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "10809:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10771:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10776:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "10787:11:8",
														"type": ""
													}
												],
												"src": "10686:147:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10901:184:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10911:10:8",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10920:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "10915:1:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10980:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "11005:3:8"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "11010:1:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "11001:3:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11001:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "11024:3:8"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "11029:1:8"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "11020:3:8"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "11020:11:8"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11014:5:8"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11014:18:8"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "10994:6:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10994:39:8"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10994:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "10941:1:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "10944:6:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "10938:2:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:13:8"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "10952:19:8",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10954:15:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "10963:1:8"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10966:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "10959:3:8"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10959:10:8"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "10954:1:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "10934:3:8",
																"statements": []
															},
															"src": "10930:113:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "11063:3:8"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11068:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11059:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11059:16:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11077:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11052:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11052:27:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11052:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "10883:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "10888:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10893:6:8",
														"type": ""
													}
												],
												"src": "10839:246:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11199:278:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11209:52:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11255:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "11223:31:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11223:38:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11213:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11270:95:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11353:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11358:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11277:75:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11277:88:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11270:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11413:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11420:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11409:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11409:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11427:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11432:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "11374:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11374:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11374:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11448:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11459:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11464:6:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11455:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11455:16:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11448:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11180:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11187:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11195:3:8",
														"type": ""
													}
												],
												"src": "11091:386:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11617:137:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11628:100:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11715:6:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11724:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11635:79:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11635:93:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11628:3:8"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11738:10:8",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11745:3:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11738:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11596:3:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11602:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11613:3:8",
														"type": ""
													}
												],
												"src": "11483:271:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11866:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11888:6:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11896:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11884:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11884:14:8"
																	},
																	{
																		"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11900:31:8",
																		"type": "",
																		"value": "Address: call to non-contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11877:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "11877:55:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11877:55:8"
														}
													]
												},
												"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11858:6:8",
														"type": ""
													}
												],
												"src": "11760:179:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12091:220:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12101:74:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12167:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12172:2:8",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12108:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12108:67:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12101:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12273:3:8"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																	"nodeType": "YulIdentifier",
																	"src": "12184:88:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12184:93:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12184:93:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12286:19:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12297:3:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12302:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12293:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12293:12:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12286:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12079:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12087:3:8",
														"type": ""
													}
												],
												"src": "11945:366:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12488:248:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12498:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12510:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12521:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12506:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12506:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12498:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12545:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12556:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12541:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12541:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12564:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12570:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12560:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12560:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12534:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12534:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12534:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12590:139:8",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "12724:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12598:124:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12598:131:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12590:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12468:9:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12483:4:8",
														"type": ""
													}
												],
												"src": "12317:419:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12801:40:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12812:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12828:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12822:5:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12822:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12812:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12784:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12794:6:8",
														"type": ""
													}
												],
												"src": "12742:99:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12895:54:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12905:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12923:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12930:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12919:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12919:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12939:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12935:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12935:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12915:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "12915:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "12905:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12878:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "12888:6:8",
														"type": ""
													}
												],
												"src": "12847:102:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13047:285:8",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13057:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13104:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "13071:32:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13071:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "13061:6:8",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13119:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13185:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13190:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13126:58:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13126:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13119:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13245:5:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13252:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13241:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13241:16:8"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13259:3:8"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13264:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "13206:34:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13206:65:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13206:65:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13280:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13291:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "13318:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13296:21:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13296:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13287:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13287:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13280:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13028:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13035:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13043:3:8",
														"type": ""
													}
												],
												"src": "12955:377:8"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13456:195:8",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13466:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13478:9:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13489:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13474:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13474:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13466:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13513:9:8"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13524:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13509:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13509:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13532:4:8"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13538:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13528:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13528:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13502:6:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13502:47:8"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13502:47:8"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13558:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13630:6:8"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13639:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13566:63:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "13566:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13558:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13428:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13440:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13451:4:8",
														"type": ""
													}
												],
												"src": "13338:313:8"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$430_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$430_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$430__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$430_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: beneficiary is the ze\")\n\n        mstore(add(memPtr, 32), \"ro address\")\n\n    }\n\n    function abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Crowdsale: weiAmount is 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(memPtr) {\n\n        mstore(add(memPtr, 0), \"SafeERC20: ERC20 operation did n\")\n\n        mstore(add(memPtr, 32), \"ot succeed\")\n\n    }\n\n    function abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: insufficient balance fo\")\n\n        mstore(add(memPtr, 32), \"r call\")\n\n    }\n\n    function abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address: call to non-contract\")\n\n    }\n\n    function abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004e5760003560e01c80632c4e722e146100575780634042b66f14610082578063521eb273146100ad578063ec8ac4d8146100d8578063fc0c546a146100f457610055565b3661005557005b005b34801561006357600080fd5b5061006c61011f565b60405161007991906107cd565b60405180910390f35b34801561008e57600080fd5b50610097610129565b6040516100a491906107cd565b60405180910390f35b3480156100b957600080fd5b506100c2610133565b6040516100cf9190610829565b60405180910390f35b6100f260048036038101906100ed9190610887565b61015d565b005b34801561010057600080fd5b5061010961023d565b6040516101169190610913565b60405180910390f35b6000600354905090565b6000600454905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610165610267565b600034905061017482826102b6565b600061017f8261036c565b90506101968260045461038a90919063ffffffff16565b6004819055506101a683826103a0565b8273ffffffffffffffffffffffffffffffffffffffff166101c56103ae565b73ffffffffffffffffffffffffffffffffffffffff167f6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b848460405161020c92919061092e565b60405180910390a361021e83836103b6565b6102266103ba565b6102308383610425565b505061023a610429565b50565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6002600054036102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a3906109b4565b60405180910390fd5b6002600081905550565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031c90610a46565b60405180910390fd5b60008103610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90610ab2565b60405180910390fd5b5050565b60006103836003548361043390919063ffffffff16565b9050919050565b600081836103989190610b01565b905092915050565b6103aa8282610449565b5050565b600033905090565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc349081150290604051600060405180830381858888f19350505050158015610422573d6000803e3d6000fd5b50565b5050565b6001600081905550565b600081836104419190610b35565b905092915050565b6104968282600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661049a9092919063ffffffff16565b5050565b61051b8363a9059cbb60e01b84846040516024016104b9929190610b86565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610520565b505050565b6000610582826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166105e79092919063ffffffff16565b90506000815111156105e257808060200190518101906105a29190610be7565b6105e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d890610c86565b60405180910390fd5b5b505050565b60606105f684846000856105ff565b90509392505050565b606082471015610644576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063b90610d18565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161066d9190610da9565b60006040518083038185875af1925050503d80600081146106aa576040519150601f19603f3d011682016040523d82523d6000602084013e6106af565b606091505b50915091506106c0878383876106cc565b92505050949350505050565b6060831561072e576000835103610726576106e685610741565b610725576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071c90610e0c565b60405180910390fd5b5b829050610739565b6107388383610764565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000825111156107775781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107ab9190610e81565b60405180910390fd5b6000819050919050565b6107c7816107b4565b82525050565b60006020820190506107e260008301846107be565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610813826107e8565b9050919050565b61082381610808565b82525050565b600060208201905061083e600083018461081a565b92915050565b600080fd5b6000610854826107e8565b9050919050565b61086481610849565b811461086f57600080fd5b50565b6000813590506108818161085b565b92915050565b60006020828403121561089d5761089c610844565b5b60006108ab84828501610872565b91505092915050565b6000819050919050565b60006108d96108d46108cf846107e8565b6108b4565b6107e8565b9050919050565b60006108eb826108be565b9050919050565b60006108fd826108e0565b9050919050565b61090d816108f2565b82525050565b60006020820190506109286000830184610904565b92915050565b600060408201905061094360008301856107be565b61095060208301846107be565b9392505050565b600082825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b600061099e601f83610957565b91506109a982610968565b602082019050919050565b600060208201905081810360008301526109cd81610991565b9050919050565b7f43726f776473616c653a2062656e656669636961727920697320746865207a6560008201527f726f206164647265737300000000000000000000000000000000000000000000602082015250565b6000610a30602a83610957565b9150610a3b826109d4565b604082019050919050565b60006020820190508181036000830152610a5f81610a23565b9050919050565b7f43726f776473616c653a20776569416d6f756e74206973203000000000000000600082015250565b6000610a9c601983610957565b9150610aa782610a66565b602082019050919050565b60006020820190508181036000830152610acb81610a8f565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610b0c826107b4565b9150610b17836107b4565b9250828201905080821115610b2f57610b2e610ad2565b5b92915050565b6000610b40826107b4565b9150610b4b836107b4565b9250828202610b59816107b4565b91508282048414831517610b7057610b6f610ad2565b5b5092915050565b610b8081610849565b82525050565b6000604082019050610b9b6000830185610b77565b610ba860208301846107be565b9392505050565b60008115159050919050565b610bc481610baf565b8114610bcf57600080fd5b50565b600081519050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610844565b5b6000610c0b84828501610bd2565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000610c70602a83610957565b9150610c7b82610c14565b604082019050919050565b60006020820190508181036000830152610c9f81610c63565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000610d02602683610957565b9150610d0d82610ca6565b604082019050919050565b60006020820190508181036000830152610d3181610cf5565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610d6c578082015181840152602081019050610d51565b60008484015250505050565b6000610d8382610d38565b610d8d8185610d43565b9350610d9d818560208601610d4e565b80840191505092915050565b6000610db58284610d78565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000610df6601d83610957565b9150610e0182610dc0565b602082019050919050565b60006020820190508181036000830152610e2581610de9565b9050919050565b600081519050919050565b6000601f19601f8301169050919050565b6000610e5382610e2c565b610e5d8185610957565b9350610e6d818560208601610d4e565b610e7681610e37565b840191505092915050565b60006020820190508181036000830152610e9b8184610e48565b90509291505056fea264697066735822122066d716b82eba2b274a57d2de82413b766b8be45fe49927ef08f5daaeb42bd28664736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2C4E722E EQ PUSH2 0x57 JUMPI DUP1 PUSH4 0x4042B66F EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x521EB273 EQ PUSH2 0xAD JUMPI DUP1 PUSH4 0xEC8AC4D8 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0xF4 JUMPI PUSH2 0x55 JUMP JUMPDEST CALLDATASIZE PUSH2 0x55 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6C PUSH2 0x11F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x79 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x97 PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA4 SWAP2 SWAP1 PUSH2 0x7CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC2 PUSH2 0x133 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCF SWAP2 SWAP1 PUSH2 0x829 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xED SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH2 0x15D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x100 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x109 PUSH2 0x23D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0x913 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x165 PUSH2 0x267 JUMP JUMPDEST PUSH1 0x0 CALLVALUE SWAP1 POP PUSH2 0x174 DUP3 DUP3 PUSH2 0x2B6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x17F DUP3 PUSH2 0x36C JUMP JUMPDEST SWAP1 POP PUSH2 0x196 DUP3 PUSH1 0x4 SLOAD PUSH2 0x38A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x4 DUP2 SWAP1 SSTORE POP PUSH2 0x1A6 DUP4 DUP3 PUSH2 0x3A0 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C5 PUSH2 0x3AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x20C SWAP3 SWAP2 SWAP1 PUSH2 0x92E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x21E DUP4 DUP4 PUSH2 0x3B6 JUMP JUMPDEST PUSH2 0x226 PUSH2 0x3BA JUMP JUMPDEST PUSH2 0x230 DUP4 DUP4 PUSH2 0x425 JUMP JUMPDEST POP POP PUSH2 0x23A PUSH2 0x429 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD SUB PUSH2 0x2AC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A3 SWAP1 PUSH2 0x9B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x325 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x31C SWAP1 PUSH2 0xA46 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SUB PUSH2 0x368 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x35F SWAP1 PUSH2 0xAB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x383 PUSH1 0x3 SLOAD DUP4 PUSH2 0x433 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x398 SWAP2 SWAP1 PUSH2 0xB01 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3AA DUP3 DUP3 PUSH2 0x449 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC CALLVALUE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x422 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x441 SWAP2 SWAP1 PUSH2 0xB35 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x496 DUP3 DUP3 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x49A SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x51B DUP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x4B9 SWAP3 SWAP2 SWAP1 PUSH2 0xB86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x520 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x582 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x5E7 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT ISZERO PUSH2 0x5E2 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x5A2 SWAP2 SWAP1 PUSH2 0xBE7 JUMP JUMPDEST PUSH2 0x5E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D8 SWAP1 PUSH2 0xC86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x5F6 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x5FF JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x644 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x63B SWAP1 PUSH2 0xD18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x66D SWAP2 SWAP1 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x6AA JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x6AF JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x6C0 DUP8 DUP4 DUP4 DUP8 PUSH2 0x6CC JUMP JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x72E JUMPI PUSH1 0x0 DUP4 MLOAD SUB PUSH2 0x726 JUMPI PUSH2 0x6E6 DUP6 PUSH2 0x741 JUMP JUMPDEST PUSH2 0x725 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x71C SWAP1 PUSH2 0xE0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST DUP3 SWAP1 POP PUSH2 0x739 JUMP JUMPDEST PUSH2 0x738 DUP4 DUP4 PUSH2 0x764 JUMP JUMPDEST JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x777 JUMPI DUP2 MLOAD DUP1 DUP4 PUSH1 0x20 ADD REVERT JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7AB SWAP2 SWAP1 PUSH2 0xE81 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7C7 DUP2 PUSH2 0x7B4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7E2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7BE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x813 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x823 DUP2 PUSH2 0x808 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x83E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x81A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x854 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x864 DUP2 PUSH2 0x849 JUMP JUMPDEST DUP2 EQ PUSH2 0x86F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x881 DUP2 PUSH2 0x85B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89D JUMPI PUSH2 0x89C PUSH2 0x844 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8AB DUP5 DUP3 DUP6 ADD PUSH2 0x872 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8D9 PUSH2 0x8D4 PUSH2 0x8CF DUP5 PUSH2 0x7E8 JUMP JUMPDEST PUSH2 0x8B4 JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8EB DUP3 PUSH2 0x8BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FD DUP3 PUSH2 0x8E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x90D DUP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x928 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x904 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x943 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x950 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x99E PUSH1 0x1F DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0x9A9 DUP3 PUSH2 0x968 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x9CD DUP2 PUSH2 0x991 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A2062656E656669636961727920697320746865207A65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x726F206164647265737300000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA30 PUSH1 0x2A DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xA3B DUP3 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xA5F DUP2 PUSH2 0xA23 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43726F776473616C653A20776569416D6F756E74206973203000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA9C PUSH1 0x19 DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA7 DUP3 PUSH2 0xA66 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xACB DUP2 PUSH2 0xA8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB17 DUP4 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xB2F JUMPI PUSH2 0xB2E PUSH2 0xAD2 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB40 DUP3 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP PUSH2 0xB4B DUP4 PUSH2 0x7B4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xB59 DUP2 PUSH2 0x7B4 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xB70 JUMPI PUSH2 0xB6F PUSH2 0xAD2 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xB80 DUP2 PUSH2 0x849 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB9B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0xB77 JUMP JUMPDEST PUSH2 0xBA8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7BE JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBC4 DUP2 PUSH2 0xBAF JUMP JUMPDEST DUP2 EQ PUSH2 0xBCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xBE1 DUP2 PUSH2 0xBBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBFD JUMPI PUSH2 0xBFC PUSH2 0x844 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC0B DUP5 DUP3 DUP6 ADD PUSH2 0xBD2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5361666545524332303A204552433230206F7065726174696F6E20646964206E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F74207375636365656400000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 PUSH1 0x2A DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xC7B DUP3 PUSH2 0xC14 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xC9F DUP2 PUSH2 0xC63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD02 PUSH1 0x26 DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xD0D DUP3 PUSH2 0xCA6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xD31 DUP2 PUSH2 0xCF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xD6C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xD51 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xD83 DUP3 PUSH2 0xD38 JUMP JUMPDEST PUSH2 0xD8D DUP2 DUP6 PUSH2 0xD43 JUMP JUMPDEST SWAP4 POP PUSH2 0xD9D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4E JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB5 DUP3 DUP5 PUSH2 0xD78 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF6 PUSH1 0x1D DUP4 PUSH2 0x957 JUMP JUMPDEST SWAP2 POP PUSH2 0xE01 DUP3 PUSH2 0xDC0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE25 DUP2 PUSH2 0xDE9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE53 DUP3 PUSH2 0xE2C JUMP JUMPDEST PUSH2 0xE5D DUP2 DUP6 PUSH2 0x957 JUMP JUMPDEST SWAP4 POP PUSH2 0xE6D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD4E JUMP JUMPDEST PUSH2 0xE76 DUP2 PUSH2 0xE37 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xE9B DUP2 DUP5 PUSH2 0xE48 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH7 0xD716B82EBA2B27 0x4A JUMPI 0xD2 0xDE DUP3 COINBASE EXTCODESIZE PUSH23 0x6B8BE45FE49927EF08F5DAAEB42BD28664736F6C634300 ADDMOD SLT STOP CALLER ",
							"sourceMap": "1234:6887:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3906:75;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4044:85;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3734:87;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4386:605;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3582:76;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3906:75;3943:7;3969:5;;3962:12;;3906:75;:::o;4044:85::-;4086:7;4112:10;;4105:17;;4044:85;:::o;3734:87::-;3773:15;3807:7;;;;;;;;;;;3800:14;;3734:87;:::o;4386:605::-;2261:21:1;:19;:21::i;:::-;4464:17:0::1;4484:9;4464:29;;4503:44;4524:11;4537:9;4503:20;:44::i;:::-;4606:14;4623:26;4639:9;4623:15;:26::i;:::-;4606:43;;4697:25;4712:9;4697:10;;:14;;:25;;;;:::i;:::-;4684:10;:38;;;;4733:37;4750:11;4763:6;4733:16;:37::i;:::-;4815:11;4785:61;;4801:12;:10;:12::i;:::-;4785:61;;;4828:9;4839:6;4785:61;;;;;;;:::i;:::-;;;;;;;;4857:46;4880:11;4893:9;4857:22;:46::i;:::-;4914:15;:13;:15::i;:::-;4939:45;4961:11;4974:9;4939:21;:45::i;:::-;4454:537;;2303:20:1::0;:18;:20::i;:::-;4386:605:0;:::o;3582:76::-;3620:6;3645;;;;;;;;;;;3638:13;;3582:76;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;5533:376:0:-;5658:1;5635:25;;:11;:25;;;5627:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;5738:1;5725:9;:14;5717:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;5533:376;;:::o;7834:120::-;7901:7;7927:20;7941:5;;7927:9;:13;;:20;;;;:::i;:::-;7920:27;;7834:120;;;:::o;2755:96:7:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;7036:134:0:-;7123:40;7138:11;7151;7123:14;:40::i;:::-;7036:134;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;7440:145:0:-;;;:::o;8041:78::-;8085:7;;;;;;;;;;;:16;;:27;8102:9;8085:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8041:78::o;6204:149::-;;;:::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;3465:96:7:-;3523:7;3553:1;3549;:5;;;;:::i;:::-;3542:12;;3465:96;;;;:::o;6633:137:0:-;6718:45;6738:11;6751;6718:6;;;;;;;;;;;:19;;;;:45;;;;;:::i;:::-;6633:137;;:::o;763:205:4:-;875:86;895:5;925:23;;;950:2;954:5;902:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;:::-;763:205;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4166:95;;4295:1;4275:10;:17;:21;4271:176;;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;4271:176;3817:636;3747:706;;:::o;3873:223:5:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4037:21;:52::i;:::-;4030:59;;3873:223;;;;;:::o;4960:446::-;5125:12;5182:5;5157:21;:30;;5149:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;5241:12;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;;;;4960:446;;;;;;:::o;7466:628::-;7646:12;7674:7;7670:418;;;7722:1;7701:10;:17;:22;7697:286;;7916:18;7927:6;7916:10;:18::i;:::-;7908:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;7697:286;8003:10;7996:17;;;;7670:418;8044:33;8052:10;8064:12;8044:7;:33::i;:::-;7466:628;;;;;;;:::o;1175:320::-;1235:4;1487:1;1465:7;:19;;;:23;1458:30;;1175:320;;;:::o;8616:540::-;8795:1;8775:10;:17;:21;8771:379;;;9003:10;8997:17;9059:15;9046:10;9042:2;9038:19;9031:44;8771:379;9126:12;9119:20;;;;;;;;;;;:::i;:::-;;;;;;;;7:77:8;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1173:117::-;1282:1;1279;1272:12;1419:96;1456:7;1485:24;1503:5;1485:24;:::i;:::-;1474:35;;1419:96;;;:::o;1521:122::-;1594:24;1612:5;1594:24;:::i;:::-;1587:5;1584:35;1574:63;;1633:1;1630;1623:12;1574:63;1521:122;:::o;1649:139::-;1695:5;1733:6;1720:20;1711:29;;1749:33;1776:5;1749:33;:::i;:::-;1649:139;;;;:::o;1794:329::-;1853:6;1902:2;1890:9;1881:7;1877:23;1873:32;1870:119;;;1908:79;;:::i;:::-;1870:119;2028:1;2053:53;2098:7;2089:6;2078:9;2074:22;2053:53;:::i;:::-;2043:63;;1999:117;1794:329;;;;:::o;2129:60::-;2157:3;2178:5;2171:12;;2129:60;;;:::o;2195:142::-;2245:9;2278:53;2296:34;2305:24;2323:5;2305:24;:::i;:::-;2296:34;:::i;:::-;2278:53;:::i;:::-;2265:66;;2195:142;;;:::o;2343:126::-;2393:9;2426:37;2457:5;2426:37;:::i;:::-;2413:50;;2343:126;;;:::o;2475:140::-;2539:9;2572:37;2603:5;2572:37;:::i;:::-;2559:50;;2475:140;;;:::o;2621:159::-;2722:51;2767:5;2722:51;:::i;:::-;2717:3;2710:64;2621:159;;:::o;2786:250::-;2893:4;2931:2;2920:9;2916:18;2908:26;;2944:85;3026:1;3015:9;3011:17;3002:6;2944:85;:::i;:::-;2786:250;;;;:::o;3042:332::-;3163:4;3201:2;3190:9;3186:18;3178:26;;3214:71;3282:1;3271:9;3267:17;3258:6;3214:71;:::i;:::-;3295:72;3363:2;3352:9;3348:18;3339:6;3295:72;:::i;:::-;3042:332;;;;;:::o;3380:169::-;3464:11;3498:6;3493:3;3486:19;3538:4;3533:3;3529:14;3514:29;;3380:169;;;;:::o;3555:181::-;3695:33;3691:1;3683:6;3679:14;3672:57;3555:181;:::o;3742:366::-;3884:3;3905:67;3969:2;3964:3;3905:67;:::i;:::-;3898:74;;3981:93;4070:3;3981:93;:::i;:::-;4099:2;4094:3;4090:12;4083:19;;3742:366;;;:::o;4114:419::-;4280:4;4318:2;4307:9;4303:18;4295:26;;4367:9;4361:4;4357:20;4353:1;4342:9;4338:17;4331:47;4395:131;4521:4;4395:131;:::i;:::-;4387:139;;4114:419;;;:::o;4539:229::-;4679:34;4675:1;4667:6;4663:14;4656:58;4748:12;4743:2;4735:6;4731:15;4724:37;4539:229;:::o;4774:366::-;4916:3;4937:67;5001:2;4996:3;4937:67;:::i;:::-;4930:74;;5013:93;5102:3;5013:93;:::i;:::-;5131:2;5126:3;5122:12;5115:19;;4774:366;;;:::o;5146:419::-;5312:4;5350:2;5339:9;5335:18;5327:26;;5399:9;5393:4;5389:20;5385:1;5374:9;5370:17;5363:47;5427:131;5553:4;5427:131;:::i;:::-;5419:139;;5146:419;;;:::o;5571:175::-;5711:27;5707:1;5699:6;5695:14;5688:51;5571:175;:::o;5752:366::-;5894:3;5915:67;5979:2;5974:3;5915:67;:::i;:::-;5908:74;;5991:93;6080:3;5991:93;:::i;:::-;6109:2;6104:3;6100:12;6093:19;;5752:366;;;:::o;6124:419::-;6290:4;6328:2;6317:9;6313:18;6305:26;;6377:9;6371:4;6367:20;6363:1;6352:9;6348:17;6341:47;6405:131;6531:4;6405:131;:::i;:::-;6397:139;;6124:419;;;:::o;6549:180::-;6597:77;6594:1;6587:88;6694:4;6691:1;6684:15;6718:4;6715:1;6708:15;6735:191;6775:3;6794:20;6812:1;6794:20;:::i;:::-;6789:25;;6828:20;6846:1;6828:20;:::i;:::-;6823:25;;6871:1;6868;6864:9;6857:16;;6892:3;6889:1;6886:10;6883:36;;;6899:18;;:::i;:::-;6883:36;6735:191;;;;:::o;6932:410::-;6972:7;6995:20;7013:1;6995:20;:::i;:::-;6990:25;;7029:20;7047:1;7029:20;:::i;:::-;7024:25;;7084:1;7081;7077:9;7106:30;7124:11;7106:30;:::i;:::-;7095:41;;7285:1;7276:7;7272:15;7269:1;7266:22;7246:1;7239:9;7219:83;7196:139;;7315:18;;:::i;:::-;7196:139;6980:362;6932:410;;;;:::o;7348:118::-;7435:24;7453:5;7435:24;:::i;:::-;7430:3;7423:37;7348:118;;:::o;7472:332::-;7593:4;7631:2;7620:9;7616:18;7608:26;;7644:71;7712:1;7701:9;7697:17;7688:6;7644:71;:::i;:::-;7725:72;7793:2;7782:9;7778:18;7769:6;7725:72;:::i;:::-;7472:332;;;;;:::o;7810:90::-;7844:7;7887:5;7880:13;7873:21;7862:32;;7810:90;;;:::o;7906:116::-;7976:21;7991:5;7976:21;:::i;:::-;7969:5;7966:32;7956:60;;8012:1;8009;8002:12;7956:60;7906:116;:::o;8028:137::-;8082:5;8113:6;8107:13;8098:22;;8129:30;8153:5;8129:30;:::i;:::-;8028:137;;;;:::o;8171:345::-;8238:6;8287:2;8275:9;8266:7;8262:23;8258:32;8255:119;;;8293:79;;:::i;:::-;8255:119;8413:1;8438:61;8491:7;8482:6;8471:9;8467:22;8438:61;:::i;:::-;8428:71;;8384:125;8171:345;;;;:::o;8522:229::-;8662:34;8658:1;8650:6;8646:14;8639:58;8731:12;8726:2;8718:6;8714:15;8707:37;8522:229;:::o;8757:366::-;8899:3;8920:67;8984:2;8979:3;8920:67;:::i;:::-;8913:74;;8996:93;9085:3;8996:93;:::i;:::-;9114:2;9109:3;9105:12;9098:19;;8757:366;;;:::o;9129:419::-;9295:4;9333:2;9322:9;9318:18;9310:26;;9382:9;9376:4;9372:20;9368:1;9357:9;9353:17;9346:47;9410:131;9536:4;9410:131;:::i;:::-;9402:139;;9129:419;;;:::o;9554:225::-;9694:34;9690:1;9682:6;9678:14;9671:58;9763:8;9758:2;9750:6;9746:15;9739:33;9554:225;:::o;9785:366::-;9927:3;9948:67;10012:2;10007:3;9948:67;:::i;:::-;9941:74;;10024:93;10113:3;10024:93;:::i;:::-;10142:2;10137:3;10133:12;10126:19;;9785:366;;;:::o;10157:419::-;10323:4;10361:2;10350:9;10346:18;10338:26;;10410:9;10404:4;10400:20;10396:1;10385:9;10381:17;10374:47;10438:131;10564:4;10438:131;:::i;:::-;10430:139;;10157:419;;;:::o;10582:98::-;10633:6;10667:5;10661:12;10651:22;;10582:98;;;:::o;10686:147::-;10787:11;10824:3;10809:18;;10686:147;;;;:::o;10839:246::-;10920:1;10930:113;10944:6;10941:1;10938:13;10930:113;;;11029:1;11024:3;11020:11;11014:18;11010:1;11005:3;11001:11;10994:39;10966:2;10963:1;10959:10;10954:15;;10930:113;;;11077:1;11068:6;11063:3;11059:16;11052:27;10901:184;10839:246;;;:::o;11091:386::-;11195:3;11223:38;11255:5;11223:38;:::i;:::-;11277:88;11358:6;11353:3;11277:88;:::i;:::-;11270:95;;11374:65;11432:6;11427:3;11420:4;11413:5;11409:16;11374:65;:::i;:::-;11464:6;11459:3;11455:16;11448:23;;11199:278;11091:386;;;;:::o;11483:271::-;11613:3;11635:93;11724:3;11715:6;11635:93;:::i;:::-;11628:100;;11745:3;11738:10;;11483:271;;;;:::o;11760:179::-;11900:31;11896:1;11888:6;11884:14;11877:55;11760:179;:::o;11945:366::-;12087:3;12108:67;12172:2;12167:3;12108:67;:::i;:::-;12101:74;;12184:93;12273:3;12184:93;:::i;:::-;12302:2;12297:3;12293:12;12286:19;;11945:366;;;:::o;12317:419::-;12483:4;12521:2;12510:9;12506:18;12498:26;;12570:9;12564:4;12560:20;12556:1;12545:9;12541:17;12534:47;12598:131;12724:4;12598:131;:::i;:::-;12590:139;;12317:419;;;:::o;12742:99::-;12794:6;12828:5;12822:12;12812:22;;12742:99;;;:::o;12847:102::-;12888:6;12939:2;12935:7;12930:2;12923:5;12919:14;12915:28;12905:38;;12847:102;;;:::o;12955:377::-;13043:3;13071:39;13104:5;13071:39;:::i;:::-;13126:71;13190:6;13185:3;13126:71;:::i;:::-;13119:78;;13206:65;13264:6;13259:3;13252:4;13245:5;13241:16;13206:65;:::i;:::-;13296:29;13318:6;13296:29;:::i;:::-;13291:3;13287:39;13280:46;;13047:285;12955:377;;;;:::o;13338:313::-;13451:4;13489:2;13478:9;13474:18;13466:26;;13538:9;13532:4;13528:20;13524:1;13513:9;13509:17;13502:47;13566:78;13639:4;13630:6;13566:78;:::i;:::-;13558:86;;13338:313;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "760200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"": "173",
								"buyTokens(address)": "infinite",
								"rate()": "2415",
								"token()": "infinite",
								"wallet()": "2544",
								"weiRaised()": "2437"
							},
							"internal": {
								"_deliverTokens(address,uint256)": "infinite",
								"_forwardFunds()": "infinite",
								"_getTokenAmount(uint256)": "infinite",
								"_postValidatePurchase(address,uint256)": "13",
								"_preValidatePurchase(address,uint256)": "infinite",
								"_processPurchase(address,uint256)": "infinite",
								"_updatePurchasingState(address,uint256)": "13"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2657,
									"end": 3027,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2754,
									"end": 2755,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2747,
									"end": 2751,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2747,
									"end": 2755,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 2739,
									"end": 2780,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2739,
									"end": 2780,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2816,
									"end": 2817,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2798,
									"end": 2818,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2798,
									"end": 2818,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2798,
									"end": 2804,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2798,
									"end": 2818,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2798,
									"end": 2818,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2798,
									"end": 2818,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 2790,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2790,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2904,
									"end": 2905,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2878,
									"end": 2906,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2878,
									"end": 2906,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2886,
									"end": 2891,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2906,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2878,
									"end": 2906,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2878,
									"end": 2906,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2870,
									"end": 2947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 2870,
									"end": 2947,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2966,
									"end": 2970,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2958,
									"end": 2963,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 2958,
									"end": 2970,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2958,
									"end": 2970,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2958,
									"end": 2970,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2958,
									"end": 2970,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2990,
									"end": 2996,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2987,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 2980,
									"end": 2987,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2980,
									"end": 2996,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3015,
									"end": 3020,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3012,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3006,
									"end": 3012,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3006,
									"end": 3020,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2657,
									"end": 3027,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "21"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 8,
									"value": "45"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 8,
									"value": "46"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "22"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 8,
									"value": "48"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "tag",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 694,
									"end": 820,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 731,
									"end": 738,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 771,
									"end": 813,
									"name": "PUSH",
									"source": 8,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 764,
									"end": 769,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 760,
									"end": 814,
									"name": "AND",
									"source": 8
								},
								{
									"begin": 749,
									"end": 814,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 749,
									"end": 814,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 694,
									"end": 820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 930,
									"name": "tag",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 826,
									"end": 930,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 871,
									"end": 878,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 918,
									"end": 923,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 900,
									"end": 924,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 900,
									"end": 924,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 900,
									"end": 924,
									"name": "tag",
									"source": 8,
									"value": "51"
								},
								{
									"begin": 900,
									"end": 924,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 889,
									"end": 924,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 889,
									"end": 924,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 826,
									"end": 930,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 826,
									"end": 930,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 826,
									"end": 930,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "tag",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1043,
									"end": 1048,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 1017,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "tag",
									"source": 8,
									"value": "53"
								},
								{
									"begin": 1017,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1010,
									"end": 1015,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1007,
									"end": 1050,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1061,
									"end": 1062,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1054,
									"end": 1066,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "tag",
									"source": 8,
									"value": "54"
								},
								{
									"begin": 997,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 936,
									"end": 1074,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 936,
									"end": 1074,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "tag",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1145,
									"end": 1150,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1170,
									"end": 1183,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1161,
									"end": 1183,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1227,
									"end": 1232,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "26"
								},
								{
									"begin": 1192,
									"end": 1233,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "tag",
									"source": 8,
									"value": "56"
								},
								{
									"begin": 1192,
									"end": 1233,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1239,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1080,
									"end": 1239,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "tag",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1282,
									"end": 1289,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1329,
									"end": 1334,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 1311,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "tag",
									"source": 8,
									"value": "58"
								},
								{
									"begin": 1311,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1300,
									"end": 1335,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1341,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1245,
									"end": 1341,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "tag",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1398,
									"end": 1405,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1445,
									"end": 1450,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "28"
								},
								{
									"begin": 1427,
									"end": 1451,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "tag",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1427,
									"end": 1451,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1416,
									"end": 1451,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1457,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1347,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "tag",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1582,
									"end": 1587,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "29"
								},
								{
									"begin": 1550,
									"end": 1588,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "tag",
									"source": 8,
									"value": "62"
								},
								{
									"begin": 1550,
									"end": 1588,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1543,
									"end": 1548,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1540,
									"end": 1589,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1603,
									"end": 1604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1600,
									"end": 1601,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1593,
									"end": 1605,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "tag",
									"source": 8,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1607,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1613,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1463,
									"end": 1613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "tag",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1690,
									"end": 1695,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1721,
									"end": 1727,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1715,
									"end": 1728,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1706,
									"end": 1728,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1778,
									"end": 1783,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "30"
								},
								{
									"begin": 1737,
									"end": 1784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "tag",
									"source": 8,
									"value": "65"
								},
								{
									"begin": 1737,
									"end": 1784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1790,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1619,
									"end": 1790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "tag",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1906,
									"end": 1912,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1914,
									"end": 1920,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 1922,
									"end": 1928,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1971,
									"end": 1973,
									"name": "PUSH",
									"source": 8,
									"value": "60"
								},
								{
									"begin": 1959,
									"end": 1968,
									"name": "DUP5",
									"source": 8
								},
								{
									"begin": 1950,
									"end": 1957,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 1946,
									"end": 1969,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 1942,
									"end": 1974,
									"name": "SLT",
									"source": 8
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "19"
								},
								{
									"begin": 1977,
									"end": 2056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "tag",
									"source": 8,
									"value": "68"
								},
								{
									"begin": 1977,
									"end": 2056,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "tag",
									"source": 8,
									"value": "67"
								},
								{
									"begin": 1939,
									"end": 2058,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2097,
									"end": 2098,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2178,
									"end": 2185,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2158,
									"end": 2167,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2154,
									"end": 2176,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "23"
								},
								{
									"begin": 2122,
									"end": 2186,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "tag",
									"source": 8,
									"value": "69"
								},
								{
									"begin": 2122,
									"end": 2186,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "SWAP4",
									"source": 8
								},
								{
									"begin": 2112,
									"end": 2186,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2068,
									"end": 2196,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2235,
									"end": 2237,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2325,
									"end": 2332,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2316,
									"end": 2322,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2305,
									"end": 2314,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2301,
									"end": 2323,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "27"
								},
								{
									"begin": 2261,
									"end": 2333,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "tag",
									"source": 8,
									"value": "70"
								},
								{
									"begin": 2261,
									"end": 2333,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2251,
									"end": 2333,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2206,
									"end": 2343,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2382,
									"end": 2384,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2478,
									"end": 2485,
									"name": "DUP7",
									"source": 8
								},
								{
									"begin": 2469,
									"end": 2475,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2458,
									"end": 2467,
									"name": "DUP8",
									"source": 8
								},
								{
									"begin": 2454,
									"end": 2476,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "31"
								},
								{
									"begin": 2408,
									"end": 2486,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "tag",
									"source": 8,
									"value": "71"
								},
								{
									"begin": 2408,
									"end": 2486,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2398,
									"end": 2486,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2353,
									"end": 2496,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 1796,
									"end": 2503,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "tag",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2593,
									"end": 2604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2627,
									"end": 2633,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2622,
									"end": 2625,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2615,
									"end": 2634,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2667,
									"end": 2671,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 2662,
									"end": 2665,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2658,
									"end": 2672,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2643,
									"end": 2672,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP3",
									"source": 8
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2509,
									"end": 2678,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2509,
									"end": 2678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "tag",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2824,
									"end": 2846,
									"name": "PUSH",
									"source": 8,
									"value": "43726F776473616C653A20726174652069732030000000000000000000000000"
								},
								{
									"begin": 2820,
									"end": 2821,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 2812,
									"end": 2818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2808,
									"end": 2822,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 2801,
									"end": 2847,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 2684,
									"end": 2854,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2684,
									"end": 2854,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "tag",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3002,
									"end": 3005,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3087,
									"end": 3089,
									"name": "PUSH",
									"source": 8,
									"value": "14"
								},
								{
									"begin": 3082,
									"end": 3085,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 3023,
									"end": 3090,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "tag",
									"source": 8,
									"value": "75"
								},
								{
									"begin": 3023,
									"end": 3090,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3016,
									"end": 3090,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3188,
									"end": 3191,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "33"
								},
								{
									"begin": 3099,
									"end": 3192,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "tag",
									"source": 8,
									"value": "76"
								},
								{
									"begin": 3099,
									"end": 3192,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3217,
									"end": 3219,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3212,
									"end": 3215,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3208,
									"end": 3220,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3201,
									"end": 3220,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 2860,
									"end": 3226,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2860,
									"end": 3226,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "tag",
									"source": 8,
									"value": "10"
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3398,
									"end": 3402,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3438,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3425,
									"end": 3434,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3421,
									"end": 3439,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3413,
									"end": 3439,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3479,
									"end": 3483,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3475,
									"end": 3495,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 3471,
									"end": 3472,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3460,
									"end": 3469,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 3456,
									"end": 3473,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3449,
									"end": 3496,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3639,
									"end": 3643,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "34"
								},
								{
									"begin": 3513,
									"end": 3644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "tag",
									"source": 8,
									"value": "78"
								},
								{
									"begin": 3513,
									"end": 3644,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3505,
									"end": 3644,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3651,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3232,
									"end": 3651,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "tag",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 3797,
									"end": 3831,
									"name": "PUSH",
									"source": 8,
									"value": "43726F776473616C653A2077616C6C657420697320746865207A65726F206164"
								},
								{
									"begin": 3793,
									"end": 3794,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 3785,
									"end": 3791,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3781,
									"end": 3795,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3774,
									"end": 3832,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3866,
									"end": 3873,
									"name": "PUSH",
									"source": 8,
									"value": "6472657373000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3861,
									"end": 3863,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 3853,
									"end": 3859,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 3849,
									"end": 3864,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 3842,
									"end": 3874,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3881,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3657,
									"end": 3881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "tag",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4029,
									"end": 4032,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 4114,
									"end": 4116,
									"name": "PUSH",
									"source": 8,
									"value": "25"
								},
								{
									"begin": 4109,
									"end": 4112,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 4050,
									"end": 4117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "tag",
									"source": 8,
									"value": "81"
								},
								{
									"begin": 4050,
									"end": 4117,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4043,
									"end": 4117,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4215,
									"end": 4218,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "35"
								},
								{
									"begin": 4126,
									"end": 4219,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "tag",
									"source": 8,
									"value": "82"
								},
								{
									"begin": 4126,
									"end": 4219,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4244,
									"end": 4246,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 4239,
									"end": 4242,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4235,
									"end": 4247,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4228,
									"end": 4247,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 3887,
									"end": 4253,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 3887,
									"end": 4253,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "tag",
									"source": 8,
									"value": "13"
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4425,
									"end": 4429,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4463,
									"end": 4465,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4452,
									"end": 4461,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4448,
									"end": 4466,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4440,
									"end": 4466,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4512,
									"end": 4521,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4506,
									"end": 4510,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4502,
									"end": 4522,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 4498,
									"end": 4499,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4487,
									"end": 4496,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 4483,
									"end": 4500,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4476,
									"end": 4523,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4666,
									"end": 4670,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "36"
								},
								{
									"begin": 4540,
									"end": 4671,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "tag",
									"source": 8,
									"value": "84"
								},
								{
									"begin": 4540,
									"end": 4671,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4532,
									"end": 4671,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4678,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4259,
									"end": 4678,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "tag",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 4824,
									"end": 4858,
									"name": "PUSH",
									"source": 8,
									"value": "43726F776473616C653A20746F6B656E20697320746865207A65726F20616464"
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 4812,
									"end": 4818,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4808,
									"end": 4822,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4801,
									"end": 4859,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4893,
									"end": 4899,
									"name": "PUSH",
									"source": 8,
									"value": "7265737300000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 4888,
									"end": 4890,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 4880,
									"end": 4886,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 4876,
									"end": 4891,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 4869,
									"end": 4900,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 4684,
									"end": 4907,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4684,
									"end": 4907,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "tag",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5055,
									"end": 5058,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5140,
									"end": 5142,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 5135,
									"end": 5138,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "32"
								},
								{
									"begin": 5076,
									"end": 5143,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "tag",
									"source": 8,
									"value": "87"
								},
								{
									"begin": 5076,
									"end": 5143,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5069,
									"end": 5143,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5241,
									"end": 5244,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "37"
								},
								{
									"begin": 5152,
									"end": 5245,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "tag",
									"source": 8,
									"value": "88"
								},
								{
									"begin": 5152,
									"end": 5245,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5270,
									"end": 5272,
									"name": "PUSH",
									"source": 8,
									"value": "40"
								},
								{
									"begin": 5265,
									"end": 5268,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5261,
									"end": 5273,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5254,
									"end": 5273,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 5279,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 4913,
									"end": 5279,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "tag",
									"source": 8,
									"value": "16"
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5451,
									"end": 5455,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5489,
									"end": 5491,
									"name": "PUSH",
									"source": 8,
									"value": "20"
								},
								{
									"begin": 5478,
									"end": 5487,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 5474,
									"end": 5492,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5466,
									"end": 5492,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5538,
									"end": 5547,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5532,
									"end": 5536,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5528,
									"end": 5548,
									"name": "SUB",
									"source": 8
								},
								{
									"begin": 5524,
									"end": 5525,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 5513,
									"end": 5522,
									"name": "DUP4",
									"source": 8
								},
								{
									"begin": 5509,
									"end": 5526,
									"name": "ADD",
									"source": 8
								},
								{
									"begin": 5502,
									"end": 5549,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 5692,
									"end": 5696,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "38"
								},
								{
									"begin": 5566,
									"end": 5697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "tag",
									"source": 8,
									"value": "90"
								},
								{
									"begin": 5566,
									"end": 5697,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5558,
									"end": 5697,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP2",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5704,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 5285,
									"end": 5704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "tag",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1234,
									"end": 8121,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066d716b82eba2b274a57d2de82413b766b8be45fe49927ef08f5daaeb42bd28664736f6c63430008120033",
									".code": [
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "2C4E722E"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "4042B66F"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "521EB273"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "EC8AC4D8"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH",
											"source": 0,
											"value": "FC0C546A"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 8121,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3906,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3906,
											"end": 3981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4044,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 4044,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3734,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 3734,
											"end": 3821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4386,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4386,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3582,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3582,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3969,
											"end": 3974,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3962,
											"end": 3974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3906,
											"end": 3981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4093,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4112,
											"end": 4122,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4112,
											"end": 4122,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4122,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4122,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4044,
											"end": 4129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3773,
											"end": 3788,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3807,
											"end": 3814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3800,
											"end": 3814,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3734,
											"end": 3821,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4481,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4484,
											"end": 4493,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4493,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4493,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4524,
											"end": 4535,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4537,
											"end": 4546,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4523,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4503,
											"end": 4547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4503,
											"end": 4547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4503,
											"end": 4547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4620,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4623,
											"end": 4649,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4639,
											"end": 4648,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4638,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 4623,
											"end": 4649,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4623,
											"end": 4649,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4623,
											"end": 4649,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4649,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4606,
											"end": 4649,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4712,
											"end": 4721,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4707,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4697,
											"end": 4707,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4711,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4697,
											"end": 4711,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 4697,
											"end": 4722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4694,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4684,
											"end": 4722,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4722,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4684,
											"end": 4722,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4750,
											"end": 4761,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4769,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 4733,
											"end": 4770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4733,
											"end": 4770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4733,
											"end": 4770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4826,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4801,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4801,
											"end": 4813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4801,
											"end": 4813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4801,
											"end": 4813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "6FAF93231A456E552DBC9961F58D9713EE4F2E69D15F1975B050EF0911053A7B"
										},
										{
											"begin": 4828,
											"end": 4837,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4839,
											"end": 4845,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4785,
											"end": 4846,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4785,
											"end": 4846,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4880,
											"end": 4891,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4893,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4857,
											"end": 4879,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4857,
											"end": 4903,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4857,
											"end": 4903,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4914,
											"end": 4927,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4914,
											"end": 4929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4914,
											"end": 4929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 4914,
											"end": 4929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4984,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4961,
											"end": 4972,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4974,
											"end": 4983,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4960,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4939,
											"end": 4984,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4939,
											"end": 4984,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4939,
											"end": 4984,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4454,
											"end": 4991,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4991,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4386,
											"end": 4991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3620,
											"end": 3626,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3645,
											"end": 3651,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3638,
											"end": 3651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3582,
											"end": 3658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5533,
											"end": 5909,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5533,
											"end": 5909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5646,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5635,
											"end": 5660,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5627,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5627,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5738,
											"end": 5739,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5725,
											"end": 5734,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5725,
											"end": 5739,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5717,
											"end": 5769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5717,
											"end": 5769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5909,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5533,
											"end": 5909,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7954,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7834,
											"end": 7954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7901,
											"end": 7908,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7941,
											"end": 7946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7936,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 7927,
											"end": 7940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 7927,
											"end": 7947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7920,
											"end": 7947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7920,
											"end": 7947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7954,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7834,
											"end": 7954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2813,
											"end": 2820,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2843,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2840,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 2839,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2832,
											"end": 2844,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2755,
											"end": 2851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7036,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 7036,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7138,
											"end": 7149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7151,
											"end": 7162,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7123,
											"end": 7163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7036,
											"end": 7170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7036,
											"end": 7170,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7036,
											"end": 7170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 6,
											"value": "51"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7440,
											"end": 7585,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 7440,
											"end": 7585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7585,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7440,
											"end": 7585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8119,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 8041,
											"end": 8119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8085,
											"end": 8092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8101,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8085,
											"end": 8101,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 8102,
											"end": 8111,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8085,
											"end": 8112,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6353,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 6204,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3523,
											"end": 3530,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 3549,
											"end": 3554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 3549,
											"end": 3554,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3465,
											"end": 3561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6633,
											"end": 6770,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 6633,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6738,
											"end": 6749,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6751,
											"end": 6762,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6737,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 6718,
											"end": 6737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 6718,
											"end": 6763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6633,
											"end": 6770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 763,
											"end": 968,
											"name": "tag",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 763,
											"end": 968,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 875,
											"end": 961,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 895,
											"end": 900,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 925,
											"end": 948,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 950,
											"end": 952,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 954,
											"end": 959,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 902,
											"end": 960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 902,
											"end": 960,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 875,
											"end": 894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 875,
											"end": 961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 875,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 875,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 763,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4220,
											"end": 4224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4200,
											"end": 4205,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 4192,
											"end": 4219,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 4192,
											"end": 4261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4261,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4296,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4285,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4292,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4275,
											"end": 4296,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4370,
											"end": 4380,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 4359,
											"end": 4389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 4359,
											"end": 4389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 4351,
											"end": 4436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 4351,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 4271,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3817,
											"end": 4453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 4453,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3747,
											"end": 4453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4006,
											"end": 4018,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4059,
											"end": 4065,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4067,
											"end": 4071,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4073,
											"end": 4074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4088,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4037,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 4037,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4030,
											"end": 4089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3873,
											"end": 4096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5125,
											"end": 5137,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5182,
											"end": 5187,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5157,
											"end": 5178,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 5157,
											"end": 5187,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5149,
											"end": 5230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5149,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5241,
											"end": 5253,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5278,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5288,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5301,
											"end": 5306,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5308,
											"end": 5312,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 5282,
											"end": 5313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5240,
											"end": 5313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5357,
											"end": 5363,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5365,
											"end": 5372,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5374,
											"end": 5384,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5386,
											"end": 5398,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5356,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 5330,
											"end": 5399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 5330,
											"end": 5399,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5399,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4960,
											"end": 5406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7646,
											"end": 7658,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 7674,
											"end": 7681,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7722,
											"end": 7723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7711,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7718,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7701,
											"end": 7723,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 7927,
											"end": 7933,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 7916,
											"end": 7926,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 7916,
											"end": 7934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 7916,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7908,
											"end": 7968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7908,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 7697,
											"end": 7983,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8003,
											"end": 8013,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7996,
											"end": 8013,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 7670,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 8052,
											"end": 8062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8064,
											"end": 8076,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8044,
											"end": 8077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 8044,
											"end": 8077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7466,
											"end": 8094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1235,
											"end": 1239,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1472,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1484,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 1465,
											"end": 1488,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1458,
											"end": 1488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1175,
											"end": 1495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 8616,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8775,
											"end": 8785,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8792,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 8775,
											"end": 8796,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9003,
											"end": 9013,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8997,
											"end": 9014,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9059,
											"end": 9074,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9046,
											"end": 9056,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9042,
											"end": 9044,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9057,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9075,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 8771,
											"end": 9150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9126,
											"end": 9138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 9119,
											"end": 9139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9119,
											"end": 9139,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 8,
											"value": "185"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 8,
											"value": "16"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 8,
											"value": "187"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "tag",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 442,
											"end": 568,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 479,
											"end": 486,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 561,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 512,
											"end": 517,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 508,
											"end": 562,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 497,
											"end": 562,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 497,
											"end": 562,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 442,
											"end": 568,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 678,
											"name": "tag",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 574,
											"end": 678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 619,
											"end": 626,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 666,
											"end": 671,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 648,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 648,
											"end": 672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 648,
											"end": 672,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 648,
											"end": 672,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 637,
											"end": 672,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 637,
											"end": 672,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 574,
											"end": 678,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 574,
											"end": 678,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 574,
											"end": 678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 684,
											"end": 826,
											"name": "tag",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 684,
											"end": 826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 813,
											"end": 818,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 787,
											"end": 819,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "144"
										},
										{
											"begin": 787,
											"end": 819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 787,
											"end": 819,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 787,
											"end": 819,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 782,
											"end": 785,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 775,
											"end": 820,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 684,
											"end": 826,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 684,
											"end": 826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "tag",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 941,
											"end": 945,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 979,
											"end": 981,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 968,
											"end": 977,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 964,
											"end": 982,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 956,
											"end": 982,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 956,
											"end": 982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 1076,
											"end": 1077,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1074,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1061,
											"end": 1078,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1052,
											"end": 1058,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "145"
										},
										{
											"begin": 992,
											"end": 1079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "tag",
											"source": 8,
											"value": "194"
										},
										{
											"begin": 992,
											"end": 1079,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 1086,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 832,
											"end": 1086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "tag",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1173,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1282,
											"end": 1283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1279,
											"end": 1280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1272,
											"end": 1284,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "tag",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1456,
											"end": 1463,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 1485,
											"end": 1509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "tag",
											"source": 8,
											"value": "199"
										},
										{
											"begin": 1485,
											"end": 1509,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1509,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1515,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1419,
											"end": 1515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1643,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1521,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1612,
											"end": 1617,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 1594,
											"end": 1618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "tag",
											"source": 8,
											"value": "201"
										},
										{
											"begin": 1594,
											"end": 1618,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1584,
											"end": 1619,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1633,
											"end": 1634,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1631,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1623,
											"end": 1635,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "tag",
											"source": 8,
											"value": "202"
										},
										{
											"begin": 1574,
											"end": 1637,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1643,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1521,
											"end": 1643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1695,
											"end": 1700,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1733,
											"end": 1739,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1720,
											"end": 1740,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1740,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1711,
											"end": 1740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1776,
											"end": 1781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 1749,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "tag",
											"source": 8,
											"value": "204"
										},
										{
											"begin": 1749,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1788,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1649,
											"end": 1788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "tag",
											"source": 8,
											"value": "28"
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1853,
											"end": 1859,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1902,
											"end": 1904,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1890,
											"end": 1899,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1881,
											"end": 1888,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1877,
											"end": 1900,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1873,
											"end": 1905,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 1908,
											"end": 1987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "tag",
											"source": 8,
											"value": "207"
										},
										{
											"begin": 1908,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "tag",
											"source": 8,
											"value": "206"
										},
										{
											"begin": 1870,
											"end": 1989,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2028,
											"end": 2029,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2098,
											"end": 2105,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2089,
											"end": 2095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2074,
											"end": 2096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2053,
											"end": 2106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "tag",
											"source": 8,
											"value": "208"
										},
										{
											"begin": 2053,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2043,
											"end": 2106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2043,
											"end": 2106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1999,
											"end": 2116,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 2123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1794,
											"end": 2123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "tag",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2157,
											"end": 2160,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2178,
											"end": 2183,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2171,
											"end": 2183,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2189,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2129,
											"end": 2189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2245,
											"end": 2254,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2323,
											"end": 2328,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2305,
											"end": 2329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "tag",
											"source": 8,
											"value": "213"
										},
										{
											"begin": 2305,
											"end": 2329,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "152"
										},
										{
											"begin": 2296,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "tag",
											"source": 8,
											"value": "212"
										},
										{
											"begin": 2296,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "143"
										},
										{
											"begin": 2278,
											"end": 2331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2265,
											"end": 2331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2195,
											"end": 2337,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2195,
											"end": 2337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "tag",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2393,
											"end": 2402,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2457,
											"end": 2462,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2426,
											"end": 2463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "tag",
											"source": 8,
											"value": "215"
										},
										{
											"begin": 2426,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2463,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2413,
											"end": 2463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2469,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2343,
											"end": 2469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "tag",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2539,
											"end": 2548,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2603,
											"end": 2608,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "154"
										},
										{
											"begin": 2572,
											"end": 2609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "tag",
											"source": 8,
											"value": "217"
										},
										{
											"begin": 2572,
											"end": 2609,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2609,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2559,
											"end": 2609,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2615,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2475,
											"end": 2615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "tag",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2767,
											"end": 2772,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "155"
										},
										{
											"begin": 2722,
											"end": 2773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "tag",
											"source": 8,
											"value": "219"
										},
										{
											"begin": 2722,
											"end": 2773,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2717,
											"end": 2720,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2710,
											"end": 2774,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2621,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2893,
											"end": 2897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2931,
											"end": 2933,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2929,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2916,
											"end": 2934,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2934,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2908,
											"end": 2934,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3015,
											"end": 3024,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3011,
											"end": 3028,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3002,
											"end": 3008,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "156"
										},
										{
											"begin": 2944,
											"end": 3029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "tag",
											"source": 8,
											"value": "221"
										},
										{
											"begin": 2944,
											"end": 3029,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 3036,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2786,
											"end": 3036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3163,
											"end": 3167,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3201,
											"end": 3203,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 3190,
											"end": 3199,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3186,
											"end": 3204,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3204,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3178,
											"end": 3204,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3282,
											"end": 3283,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3267,
											"end": 3284,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3258,
											"end": 3264,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3285,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3214,
											"end": 3285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3214,
											"end": 3285,
											"name": "tag",
											"source": 8,
											"value": "223"
										},
										{
											"begin": 3214,
											"end": 3285,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3363,
											"end": 3365,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3352,
											"end": 3361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3348,
											"end": 3366,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3345,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 3295,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3295,
											"end": 3367,
											"name": "tag",
											"source": 8,
											"value": "224"
										},
										{
											"begin": 3295,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3042,
											"end": 3374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3549,
											"name": "tag",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3380,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3464,
											"end": 3475,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3504,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3493,
											"end": 3496,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3486,
											"end": 3505,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3538,
											"end": 3542,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3533,
											"end": 3536,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3529,
											"end": 3543,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3514,
											"end": 3543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3549,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3549,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3549,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3380,
											"end": 3549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3555,
											"end": 3736,
											"name": "tag",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3555,
											"end": 3736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3695,
											"end": 3728,
											"name": "PUSH",
											"source": 8,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3691,
											"end": 3692,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3689,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3679,
											"end": 3693,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3672,
											"end": 3729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3555,
											"end": 3736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3555,
											"end": 3736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 4108,
											"name": "tag",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 3742,
											"end": 4108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3884,
											"end": 3887,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3905,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 3964,
											"end": 3967,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3972,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 3905,
											"end": 3972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3905,
											"end": 3972,
											"name": "tag",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3905,
											"end": 3972,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3898,
											"end": 3972,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3898,
											"end": 3972,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 4070,
											"end": 4073,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4074,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "158"
										},
										{
											"begin": 3981,
											"end": 4074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3981,
											"end": 4074,
											"name": "tag",
											"source": 8,
											"value": "229"
										},
										{
											"begin": 3981,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4099,
											"end": 4101,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4094,
											"end": 4097,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4090,
											"end": 4102,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4102,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4083,
											"end": 4102,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 4108,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 4108,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 4108,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3742,
											"end": 4108,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4533,
											"name": "tag",
											"source": 8,
											"value": "66"
										},
										{
											"begin": 4114,
											"end": 4533,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4280,
											"end": 4284,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4307,
											"end": 4316,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4303,
											"end": 4321,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4295,
											"end": 4321,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4367,
											"end": 4376,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4361,
											"end": 4365,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4357,
											"end": 4377,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 4353,
											"end": 4354,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4342,
											"end": 4351,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4338,
											"end": 4355,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4331,
											"end": 4378,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 4521,
											"end": 4525,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4526,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "159"
										},
										{
											"begin": 4395,
											"end": 4526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4395,
											"end": 4526,
											"name": "tag",
											"source": 8,
											"value": "231"
										},
										{
											"begin": 4395,
											"end": 4526,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4387,
											"end": 4526,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4387,
											"end": 4526,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4533,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4533,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4533,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4114,
											"end": 4533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4768,
											"name": "tag",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 4539,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4679,
											"end": 4713,
											"name": "PUSH",
											"source": 8,
											"value": "43726F776473616C653A2062656E656669636961727920697320746865207A65"
										},
										{
											"begin": 4675,
											"end": 4676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4667,
											"end": 4673,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4663,
											"end": 4677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4656,
											"end": 4714,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4748,
											"end": 4760,
											"name": "PUSH",
											"source": 8,
											"value": "726F206164647265737300000000000000000000000000000000000000000000"
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4735,
											"end": 4741,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4731,
											"end": 4746,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4724,
											"end": 4761,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4768,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4539,
											"end": 4768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "tag",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4916,
											"end": 4919,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 4996,
											"end": 4999,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 4937,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "tag",
											"source": 8,
											"value": "234"
										},
										{
											"begin": 4937,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 5004,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4930,
											"end": 5004,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 5102,
											"end": 5105,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "160"
										},
										{
											"begin": 5013,
											"end": 5106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "tag",
											"source": 8,
											"value": "235"
										},
										{
											"begin": 5013,
											"end": 5106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5131,
											"end": 5133,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5126,
											"end": 5129,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5122,
											"end": 5134,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5134,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5115,
											"end": 5134,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 5140,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4774,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "tag",
											"source": 8,
											"value": "70"
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5312,
											"end": 5316,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5350,
											"end": 5352,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5339,
											"end": 5348,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5335,
											"end": 5353,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5353,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5327,
											"end": 5353,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5399,
											"end": 5408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5393,
											"end": 5397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5389,
											"end": 5409,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 5385,
											"end": 5386,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5374,
											"end": 5383,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5370,
											"end": 5387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5363,
											"end": 5410,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5553,
											"end": 5557,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "161"
										},
										{
											"begin": 5427,
											"end": 5558,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 5427,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5558,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5419,
											"end": 5558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5565,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5146,
											"end": 5565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5571,
											"end": 5746,
											"name": "tag",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5571,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5711,
											"end": 5738,
											"name": "PUSH",
											"source": 8,
											"value": "43726F776473616C653A20776569416D6F756E74206973203000000000000000"
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5699,
											"end": 5705,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5695,
											"end": 5709,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5688,
											"end": 5739,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5571,
											"end": 5746,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5571,
											"end": 5746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "tag",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5894,
											"end": 5897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5979,
											"end": 5981,
											"name": "PUSH",
											"source": 8,
											"value": "19"
										},
										{
											"begin": 5974,
											"end": 5977,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 5915,
											"end": 5982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "tag",
											"source": 8,
											"value": "240"
										},
										{
											"begin": 5915,
											"end": 5982,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5982,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5908,
											"end": 5982,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 6080,
											"end": 6083,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "162"
										},
										{
											"begin": 5991,
											"end": 6084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "tag",
											"source": 8,
											"value": "241"
										},
										{
											"begin": 5991,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6109,
											"end": 6111,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6104,
											"end": 6107,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6100,
											"end": 6112,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6112,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6093,
											"end": 6112,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 6118,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5752,
											"end": 6118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "tag",
											"source": 8,
											"value": "73"
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6290,
											"end": 6294,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6328,
											"end": 6330,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6317,
											"end": 6326,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6313,
											"end": 6331,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6305,
											"end": 6331,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6305,
											"end": 6331,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6377,
											"end": 6386,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6371,
											"end": 6375,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6367,
											"end": 6387,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6363,
											"end": 6364,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6352,
											"end": 6361,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6348,
											"end": 6365,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6341,
											"end": 6388,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "163"
										},
										{
											"begin": 6405,
											"end": 6536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "tag",
											"source": 8,
											"value": "243"
										},
										{
											"begin": 6405,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6397,
											"end": 6536,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6397,
											"end": 6536,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6543,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6124,
											"end": 6543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "tag",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6549,
											"end": 6729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6597,
											"end": 6674,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6587,
											"end": 6675,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 6691,
											"end": 6692,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6699,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6718,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 6715,
											"end": 6716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6708,
											"end": 6723,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6926,
											"name": "tag",
											"source": 8,
											"value": "79"
										},
										{
											"begin": 6735,
											"end": 6926,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6775,
											"end": 6778,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6812,
											"end": 6813,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6794,
											"end": 6814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "tag",
											"source": 8,
											"value": "246"
										},
										{
											"begin": 6794,
											"end": 6814,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6789,
											"end": 6814,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6828,
											"end": 6848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 6828,
											"end": 6848,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6823,
											"end": 6848,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6871,
											"end": 6872,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6868,
											"end": 6869,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6864,
											"end": 6873,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6873,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6857,
											"end": 6873,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6892,
											"end": 6895,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6889,
											"end": 6890,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6886,
											"end": 6896,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6919,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6883,
											"end": 6919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 6899,
											"end": 6917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 6899,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6883,
											"end": 6919,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 6883,
											"end": 6919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6926,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6926,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6926,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6735,
											"end": 6926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 7342,
											"name": "tag",
											"source": 8,
											"value": "92"
										},
										{
											"begin": 6932,
											"end": 7342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 6979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 7013,
											"end": 7014,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 6995,
											"end": 7015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 6995,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6990,
											"end": 7015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7047,
											"end": 7048,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7049,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7029,
											"end": 7049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7029,
											"end": 7049,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 7029,
											"end": 7049,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7024,
											"end": 7049,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7081,
											"end": 7082,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7124,
											"end": 7135,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "141"
										},
										{
											"begin": 7106,
											"end": 7136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7106,
											"end": 7136,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7106,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7095,
											"end": 7136,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7095,
											"end": 7136,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7285,
											"end": 7286,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7276,
											"end": 7283,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7272,
											"end": 7287,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7266,
											"end": 7288,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7246,
											"end": 7247,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7239,
											"end": 7248,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7219,
											"end": 7302,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 7196,
											"end": 7335,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7196,
											"end": 7335,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "164"
										},
										{
											"begin": 7315,
											"end": 7333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 7315,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7196,
											"end": 7335,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7196,
											"end": 7335,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6980,
											"end": 7342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 7342,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 7342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 7342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 7342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6932,
											"end": 7342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7466,
											"name": "tag",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 7348,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7435,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7453,
											"end": 7458,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7435,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "149"
										},
										{
											"begin": 7435,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7435,
											"end": 7459,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 7435,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7430,
											"end": 7433,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7423,
											"end": 7460,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7466,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7348,
											"end": 7466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "tag",
											"source": 8,
											"value": "99"
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7631,
											"end": 7633,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 7620,
											"end": 7629,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7616,
											"end": 7634,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7608,
											"end": 7634,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7608,
											"end": 7634,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7712,
											"end": 7713,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7701,
											"end": 7710,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7697,
											"end": 7714,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7688,
											"end": 7694,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "165"
										},
										{
											"begin": 7644,
											"end": 7715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 7644,
											"end": 7715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7793,
											"end": 7795,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7782,
											"end": 7791,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7796,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "142"
										},
										{
											"begin": 7725,
											"end": 7797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 7725,
											"end": 7797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7900,
											"name": "tag",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7810,
											"end": 7900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7844,
											"end": 7851,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7887,
											"end": 7892,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7880,
											"end": 7893,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7873,
											"end": 7894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7894,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7862,
											"end": 7894,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7900,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7900,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7900,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7810,
											"end": 7900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8022,
											"name": "tag",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 7906,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7976,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7991,
											"end": 7996,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7976,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 7976,
											"end": 7997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7976,
											"end": 7997,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 7976,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7969,
											"end": 7974,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7966,
											"end": 7998,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 8016,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7956,
											"end": 8016,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8012,
											"end": 8013,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8009,
											"end": 8010,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8002,
											"end": 8014,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 7956,
											"end": 8016,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 7956,
											"end": 8016,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7906,
											"end": 8022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8028,
											"end": 8165,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8028,
											"end": 8165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8082,
											"end": 8087,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8113,
											"end": 8119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8107,
											"end": 8120,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8120,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8098,
											"end": 8120,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8129,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 8153,
											"end": 8158,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8129,
											"end": 8159,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "167"
										},
										{
											"begin": 8129,
											"end": 8159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8129,
											"end": 8159,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 8129,
											"end": 8159,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8028,
											"end": 8165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8028,
											"end": 8165,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8028,
											"end": 8165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8028,
											"end": 8165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8028,
											"end": 8165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8516,
											"name": "tag",
											"source": 8,
											"value": "106"
										},
										{
											"begin": 8171,
											"end": 8516,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8238,
											"end": 8244,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8289,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8275,
											"end": 8284,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8273,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8262,
											"end": 8285,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8258,
											"end": 8290,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 8374,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 8374,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 8255,
											"end": 8374,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8293,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 8293,
											"end": 8372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "147"
										},
										{
											"begin": 8293,
											"end": 8372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8293,
											"end": 8372,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 8293,
											"end": 8372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8255,
											"end": 8374,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 8255,
											"end": 8374,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8413,
											"end": 8414,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8438,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 8491,
											"end": 8498,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8488,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8471,
											"end": 8480,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8467,
											"end": 8489,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8499,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 8438,
											"end": 8499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8438,
											"end": 8499,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 8438,
											"end": 8499,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8428,
											"end": 8499,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8428,
											"end": 8499,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8384,
											"end": 8509,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8516,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8516,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8516,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8171,
											"end": 8516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8751,
											"name": "tag",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8522,
											"end": 8751,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8696,
											"name": "PUSH",
											"source": 8,
											"value": "5361666545524332303A204552433230206F7065726174696F6E20646964206E"
										},
										{
											"begin": 8658,
											"end": 8659,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8650,
											"end": 8656,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8646,
											"end": 8660,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8639,
											"end": 8697,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8731,
											"end": 8743,
											"name": "PUSH",
											"source": 8,
											"value": "6F74207375636365656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 8726,
											"end": 8728,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8718,
											"end": 8724,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8714,
											"end": 8729,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8707,
											"end": 8744,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8751,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8522,
											"end": 8751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8899,
											"end": 8902,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 8984,
											"end": 8986,
											"name": "PUSH",
											"source": 8,
											"value": "2A"
										},
										{
											"begin": 8979,
											"end": 8982,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 8920,
											"end": 8987,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 8920,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8987,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8913,
											"end": 8987,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 9085,
											"end": 9088,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "169"
										},
										{
											"begin": 8996,
											"end": 9089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 8996,
											"end": 9089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9114,
											"end": 9116,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9109,
											"end": 9112,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9105,
											"end": 9117,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9098,
											"end": 9117,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9098,
											"end": 9117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9123,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8757,
											"end": 9123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "tag",
											"source": 8,
											"value": "109"
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9295,
											"end": 9299,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9322,
											"end": 9331,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9318,
											"end": 9336,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9336,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9310,
											"end": 9336,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9382,
											"end": 9391,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9376,
											"end": 9380,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9372,
											"end": 9392,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9368,
											"end": 9369,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9357,
											"end": 9366,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9353,
											"end": 9370,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9346,
											"end": 9393,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 9536,
											"end": 9540,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 9410,
											"end": 9541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 9410,
											"end": 9541,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9541,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9402,
											"end": 9541,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9548,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9129,
											"end": 9548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9779,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 9554,
											"end": 9779,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9694,
											"end": 9728,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 9690,
											"end": 9691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9682,
											"end": 9688,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9678,
											"end": 9692,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9671,
											"end": 9729,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9763,
											"end": 9771,
											"name": "PUSH",
											"source": 8,
											"value": "722063616C6C0000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9758,
											"end": 9760,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9750,
											"end": 9756,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9746,
											"end": 9761,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9739,
											"end": 9772,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9779,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9554,
											"end": 9779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 10151,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 9785,
											"end": 10151,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9927,
											"end": 9930,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9948,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 10012,
											"end": 10014,
											"name": "PUSH",
											"source": 8,
											"value": "26"
										},
										{
											"begin": 10007,
											"end": 10010,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9948,
											"end": 10015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 9948,
											"end": 10015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9948,
											"end": 10015,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 9948,
											"end": 10015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9941,
											"end": 10015,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9941,
											"end": 10015,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 10113,
											"end": 10116,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10117,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 10024,
											"end": 10117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10024,
											"end": 10117,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 10024,
											"end": 10117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10142,
											"end": 10144,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10137,
											"end": 10140,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10133,
											"end": 10145,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10126,
											"end": 10145,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10126,
											"end": 10145,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 10151,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 10151,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 10151,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9785,
											"end": 10151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10576,
											"name": "tag",
											"source": 8,
											"value": "116"
										},
										{
											"begin": 10157,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10323,
											"end": 10327,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10361,
											"end": 10363,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10350,
											"end": 10359,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10364,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10364,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10338,
											"end": 10364,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10404,
											"end": 10408,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10400,
											"end": 10420,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 10396,
											"end": 10397,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10385,
											"end": 10394,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10381,
											"end": 10398,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10374,
											"end": 10421,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10564,
											"end": 10568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10569,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 10438,
											"end": 10569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10438,
											"end": 10569,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10438,
											"end": 10569,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10569,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10430,
											"end": 10569,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10576,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10576,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10576,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10576,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10582,
											"end": 10680,
											"name": "tag",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 10582,
											"end": 10680,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10633,
											"end": 10639,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10672,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10661,
											"end": 10673,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 10673,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10651,
											"end": 10673,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10582,
											"end": 10680,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10582,
											"end": 10680,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10582,
											"end": 10680,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10582,
											"end": 10680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10833,
											"name": "tag",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 10686,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10787,
											"end": 10798,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10824,
											"end": 10827,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10827,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10809,
											"end": 10827,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10833,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10833,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10833,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10686,
											"end": 10833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11085,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 10839,
											"end": 11085,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10920,
											"end": 10921,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10944,
											"end": 10950,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10941,
											"end": 10942,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10938,
											"end": 10951,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11024,
											"end": 11027,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11020,
											"end": 11031,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11014,
											"end": 11032,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 11010,
											"end": 11011,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11005,
											"end": 11008,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11001,
											"end": 11012,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10994,
											"end": 11033,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10966,
											"end": 10968,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10963,
											"end": 10964,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 10959,
											"end": 10969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10954,
											"end": 10969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 10930,
											"end": 11043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11077,
											"end": 11078,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11068,
											"end": 11074,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11063,
											"end": 11066,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11059,
											"end": 11075,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11052,
											"end": 11079,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10901,
											"end": 11085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11085,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10839,
											"end": 11085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11477,
											"name": "tag",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 11091,
											"end": 11477,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11195,
											"end": 11198,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11223,
											"end": 11261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11255,
											"end": 11260,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11261,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "173"
										},
										{
											"begin": 11223,
											"end": 11261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11223,
											"end": 11261,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 11223,
											"end": 11261,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11277,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 11358,
											"end": 11364,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11353,
											"end": 11356,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11277,
											"end": 11365,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "174"
										},
										{
											"begin": 11277,
											"end": 11365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11277,
											"end": 11365,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 11277,
											"end": 11365,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11365,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11270,
											"end": 11365,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11374,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 11432,
											"end": 11438,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11427,
											"end": 11430,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 11420,
											"end": 11424,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11413,
											"end": 11418,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11409,
											"end": 11425,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11374,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 11374,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11374,
											"end": 11439,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 11374,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11464,
											"end": 11470,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11459,
											"end": 11462,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11455,
											"end": 11471,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11471,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11448,
											"end": 11471,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11199,
											"end": 11477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11477,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11477,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11477,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11091,
											"end": 11477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11754,
											"name": "tag",
											"source": 8,
											"value": "118"
										},
										{
											"begin": 11483,
											"end": 11754,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11613,
											"end": 11616,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11635,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11724,
											"end": 11727,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11721,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 11728,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "176"
										},
										{
											"begin": 11635,
											"end": 11728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 11728,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 11635,
											"end": 11728,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11728,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11628,
											"end": 11728,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11745,
											"end": 11748,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 11748,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11738,
											"end": 11748,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11754,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11754,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11754,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11483,
											"end": 11754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11760,
											"end": 11939,
											"name": "tag",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 11760,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11900,
											"end": 11931,
											"name": "PUSH",
											"source": 8,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 11896,
											"end": 11897,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11888,
											"end": 11894,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11884,
											"end": 11898,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11877,
											"end": 11932,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11760,
											"end": 11939,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11760,
											"end": 11939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11945,
											"end": 12311,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 11945,
											"end": 12311,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12087,
											"end": 12090,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12108,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 12172,
											"end": 12174,
											"name": "PUSH",
											"source": 8,
											"value": "1D"
										},
										{
											"begin": 12167,
											"end": 12170,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12175,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 12108,
											"end": 12175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12108,
											"end": 12175,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 12108,
											"end": 12175,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12101,
											"end": 12175,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12101,
											"end": 12175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12184,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 12273,
											"end": 12276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12184,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "177"
										},
										{
											"begin": 12184,
											"end": 12277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12184,
											"end": 12277,
											"name": "tag",
											"source": 8,
											"value": "298"
										},
										{
											"begin": 12184,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12302,
											"end": 12304,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12297,
											"end": 12300,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12293,
											"end": 12305,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12286,
											"end": 12305,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12286,
											"end": 12305,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11945,
											"end": 12311,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11945,
											"end": 12311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11945,
											"end": 12311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11945,
											"end": 12311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12736,
											"name": "tag",
											"source": 8,
											"value": "131"
										},
										{
											"begin": 12317,
											"end": 12736,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12483,
											"end": 12487,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12521,
											"end": 12523,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 12510,
											"end": 12519,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12506,
											"end": 12524,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12498,
											"end": 12524,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12498,
											"end": 12524,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12570,
											"end": 12579,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12568,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12560,
											"end": 12580,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 12556,
											"end": 12557,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12545,
											"end": 12554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12541,
											"end": 12558,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12534,
											"end": 12581,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 12598,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12724,
											"end": 12728,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12598,
											"end": 12729,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 12598,
											"end": 12729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12598,
											"end": 12729,
											"name": "tag",
											"source": 8,
											"value": "300"
										},
										{
											"begin": 12598,
											"end": 12729,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12590,
											"end": 12729,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12590,
											"end": 12729,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12736,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12736,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12736,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12317,
											"end": 12736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12742,
											"end": 12841,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 12742,
											"end": 12841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12794,
											"end": 12800,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12828,
											"end": 12833,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12822,
											"end": 12834,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 12812,
											"end": 12834,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12812,
											"end": 12834,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12742,
											"end": 12841,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12742,
											"end": 12841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12742,
											"end": 12841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12742,
											"end": 12841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12847,
											"end": 12949,
											"name": "tag",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 12847,
											"end": 12949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12888,
											"end": 12894,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12939,
											"end": 12941,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12935,
											"end": 12942,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 12930,
											"end": 12932,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12923,
											"end": 12928,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12919,
											"end": 12933,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12915,
											"end": 12943,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 12905,
											"end": 12943,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12905,
											"end": 12943,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12847,
											"end": 12949,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12847,
											"end": 12949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12847,
											"end": 12949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12847,
											"end": 12949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 13332,
											"name": "tag",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 12955,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13043,
											"end": 13046,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 13104,
											"end": 13109,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 13071,
											"end": 13110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 13071,
											"end": 13110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 13190,
											"end": 13196,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13185,
											"end": 13188,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13197,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "157"
										},
										{
											"begin": 13126,
											"end": 13197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13126,
											"end": 13197,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 13126,
											"end": 13197,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13119,
											"end": 13197,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 13119,
											"end": 13197,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 13264,
											"end": 13270,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13259,
											"end": 13262,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13252,
											"end": 13256,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13245,
											"end": 13250,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 13241,
											"end": 13257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13271,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 13206,
											"end": 13271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13206,
											"end": 13271,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 13206,
											"end": 13271,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 13318,
											"end": 13324,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "180"
										},
										{
											"begin": 13296,
											"end": 13325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 13296,
											"end": 13325,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13291,
											"end": 13294,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13287,
											"end": 13326,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13280,
											"end": 13326,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13280,
											"end": 13326,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13047,
											"end": 13332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 13332,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 13332,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 13332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 13332,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12955,
											"end": 13332,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13338,
											"end": 13651,
											"name": "tag",
											"source": 8,
											"value": "140"
										},
										{
											"begin": 13338,
											"end": 13651,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13451,
											"end": 13455,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13489,
											"end": 13491,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13478,
											"end": 13487,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13474,
											"end": 13492,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13466,
											"end": 13492,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13466,
											"end": 13492,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13538,
											"end": 13547,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13532,
											"end": 13536,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13528,
											"end": 13548,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 13524,
											"end": 13525,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13513,
											"end": 13522,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13509,
											"end": 13526,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13502,
											"end": 13549,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 13639,
											"end": 13643,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13630,
											"end": 13636,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "181"
										},
										{
											"begin": 13566,
											"end": 13644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13644,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 13566,
											"end": 13644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13644,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13558,
											"end": 13644,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13338,
											"end": 13651,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13338,
											"end": 13651,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13338,
											"end": 13651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13338,
											"end": 13651,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13338,
											"end": 13651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyTokens(address)": "ec8ac4d8",
							"rate()": "2c4e722e",
							"token()": "fc0c546a",
							"wallet()": "521eb273",
							"weiRaised()": "4042b66f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rate\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Crowdsale is a base contract for managing a token crowdsale, allowing investors to purchase tokens with ether. This contract implements such functionality in its most fundamental form and can be extended to provide additional functionality and/or custom behavior. The external interface represents the basic interface for purchasing tokens, and conforms the base architecture for crowdsales. It is *not* intended to be modified / overridden. The internal interface conforms the extensible and modifiable surface of crowdsales. Override the methods to add functionality. Consider using 'super' where appropriate to concatenate behavior.\",\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"params\":{\"amount\":\"amount of tokens purchased\",\"beneficiary\":\"who got the tokens\",\"purchaser\":\"who paid for the tokens\",\"value\":\"weis paid for purchase\"}}},\"kind\":\"dev\",\"methods\":{\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"constructor\":{\"details\":\"The rate is the conversion between wei and the smallest and indivisible token unit. So, if you are using a rate of 1 with a ERC20Detailed token with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\",\"params\":{\"rate\":\"Number of token units a buyer gets per wei\",\"token\":\"Address of the token being sold\",\"wallet\":\"Address where collected funds will be forwarded to\"}},\"rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"Crowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":\"Crowdsale\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol\":{\"keccak256\":\"0xe15b61fa24a9dd65ad97cfb9d054e644f30ceceb705213f4d308c6931a3fbedd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063de6e453fa6b8ec7872281297e854fdbbe8fafd735acd6edf933800642478b\",\"dweb:/ipfs/QmZffwqp8ntY6iqFoTuYy4sfW3w6kmWvr8CKZPGC5pvjDn\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 309,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_token",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)430"
							},
							{
								"astId": 22,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_wallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address_payable"
							},
							{
								"astId": 24,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_rate",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 26,
								"contract": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:Crowdsale",
								"label": "_weiRaised",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)430": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokensPurchased(address,address,uint256,uint256)": {
								"notice": "Event for token purchase logging"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x190dd6f8d592b7e4e930feb7f4313aeb8e1c4ad3154c27ce1cf6a512fc30d8cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ce8dfb62d0c4fa260d6eec8f1cd47f5f2a044e11bde5b31d18072fa6e7d9010\",\"dweb:/ipfs/QmTyFztU3tLEcEDnqqiaW4UJetqsU77LXc6pjc9oTXCK5u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 309,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":707:4455  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB 0x1F 0xD4 CALLDATALOAD 0xE5 PUSH21 0x4A5B541C709A8F7209ECA403EC3ECFBDBE7BDC2822 0xCD 0xBB PUSH16 0x3D64736F6C6343000812003300000000 ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB 0xCB 0x1F 0xD4 CALLDATALOAD 0xE5 PUSH21 0x4A5B541C709A8F7209ECA403EC3ECFBDBE7BDC2822 0xCD 0xBB PUSH16 0x3D64736F6C6343000812003300000000 ",
							"sourceMap": "707:3748:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safePermit(contract IERC20Permit,address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 707,
									"end": 4455,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bbcb1fd435e5744a5b541c709a8f7209eca403ec3ecfbdbe7bdc2822cdbb6f3d64736f6c63430008120033",
									".code": [
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 707,
											"end": 4455,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":194:9158  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP CODESIZE DUP12 0x4B 0xD6 BYTE EXP DUP3 0xB1 0xB5 PUSH5 0x2110EF2E3E SELFBALANCE DUP3 SWAP13 0xE5 DUP14 SSTORE KECCAK256 0x5C ADD MULMOD ISZERO 0x21 MSIZE LOG2 SWAP1 BYTE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:8964:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 194,
									"end": 9158,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056388b4bd61a0a82b1b5642110ef2e3e47829ce58d55205c0109152159a2901a64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 194,
											"end": 9158,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6782  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A 0xEC PUSH22 0x3447C361EB41C4FE16248018585C42CA231123171BCA PUSH29 0x35A05E054D3E64736F6C63430008120033000000000000000000000000 ",
							"sourceMap": "482:6300:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 482,
									"end": 6782,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202aec753447c361eb41c4fe16248018585c42ca231123171bca7c35a05e054d3e64736f6c63430008120033",
									".code": [
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 482,
											"end": 6782,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:64:18:\n   |\n64 |     constructor (uint256 rate, address payable wallet, IERC20 token) public {\n   |                  ^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n   --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:105:5:\n    |\n105 |     function rate() public view returns (uint256) {\n    |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 3981,
						"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
						"message": "The shadowed declaration is here:",
						"start": 3906
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2682,
					"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
					"start": 2670
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:64:32:\n   |\n64 |     constructor (uint256 rate, address payable wallet, IERC20 token) public {\n   |                                ^^^^^^^^^^^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:98:5:\n   |\n98 |     function wallet() public view returns (address payable) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 3821,
						"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
						"message": "The shadowed declaration is here:",
						"start": 3734
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2706,
					"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
					"start": 2684
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2519",
				"formattedMessage": "Warning: This declaration shadows an existing declaration.\n  --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:64:56:\n   |\n64 |     constructor (uint256 rate, address payable wallet, IERC20 token) public {\n   |                                                        ^^^^^^^^^^^^\nNote: The shadowed declaration is here:\n  --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:91:5:\n   |\n91 |     function token() public view returns (IERC20) {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This declaration shadows an existing declaration.",
				"secondarySourceLocations": [
					{
						"end": 3658,
						"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
						"message": "The shadowed declaration is here:",
						"start": 3582
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 2720,
					"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
					"start": 2708
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> .deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol:64:5:\n   |\n64 |     constructor (uint256 rate, address payable wallet, IERC20 token) public {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3027,
					"file": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
					"start": 2657
				},
				"type": "Warning"
			}
		],
		"sources": {
			".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol": {
				"ast": {
					"absolutePath": ".deps/github/OpenZeppelin/openzeppelin-contracts/contracts/crowdsale/Crowdsale.sol",
					"exportedSymbols": {
						"Address": [
							1077
						],
						"Context": [
							1099
						],
						"Crowdsale": [
							298
						],
						"IERC20": [
							430
						],
						"IERC20Permit": [
							466
						],
						"ReentrancyGuard": [
							352
						],
						"SafeERC20": [
							747
						],
						"SafeMath": [
							1411
						]
					},
					"id": 299,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8"
							],
							"nodeType": "PragmaDirective",
							"src": "85:21:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 1412,
							"src": "297:57:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 748,
							"src": "355:65:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 353,
							"src": "421:62:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "@openzeppelin/contracts/utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 299,
							"sourceUnit": 1100,
							"src": "484:51:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1256:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1099,
										"src": "1256:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1256:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1265:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 352,
										"src": "1265:15:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1265:15:0"
								}
							],
							"canonicalName": "Crowdsale",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "538:695:0",
								"text": " @title Crowdsale\n @dev Crowdsale is a base contract for managing a token crowdsale,\n allowing investors to purchase tokens with ether. This contract implements\n such functionality in its most fundamental form and can be extended to provide additional\n functionality and/or custom behavior.\n The external interface represents the basic interface for purchasing tokens, and conforms\n the base architecture for crowdsales. It is *not* intended to be modified / overridden.\n The internal interface conforms the extensible and modifiable surface of crowdsales. Override\n the methods to add functionality. Consider using 'super' where appropriate to concatenate\n behavior."
							},
							"fullyImplemented": true,
							"id": 298,
							"linearizedBaseContracts": [
								298,
								352,
								1099
							],
							"name": "Crowdsale",
							"nameLocation": "1243:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 13,
									"libraryName": {
										"id": 11,
										"name": "SafeMath",
										"nameLocations": [
											"1293:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1411,
										"src": "1293:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1287:27:0",
									"typeName": {
										"id": 12,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1306:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"global": false,
									"id": 17,
									"libraryName": {
										"id": 14,
										"name": "SafeERC20",
										"nameLocations": [
											"1325:9:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 747,
										"src": "1325:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "1319:27:0",
									"typeName": {
										"id": 16,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 15,
											"name": "IERC20",
											"nameLocations": [
												"1339:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 430,
											"src": "1339:6:0"
										},
										"referencedDeclaration": 430,
										"src": "1339:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$430",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"id": 20,
									"mutability": "mutable",
									"name": "_token",
									"nameLocation": "1395:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 298,
									"src": "1380:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$430",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 19,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 18,
											"name": "IERC20",
											"nameLocations": [
												"1380:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 430,
											"src": "1380:6:0"
										},
										"referencedDeclaration": 430,
										"src": "1380:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$430",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 22,
									"mutability": "mutable",
									"name": "_wallet",
									"nameLocation": "1473:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 298,
									"src": "1449:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1449:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_rate",
									"nameLocation": "1787:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 298,
									"src": "1771:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 23,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1771:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_weiRaised",
									"nameLocation": "1843:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 298,
									"src": "1827:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1827:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1860:235:0",
										"text": " Event for token purchase logging\n @param purchaser who paid for the tokens\n @param beneficiary who got the tokens\n @param value weis paid for purchase\n @param amount amount of tokens purchased"
									},
									"eventSelector": "6faf93231a456e552dbc9961f58d9713ee4f2e69d15f1975b050ef0911053a7b",
									"id": 37,
									"name": "TokensPurchased",
									"nameLocation": "2106:15:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "purchaser",
												"nameLocation": "2138:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2122:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2122:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "2165:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2149:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2186:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2178:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 32,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2201:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "2193:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 34,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2121:87:0"
									},
									"src": "2100:109:0"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2729:298:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 49,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "2747:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2754:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2747:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20726174652069732030",
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2757:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															},
															"value": "Crowdsale: rate is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8b72f2adcfe62a5614b704f585faa49282940ab878a00620f85b716aa41f6d78",
																"typeString": "literal_string \"Crowdsale: rate is 0\""
															}
														],
														"id": 48,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2739:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2739:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "2739:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 56,
																"name": "wallet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "2798:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 59,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2816:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2808:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 57,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2808:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2808:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2798:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2077616c6c657420697320746865207a65726f2061646472657373",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2820:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															},
															"value": "Crowdsale: wallet is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e2b432b30cf592332baa824ba45b03380bf314917ec1eb0e2522d19fb933b9f6",
																"typeString": "literal_string \"Crowdsale: wallet is the zero address\""
															}
														],
														"id": 55,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2790:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2790:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "2790:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 68,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "2886:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$430",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$430",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 67,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2878:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 66,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2878:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 69,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2878:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2904:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2896:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2896:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2896:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2878:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20746f6b656e20697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2908:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															},
															"value": "Crowdsale: token is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64ba396754921ac5cdc6388a09272386edd92a5c198850f31a7c165ba7c79b82",
																"typeString": "literal_string \"Crowdsale: token is the zero address\""
															}
														],
														"id": 65,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2870:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "2870:77:0"
											},
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 78,
														"name": "_rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "2958:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 79,
														"name": "rate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "2966:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2958:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2958:12:0"
											},
											{
												"expression": {
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 82,
														"name": "_wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2980:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 83,
														"name": "wallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "2990:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2980:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2980:16:0"
											},
											{
												"expression": {
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 86,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "3006:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$430",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 87,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "3015:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$430",
															"typeString": "contract IERC20"
														}
													},
													"src": "3006:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "3006:14:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "2215:437:0",
										"text": " @param rate Number of token units a buyer gets per wei\n @dev The rate is the conversion between wei and the smallest and indivisible\n token unit. So, if you are using a rate of 1 with a ERC20Detailed token\n with 3 decimals called TOK, 1 wei will give you 1 unit, or 0.001 TOK.\n @param wallet Address where collected funds will be forwarded to\n @param token Address of the token being sold"
									},
									"id": 91,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "rate",
												"nameLocation": "2678:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "wallet",
												"nameLocation": "2700:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2684:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2684:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2715:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2708:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 44,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 43,
														"name": "IERC20",
														"nameLocations": [
															"2708:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "2708:6:0"
													},
													"referencedDeclaration": 430,
													"src": "2708:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:52:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2729:0:0"
									},
									"scope": 298,
									"src": "2657:370:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "3487:2:0",
										"statements": []
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3033:278:0",
										"text": " @dev fallback function ***DO NOT OVERRIDE***\n Note that other contracts will transfer funds with a base gas stipend\n of 2300, which is not enough to call buyTokens. Consider calling\n buyTokens directly when purchasing tokens from a contract."
									},
									"id": 96,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3467:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3487:0:0"
									},
									"scope": 298,
									"src": "3459:30:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "3521:2:0",
										"statements": []
									},
									"id": 100,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3501:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3521:0:0"
									},
									"scope": 298,
									"src": "3494:29:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "3628:30:0",
										"statements": [
											{
												"expression": {
													"id": 107,
													"name": "_token",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 20,
													"src": "3645:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 106,
												"id": 108,
												"nodeType": "Return",
												"src": "3638:13:0"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "3529:48:0",
										"text": " @return the token being sold."
									},
									"functionSelector": "fc0c546a",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "3591:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3596:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3620:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 104,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 103,
														"name": "IERC20",
														"nameLocations": [
															"3620:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "3620:6:0"
													},
													"referencedDeclaration": 430,
													"src": "3620:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3619:8:0"
									},
									"scope": 298,
									"src": "3582:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 118,
										"nodeType": "Block",
										"src": "3790:31:0",
										"statements": [
											{
												"expression": {
													"id": 116,
													"name": "_wallet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 22,
													"src": "3807:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 115,
												"id": 117,
												"nodeType": "Return",
												"src": "3800:14:0"
											}
										]
									},
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3664:65:0",
										"text": " @return the address where funds are collected."
									},
									"functionSelector": "521eb273",
									"id": 119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "wallet",
									"nameLocation": "3743:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3749:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "3773:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3773:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3772:17:0"
									},
									"scope": 298,
									"src": "3734:87:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3952:29:0",
										"statements": [
											{
												"expression": {
													"id": 125,
													"name": "_rate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 24,
													"src": "3969:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "3962:12:0"
											}
										]
									},
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "3827:74:0",
										"text": " @return the number of token units a buyer gets per wei."
									},
									"functionSelector": "2c4e722e",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rate",
									"nameLocation": "3915:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3919:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:9:0"
									},
									"scope": 298,
									"src": "3906:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 136,
										"nodeType": "Block",
										"src": "4095:34:0",
										"statements": [
											{
												"expression": {
													"id": 134,
													"name": "_weiRaised",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 26,
													"src": "4112:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 135,
												"nodeType": "Return",
												"src": "4105:17:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3987:52:0",
										"text": " @return the amount of wei raised."
									},
									"functionSelector": "4042b66f",
									"id": 137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "weiRaised",
									"nameLocation": "4053:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4062:2:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 137,
												"src": "4086:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4086:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4085:9:0"
									},
									"scope": 298,
									"src": "4044:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 194,
										"nodeType": "Block",
										"src": "4454:537:0",
										"statements": [
											{
												"assignments": [
													146
												],
												"declarations": [
													{
														"constant": false,
														"id": 146,
														"mutability": "mutable",
														"name": "weiAmount",
														"nameLocation": "4472:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "4464:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 145,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4464:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 149,
												"initialValue": {
													"expression": {
														"id": 147,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4484:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4488:5:0",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"src": "4484:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4464:29:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 151,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "4524:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 152,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4537:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 150,
														"name": "_preValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "4503:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4503:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "4503:44:0"
											},
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "tokens",
														"nameLocation": "4614:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 194,
														"src": "4606:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4606:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 160,
												"initialValue": {
													"arguments": [
														{
															"id": 158,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4639:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_getTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "4623:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4623:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4606:43:0"
											},
											{
												"expression": {
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 161,
														"name": "_weiRaised",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "4684:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 164,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "4712:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 162,
																"name": "_weiRaised",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "4697:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4708:3:0",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1275,
															"src": "4697:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 165,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4697:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4684:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 167,
												"nodeType": "ExpressionStatement",
												"src": "4684:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "4750:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4763:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 168,
														"name": "_processPurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "4733:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4733:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "4733:37:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 174,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1089,
																"src": "4801:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4801:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 176,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "4815:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 177,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4828:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 178,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "4839:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 173,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "4785:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4785:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 180,
												"nodeType": "EmitStatement",
												"src": "4780:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 182,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "4880:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 183,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4893:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 181,
														"name": "_updatePurchasingState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "4857:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4857:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "4857:46:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 186,
														"name": "_forwardFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 297,
														"src": "4914:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "4914:15:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 190,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 140,
															"src": "4961:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 191,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "4974:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 189,
														"name": "_postValidatePurchase",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "4939:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) view"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4939:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 193,
												"nodeType": "ExpressionStatement",
												"src": "4939:45:0"
											}
										]
									},
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "4135:246:0",
										"text": " @dev low level token purchase ***DO NOT OVERRIDE***\n This function has a non-reentrancy guard, so it shouldn't be called by\n another `nonReentrant` function.\n @param beneficiary Recipient of the token purchase"
									},
									"functionSelector": "ec8ac4d8",
									"id": 195,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 143,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 142,
												"name": "nonReentrant",
												"nameLocations": [
													"4433:12:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 328,
												"src": "4433:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4433:12:0"
										}
									],
									"name": "buyTokens",
									"nameLocation": "4395:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "4413:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "4405:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4405:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4404:21:0"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 298,
									"src": "4386:605:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "5617:292:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 204,
																"name": "beneficiary",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "5635:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5658:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5650:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "5650:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5650:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5635:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5662:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															},
															"value": "Crowdsale: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9d4bce01fb5c20cfa41c5b334ad79fcf3774809b1388b0603f3dcd505be7d6e",
																"typeString": "literal_string \"Crowdsale: beneficiary is the zero address\""
															}
														],
														"id": 203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5627:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5627:80:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "5627:80:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 214,
																"name": "weiAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5725:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5738:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5725:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43726f776473616c653a20776569416d6f756e742069732030",
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5741:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															},
															"value": "Crowdsale: weiAmount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f45555b4c8de1305c23871b4baf5a92b123c8c91d4898c309ec2af8faef1a26c",
																"typeString": "literal_string \"Crowdsale: weiAmount is 0\""
															}
														],
														"id": 213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5717:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5717:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5717:52:0"
											},
											{
												"expression": {
													"id": 220,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "5779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Crowdsale_$298",
														"typeString": "contract Crowdsale"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "5779:4:0"
											}
										]
									},
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "4997:531:0",
										"text": " @dev Validation of an incoming purchase. Use require statements to revert state when conditions are not met.\n Use `super` in contracts that inherit from Crowdsale to extend their validations.\n Example from CappedCrowdsale.sol's _preValidatePurchase method:\n     super._preValidatePurchase(beneficiary, weiAmount);\n     require(weiRaised().add(weiAmount) <= cap);\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_preValidatePurchase",
									"nameLocation": "5542:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "5571:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5563:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5563:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "5592:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5584:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5562:40:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5617:0:0"
									},
									"scope": 298,
									"src": "5533:376:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6289:64:0",
										"statements": []
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5915:284:0",
										"text": " @dev Validation of an executed purchase. Observe state and use revert statements to undo rollback when valid\n conditions are not met.\n @param beneficiary Address performing the token purchase\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_postValidatePurchase",
									"nameLocation": "6213:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6243:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6235:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "6264:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6256:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6234:40:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6289:0:0"
									},
									"scope": 298,
									"src": "6204:149:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 247,
										"nodeType": "Block",
										"src": "6708:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 243,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6738:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 244,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "6751:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 240,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "6718:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6725:12:0",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 498,
														"src": "6718:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$430_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$430_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6718:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "6718:45:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6359:269:0",
										"text": " @dev Source of tokens. Override this method to modify the way in which the crowdsale ultimately gets and sends\n its tokens.\n @param beneficiary Address performing the token purchase\n @param tokenAmount Number of tokens to be emitted"
									},
									"id": 248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_deliverTokens",
									"nameLocation": "6642:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "6665:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6657:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "6686:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 248,
												"src": "6678:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6678:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6656:42:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6708:0:0"
									},
									"scope": 298,
									"src": "6633:137:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "7113:57:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 257,
															"name": "beneficiary",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "7138:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 258,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "7151:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 256,
														"name": "_deliverTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "7123:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7123:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "7123:40:0"
											}
										]
									},
									"documentation": {
										"id": 249,
										"nodeType": "StructuredDocumentation",
										"src": "6776:255:0",
										"text": " @dev Executed when a purchase has been validated and is ready to be executed. Doesn't necessarily emit/send\n tokens.\n @param beneficiary Address receiving the tokens\n @param tokenAmount Number of tokens to be purchased"
									},
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_processPurchase",
									"nameLocation": "7045:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7070:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7062:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 250,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7062:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "7091:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "7083:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7083:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7061:42:0"
									},
									"returnParameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7113:0:0"
									},
									"scope": 298,
									"src": "7036:134:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "7521:64:0",
										"statements": []
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "7176:259:0",
										"text": " @dev Override for extensions that require an internal state to check for validity (current user contributions,\n etc.)\n @param beneficiary Address receiving the tokens\n @param weiAmount Value in wei involved in the purchase"
									},
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePurchasingState",
									"nameLocation": "7449:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "7480:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7472:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7472:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7501:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "7493:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7493:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7471:40:0"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7521:0:0"
									},
									"scope": 298,
									"src": "7440:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "7910:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 281,
															"name": "_rate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "7941:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 279,
															"name": "weiAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "7927:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7937:3:0",
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1305,
														"src": "7927:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$attached_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7927:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 278,
												"id": 283,
												"nodeType": "Return",
												"src": "7920:27:0"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "7591:238:0",
										"text": " @dev Override to extend the way in which ether is converted to tokens.\n @param weiAmount Value in wei to be converted into tokens\n @return Number of tokens that can be purchased with the specified _weiAmount"
									},
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getTokenAmount",
									"nameLocation": "7843:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "7867:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7859:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7858:19:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "7901:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7901:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7900:9:0"
									},
									"scope": 298,
									"src": "7834:120:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "8075:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 292,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8102:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8106:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "8102:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 289,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "8085:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 291,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8093:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8085:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8085:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "8085:27:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "7960:76:0",
										"text": " @dev Determines how ETH is stored/forwarded on purchases."
									},
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_forwardFunds",
									"nameLocation": "8050:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8063:2:0"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8075:0:0"
									},
									"scope": 298,
									"src": "8041:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 299,
							"src": "1234:6887:0",
							"usedErrors": []
						}
					],
					"src": "85:8037:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							352
						]
					},
					"id": 353,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 300,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 301,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 352,
							"linearizedBaseContracts": [
								352
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 304,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 302,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 303,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 307,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 305,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 306,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 352,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 308,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 313,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 317,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 352,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 320,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 323,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 324,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 326,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 328,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 332,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 333,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 331,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 339,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 341,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 352,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 350,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 347,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 304,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 352,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 353,
							"src": "888:1952:1",
							"usedErrors": []
						}
					],
					"src": "112:2729:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							430
						]
					},
					"id": 431,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 354,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 355,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 430,
							"linearizedBaseContracts": [
								430
							],
							"name": "IERC20",
							"nameLocation": "212:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 364,
									"name": "Transfer",
									"nameLocation": "394:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "403:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 357,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "425:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "445:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:2"
									},
									"src": "388:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 373,
									"name": "Approval",
									"nameLocation": "625:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "634:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "657:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "682:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:2"
									},
									"src": "619:78:2"
								},
								{
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 430,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "931:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "971:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:2"
									},
									"scope": 430,
									"src": "912:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1211:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1223:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:2"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "1257:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:2"
									},
									"scope": 430,
									"src": "1193:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1557:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1572:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:2"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "1612:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:2"
									},
									"scope": 430,
									"src": "1538:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2291:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2308:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:2"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 417,
												"src": "2342:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:2"
									},
									"scope": 430,
									"src": "2274:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 418,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:2",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2677:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 419,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2699:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2719:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:2"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "2758:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:2"
									},
									"scope": 430,
									"src": "2646:118:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 431,
							"src": "202:2564:2",
							"usedErrors": []
						}
					],
					"src": "106:2661:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 432,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "114:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 433,
								"nodeType": "StructuredDocumentation",
								"src": "139:480:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IERC20Permit",
							"nameLocation": "630:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "649:792:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "1455:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1479:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1471:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1502:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1494:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1527:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1519:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "1550:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1542:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "1574:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1568:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 443,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1568:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1593:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1585:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "1612:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "1604:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1604:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1461:158:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1628:0:3"
									},
									"scope": 466,
									"src": "1446:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "1635:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 459,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "1943:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1958:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1950:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 453,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:15:3"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 459,
												"src": "1988:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1988:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1987:9:3"
									},
									"scope": 466,
									"src": "1934:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "2003:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "2198:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2214:2:3"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2240:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 462,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2240:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2239:9:3"
									},
									"scope": 466,
									"src": "2189:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "620:1631:3",
							"usedErrors": []
						}
					],
					"src": "114:2138:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1077
						],
						"IERC20": [
							430
						],
						"IERC20Permit": [
							466
						],
						"SafeERC20": [
							747
						]
					},
					"id": 748,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "115:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 469,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 748,
							"sourceUnit": 431,
							"src": "140:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol",
							"file": "../extensions/draft-IERC20Permit.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 748,
							"sourceUnit": 467,
							"src": "164:46:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 471,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 748,
							"sourceUnit": 1078,
							"src": "211:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 472,
								"nodeType": "StructuredDocumentation",
								"src": "249:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 747,
							"linearizedBaseContracts": [
								747
							],
							"name": "SafeERC20",
							"nameLocation": "715:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 475,
									"libraryName": {
										"id": 473,
										"name": "Address",
										"nameLocations": [
											"737:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1077,
										"src": "737:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "731:26:4",
									"typeName": {
										"id": 474,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "749:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "865:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 486,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 478,
															"src": "895:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 489,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 478,
																			"src": "925:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$430",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "931:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 397,
																		"src": "925:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "940:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "925:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 492,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "950:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 493,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 482,
																	"src": "954:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 487,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "902:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "906:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "902:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "902:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 485,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "875:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$430_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "875:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 496,
												"nodeType": "ExpressionStatement",
												"src": "875:86:4"
											}
										]
									},
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "772:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 478,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "801:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 477,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 476,
														"name": "IERC20",
														"nameLocations": [
															"794:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "794:6:4"
													},
													"referencedDeclaration": 430,
													"src": "794:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "824:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "816:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "844:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "836:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "784:71:4"
									},
									"returnParameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "865:0:4"
									},
									"scope": 747,
									"src": "763:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 523,
										"nodeType": "Block",
										"src": "1102:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 511,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "1132:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 514,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 501,
																			"src": "1162:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$430",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 515,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1168:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 429,
																		"src": "1162:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 516,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1181:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1162:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 517,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 503,
																	"src": "1191:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 518,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 505,
																	"src": "1197:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 519,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 507,
																	"src": "1201:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 512,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1139:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 513,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1143:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1139:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1139:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 510,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1112:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$430_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1112:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "1112:96:4"
											}
										]
									},
									"id": 524,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "983:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1016:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1009:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 500,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 499,
														"name": "IERC20",
														"nameLocations": [
															"1009:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "1009:6:4"
													},
													"referencedDeclaration": 430,
													"src": "1009:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1039:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1031:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 502,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1031:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1061:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1053:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 504,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1053:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1081:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 524,
												"src": "1073:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "999:93:4"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1102:0:4"
									},
									"scope": 747,
									"src": "974:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "1581:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 538,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 536,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "1830:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1839:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1830:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 539,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1829:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 544,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1870:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$747",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$747",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 543,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1862:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 542,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1862:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 545,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1862:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 546,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "1877:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 540,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 528,
																					"src": "1846:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$430",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 541,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1852:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 407,
																				"src": "1846:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 547,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1846:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 548,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1889:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1846:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 550,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1845:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1829:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1905:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1808:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1808:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "1808:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 556,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "2001:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 559,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 528,
																			"src": "2031:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$430",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 560,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2037:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 417,
																		"src": "2031:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2045:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2031:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 562,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 530,
																	"src": "2055:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 563,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 532,
																	"src": "2064:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 557,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2008:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2012:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2008:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2008:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 555,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "1981:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$430_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1981:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "1981:90:4"
											}
										]
									},
									"documentation": {
										"id": 525,
										"nodeType": "StructuredDocumentation",
										"src": "1221:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1484:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1512:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1505:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 526,
														"name": "IERC20",
														"nameLocations": [
															"1505:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "1505:6:4"
													},
													"referencedDeclaration": 430,
													"src": "1505:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1535:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1527:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1527:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1560:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "1552:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:76:4"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1581:0:4"
									},
									"scope": 747,
									"src": "1475:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 603,
										"nodeType": "Block",
										"src": "2200:194:4",
										"statements": [
											{
												"assignments": [
													579
												],
												"declarations": [
													{
														"constant": false,
														"id": 579,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2218:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 603,
														"src": "2210:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 578,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2210:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 590,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 584,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2257:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$747",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$747",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 582,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2249:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2249:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 586,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 573,
																"src": "2264:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 580,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "2233:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$430",
																	"typeString": "contract IERC20"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2239:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "2233:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2233:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 588,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 575,
														"src": "2275:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2233:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2210:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 592,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "2310:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 595,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 571,
																			"src": "2340:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$430",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2346:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 417,
																		"src": "2340:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2354:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2340:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 573,
																	"src": "2364:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 579,
																	"src": "2373:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 593,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2317:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 594,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2321:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2317:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2317:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$430",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 591,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2290:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$430_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2290:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 602,
												"nodeType": "ExpressionStatement",
												"src": "2290:97:4"
											}
										]
									},
									"id": 604,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2093:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2131:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2124:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 570,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 569,
														"name": "IERC20",
														"nameLocations": [
															"2124:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "2124:6:4"
													},
													"referencedDeclaration": 430,
													"src": "2124:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2154:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2146:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 572,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2146:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2114:76:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2200:0:4"
									},
									"scope": 747,
									"src": "2084:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 651,
										"nodeType": "Block",
										"src": "2516:370:4",
										"statements": [
											{
												"id": 650,
												"nodeType": "UncheckedBlock",
												"src": "2526:354:4",
												"statements": [
													{
														"assignments": [
															615
														],
														"declarations": [
															{
																"constant": false,
																"id": 615,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2558:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 650,
																"src": "2550:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 614,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2550:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 624,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 620,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2597:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$747",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$747",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2589:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 618,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2589:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 621,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2589:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 622,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "2604:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 616,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2573:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$430",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2579:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 407,
																"src": "2573:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2573:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2550:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 626,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 615,
																		"src": "2634:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 627,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 611,
																		"src": "2650:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2634:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2657:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 625,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2626:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 630,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2626:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 631,
														"nodeType": "ExpressionStatement",
														"src": "2626:75:4"
													},
													{
														"assignments": [
															633
														],
														"declarations": [
															{
																"constant": false,
																"id": 633,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2723:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 650,
																"src": "2715:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 632,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2715:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 637,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 634,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "2738:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 635,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 611,
																"src": "2753:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2738:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2715:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 639,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "2792:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$430",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 642,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 607,
																					"src": "2822:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$430",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2828:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 417,
																				"src": "2822:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2836:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2822:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 645,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 609,
																			"src": "2846:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 646,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 633,
																			"src": "2855:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 640,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2799:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2803:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2799:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$430",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 638,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 746,
																"src": "2772:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$430_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2772:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 649,
														"nodeType": "ExpressionStatement",
														"src": "2772:97:4"
													}
												]
											}
										]
									},
									"id": 652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2409:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2447:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2440:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 606,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 605,
														"name": "IERC20",
														"nameLocations": [
															"2440:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "2440:6:4"
													},
													"referencedDeclaration": 430,
													"src": "2440:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2470:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2462:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2462:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 652,
												"src": "2487:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:76:4"
									},
									"returnParameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2516:0:4"
									},
									"scope": 747,
									"src": "2400:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "3107:257:4",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "nonceBefore",
														"nameLocation": "3125:11:4",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "3117:19:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3117:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 678,
												"initialValue": {
													"arguments": [
														{
															"id": 676,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3152:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 674,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3139:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$466",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3145:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "3139:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 677,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3139:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3117:41:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 682,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3181:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 683,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 659,
															"src": "3188:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 684,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 661,
															"src": "3197:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 685,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "3204:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 686,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "3214:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 687,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "3217:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 688,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 669,
															"src": "3220:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"id": 679,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3168:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$466",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3174:6:4",
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 451,
														"src": "3168:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3168:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 690,
												"nodeType": "ExpressionStatement",
												"src": "3168:54:4"
											},
											{
												"assignments": [
													692
												],
												"declarations": [
													{
														"constant": false,
														"id": 692,
														"mutability": "mutable",
														"name": "nonceAfter",
														"nameLocation": "3240:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 707,
														"src": "3232:18:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 691,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3232:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [
														{
															"id": 695,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "3266:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 693,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 655,
															"src": "3253:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$466",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 694,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3259:6:4",
														"memberName": "nonces",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 459,
														"src": "3253:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3253:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3232:40:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "nonceAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "3290:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 700,
																	"name": "nonceBefore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "3304:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 701,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3318:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3304:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3290:29:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a207065726d697420646964206e6f742073756363656564",
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3321:35:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															},
															"value": "SafeERC20: permit did not succeed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cde8e927812a7a656f8f04e89ac4f4113d47940dd2125d11fcb8e0bd36bfc59d",
																"typeString": "literal_string \"SafeERC20: permit did not succeed\""
															}
														],
														"id": 698,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3282:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3282:75:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "3282:75:4"
											}
										]
									},
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safePermit",
									"nameLocation": "2901:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2934:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2921:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20Permit_$466",
													"typeString": "contract IERC20Permit"
												},
												"typeName": {
													"id": 654,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 653,
														"name": "IERC20Permit",
														"nameLocations": [
															"2921:12:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "2921:12:4"
													},
													"referencedDeclaration": 466,
													"src": "2921:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Permit_$466",
														"typeString": "contract IERC20Permit"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2957:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2949:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2949:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2980:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2972:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2972:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3005:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "2997:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2997:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3028:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3020:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3020:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3052:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3046:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 664,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3046:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3071:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3063:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 666,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3090:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "3082:9:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 668,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2911:186:4"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3107:0:4"
									},
									"scope": 747,
									"src": "2892:472:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "3817:636:4",
										"statements": [
											{
												"assignments": [
													718
												],
												"declarations": [
													{
														"constant": false,
														"id": 718,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4179:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 745,
														"src": "4166:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 717,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4166:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 727,
												"initialValue": {
													"arguments": [
														{
															"id": 724,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4220:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4226:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 721,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "4200:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$430",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$430",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4192:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 719,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4192:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4192:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4207:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 837,
														"src": "4192:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4192:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4166:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 728,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4275:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4286:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4275:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4295:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4275:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "4271:176:4",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "4298:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 735,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 718,
																				"src": "4370:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 737,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "4383:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 736,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "4383:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 738,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4382:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 733,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "4359:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 734,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "4363:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "4359:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4359:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4391:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 732,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4351:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4351:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 742,
															"nodeType": "ExpressionStatement",
															"src": "4351:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "3370:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3756:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3783:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$430",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 711,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 710,
														"name": "IERC20",
														"nameLocations": [
															"3776:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 430,
														"src": "3776:6:4"
													},
													"referencedDeclaration": 430,
													"src": "3776:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$430",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3803:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 746,
												"src": "3790:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 713,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3790:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:33:4"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3817:0:4"
									},
									"scope": 747,
									"src": "3747:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 748,
							"src": "707:3748:4",
							"usedErrors": []
						}
					],
					"src": "115:4341:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1077
						]
					},
					"id": 1078,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 749,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 750,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1077,
							"linearizedBaseContracts": [
								1077
							],
							"name": "Address",
							"nameLocation": "202:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 764,
										"nodeType": "Block",
										"src": "1241:254:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 758,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 753,
																"src": "1465:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1473:4:5",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1465:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 760,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1478:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1465:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1465:23:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 757,
												"id": 763,
												"nodeType": "Return",
												"src": "1458:30:5"
											}
										]
									},
									"documentation": {
										"id": 751,
										"nodeType": "StructuredDocumentation",
										"src": "216:954:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1184:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1203:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1195:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 752,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1194:17:5"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 765,
												"src": "1235:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1235:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1234:6:5"
									},
									"scope": 1077,
									"src": "1175:320:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "2483:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 780,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 776,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2509:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1077",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1077",
																				"typeString": "library Address"
																			}
																		],
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2501:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 774,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2501:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 777,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2501:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2515:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2501:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 779,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "2526:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2501:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2534:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 773,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 783,
												"nodeType": "ExpressionStatement",
												"src": "2493:73:5"
											},
											{
												"assignments": [
													785,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 785,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2583:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 798,
														"src": "2578:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 784,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2578:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 792,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 790,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 786,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 768,
																"src": "2596:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2606:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2596:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 788,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "2618:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2596:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2596:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2577:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 794,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 785,
															"src": "2647:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2656:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 793,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2639:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2639:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "2639:78:5"
											}
										]
									},
									"documentation": {
										"id": 766,
										"nodeType": "StructuredDocumentation",
										"src": "1501:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2421:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2447:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "2431:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 767,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2431:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2466:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "2458:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 769,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:43:5"
									},
									"returnParameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2483:0:5"
									},
									"scope": 1077,
									"src": "2412:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "3555:96:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "3594:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "3602:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3608:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3611:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 809,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															857,
															901
														],
														"referencedDeclaration": 901,
														"src": "3572:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3572:72:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 808,
												"id": 815,
												"nodeType": "Return",
												"src": "3565:79:5"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "2730:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3475:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3496:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3488:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3488:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3517:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3504:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 803,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:35:5"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "3541:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 806,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3541:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3540:14:5"
									},
									"scope": 1077,
									"src": "3466:185:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "4020:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 830,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 820,
															"src": "4059:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 831,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 822,
															"src": "4067:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4073:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 833,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 824,
															"src": "4076:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 829,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															857,
															901
														],
														"referencedDeclaration": 901,
														"src": "4037:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4037:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 828,
												"id": 835,
												"nodeType": "Return",
												"src": "4030:59:5"
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "3657:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3882:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3912:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "3904:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3941:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "3928:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 821,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3928:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3969:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "3955:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 823,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3955:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3894:93:5"
									},
									"returnParameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "4006:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4006:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4005:14:5"
									},
									"scope": 1077,
									"src": "3873:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 856,
										"nodeType": "Block",
										"src": "4601:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 850,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 840,
															"src": "4640:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 851,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "4648:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 852,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "4654:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4661:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 849,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															857,
															901
														],
														"referencedDeclaration": 901,
														"src": "4618:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 854,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 848,
												"id": 855,
												"nodeType": "Return",
												"src": "4611:94:5"
											}
										]
									},
									"documentation": {
										"id": 838,
										"nodeType": "StructuredDocumentation",
										"src": "4102:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 857,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4467:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4506:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4498:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4498:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4535:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4522:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 841,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4522:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4557:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4549:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4549:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4488:80:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 857,
												"src": "4587:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 846,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4587:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4586:14:5"
									},
									"scope": 1077,
									"src": "4458:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 900,
										"nodeType": "Block",
										"src": "5139:267:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 878,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 874,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5165:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1077",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1077",
																				"typeString": "library Address"
																			}
																		],
																		"id": 873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5157:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 872,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5157:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 875,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5157:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5171:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5157:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 877,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "5182:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5157:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5189:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 871,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5149:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5149:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "5149:81:5"
											},
											{
												"assignments": [
													883,
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5246:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "5241:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 882,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5241:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5268:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 900,
														"src": "5255:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 884,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5255:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"arguments": [
														{
															"id": 890,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 862,
															"src": "5308:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 886,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 860,
																"src": "5282:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 887,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5289:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5282:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 888,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 864,
																"src": "5301:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5282:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5282:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5240:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "5357:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "5365:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 896,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "5374:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 897,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 866,
															"src": "5386:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 893,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "5330:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5330:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 870,
												"id": 899,
												"nodeType": "Return",
												"src": "5323:76:5"
											}
										]
									},
									"documentation": {
										"id": 858,
										"nodeType": "StructuredDocumentation",
										"src": "4718:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 901,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4969:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5008:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5000:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5037:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5024:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 861,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5024:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5059:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5051:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5051:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5088:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5074:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 865,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5074:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4990:116:5"
									},
									"returnParameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 901,
												"src": "5125:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 868,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5125:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:14:5"
									},
									"scope": 1077,
									"src": "4960:446:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "5683:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "5719:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 913,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 906,
															"src": "5727:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 914,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5733:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 911,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															918,
															947
														],
														"referencedDeclaration": 947,
														"src": "5700:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5700:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 910,
												"id": 916,
												"nodeType": "Return",
												"src": "5693:80:5"
											}
										]
									},
									"documentation": {
										"id": 902,
										"nodeType": "StructuredDocumentation",
										"src": "5412:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5592:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5619:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5611:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 903,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5611:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5640:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5627:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 905,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5627:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5610:35:5"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "5669:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5669:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5668:14:5"
									},
									"scope": 1077,
									"src": "5583:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "6122:168:5",
										"statements": [
											{
												"assignments": [
													931,
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 931,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6138:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "6133:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 930,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6133:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6160:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 946,
														"src": "6147:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 932,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6147:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 938,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "6192:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 934,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "6174:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 935,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6181:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6174:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6174:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 940,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "6241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 941,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 931,
															"src": "6249:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 942,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 933,
															"src": "6258:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 943,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "6270:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 939,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "6214:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6214:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 929,
												"id": 945,
												"nodeType": "Return",
												"src": "6207:76:5"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "5786:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5973:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6009:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "6001:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6001:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6038:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "6025:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 922,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6025:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6066:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "6052:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 924,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6052:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5991:93:5"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "6108:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6108:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:14:5"
									},
									"scope": 1077,
									"src": "5964:326:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "6566:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "6604:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "6612:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6618:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 957,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															964,
															993
														],
														"referencedDeclaration": 993,
														"src": "6583:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6583:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 956,
												"id": 962,
												"nodeType": "Return",
												"src": "6576:84:5"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "6296:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6478:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6507:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6499:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6499:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6528:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6515:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 951,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6515:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6498:35:5"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6552:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 954,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6552:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6551:14:5"
									},
									"scope": 1077,
									"src": "6469:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "7008:170:5",
										"statements": [
											{
												"assignments": [
													977,
													979
												],
												"declarations": [
													{
														"constant": false,
														"id": 977,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7024:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "7019:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 976,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7019:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 979,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7046:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "7033:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 978,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7033:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 984,
												"initialValue": {
													"arguments": [
														{
															"id": 982,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "7080:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 980,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "7060:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7067:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7060:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7060:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7018:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 986,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "7129:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "7137:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 988,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "7146:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 989,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 971,
															"src": "7158:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 985,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "7102:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7102:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 975,
												"id": 991,
												"nodeType": "Return",
												"src": "7095:76:5"
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "6673:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6862:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6900:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6892:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6929:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6916:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 968,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6916:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6957:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6943:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 970,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6943:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6882:93:5"
									},
									"returnParameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "6994:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 973,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6994:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6993:14:5"
									},
									"scope": 1077,
									"src": "6853:325:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1031,
										"nodeType": "Block",
										"src": "7660:434:5",
										"statements": [
											{
												"condition": {
													"id": 1007,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 998,
													"src": "7674:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1029,
													"nodeType": "Block",
													"src": "8030:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1025,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "8052:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1026,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "8064:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1024,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "8044:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8044:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1028,
															"nodeType": "ExpressionStatement",
															"src": "8044:33:5"
														}
													]
												},
												"id": 1030,
												"nodeType": "IfStatement",
												"src": "7670:418:5",
												"trueBody": {
													"id": 1023,
													"nodeType": "Block",
													"src": "7683:341:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1008,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "7701:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7712:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7701:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1010,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7722:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7701:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1020,
															"nodeType": "IfStatement",
															"src": "7697:286:5",
															"trueBody": {
																"id": 1019,
																"nodeType": "Block",
																"src": "7725:258:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1014,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 996,
																							"src": "7927:6:5",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1013,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 765,
																						"src": "7916:10:5",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1015,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "7916:18:5",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1016,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "7936:31:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1012,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "7908:7:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1017,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7908:60:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1018,
																		"nodeType": "ExpressionStatement",
																		"src": "7908:60:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1021,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "8003:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1006,
															"id": 1022,
															"nodeType": "Return",
															"src": "7996:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "7184:277:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1032,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7475:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7519:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7511:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7511:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7540:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7535:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 997,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7535:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7570:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7557:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 999,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7557:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7604:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7590:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1001,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7590:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7501:121:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "7646:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1004,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7646:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7645:14:5"
									},
									"scope": 1077,
									"src": "7466:628:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1055,
										"nodeType": "Block",
										"src": "8475:135:5",
										"statements": [
											{
												"condition": {
													"id": 1044,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1035,
													"src": "8489:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1053,
													"nodeType": "Block",
													"src": "8546:58:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1049,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "8568:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1050,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1039,
																		"src": "8580:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1048,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1076,
																	"src": "8560:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8560:33:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1052,
															"nodeType": "ExpressionStatement",
															"src": "8560:33:5"
														}
													]
												},
												"id": 1054,
												"nodeType": "IfStatement",
												"src": "8485:119:5",
												"trueBody": {
													"id": 1047,
													"nodeType": "Block",
													"src": "8498:42:5",
													"statements": [
														{
															"expression": {
																"id": 1045,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "8519:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1043,
															"id": 1046,
															"nodeType": "Return",
															"src": "8512:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "8100:210:5",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1056,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8324:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1040,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8355:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "8350:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8350:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8385:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "8372:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1036,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8372:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8419:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "8405:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1038,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8405:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8340:97:5"
									},
									"returnParameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "8461:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1041,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8461:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8460:14:5"
									},
									"scope": 1077,
									"src": "8315:295:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "8699:457:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1066,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1063,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1058,
															"src": "8775:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8786:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8775:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8795:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8775:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1073,
													"nodeType": "Block",
													"src": "9105:45:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1070,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1060,
																		"src": "9126:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1069,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9119:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9119:20:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1072,
															"nodeType": "ExpressionStatement",
															"src": "9119:20:5"
														}
													]
												},
												"id": 1074,
												"nodeType": "IfStatement",
												"src": "8771:379:5",
												"trueBody": {
													"id": 1068,
													"nodeType": "Block",
													"src": "8798:301:5",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "8956:133:5",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "8974:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9003:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "8997:5:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8997:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "8978:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9042:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9046:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9038:3:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9038:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9059:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9031:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9031:44:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9031:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1058,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9003:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 1058,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9046:10:5",
																	"valueSize": 1
																}
															],
															"id": 1067,
															"nodeType": "InlineAssembly",
															"src": "8947:142:5"
														}
													]
												}
											}
										]
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8625:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8646:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "8633:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1057,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8633:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8672:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1076,
												"src": "8658:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1059,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8658:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8632:53:5"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8699:0:5"
									},
									"scope": 1077,
									"src": "8616:540:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1078,
							"src": "194:8964:5",
							"usedErrors": []
						}
					],
					"src": "101:9058:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1099
						]
					},
					"id": 1100,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1079,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1080,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1099,
							"linearizedBaseContracts": [
								1099
							],
							"name": "Context",
							"nameLocation": "626:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "702:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1085,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1084,
												"id": 1087,
												"nodeType": "Return",
												"src": "712:17:6"
											}
										]
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:6"
									},
									"returnParameters": {
										"id": 1084,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:6"
									},
									"scope": 1099,
									"src": "640:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "809:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1094,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1093,
												"id": 1096,
												"nodeType": "Return",
												"src": "819:15:6"
											}
										]
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1098,
												"src": "793:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1091,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:6"
									},
									"scope": 1099,
									"src": "742:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1100,
							"src": "608:235:6",
							"usedErrors": []
						}
					],
					"src": "86:758:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1411
						]
					},
					"id": 1412,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1102,
								"nodeType": "StructuredDocumentation",
								"src": "285:196:7",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1411,
							"linearizedBaseContracts": [
								1411
							],
							"name": "SafeMath",
							"nameLocation": "490:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "717:140:7",
										"statements": [
											{
												"id": 1132,
												"nodeType": "UncheckedBlock",
												"src": "727:124:7",
												"statements": [
													{
														"assignments": [
															1115
														],
														"declarations": [
															{
																"constant": false,
																"id": 1115,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "759:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1132,
																"src": "751:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1114,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "751:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1119,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1116,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "763:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1117,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1107,
																"src": "767:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "763:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "751:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1120,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "786:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1121,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1105,
																"src": "790:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "786:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1127,
														"nodeType": "IfStatement",
														"src": "782:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "801:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "808:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "800:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1113,
															"id": 1126,
															"nodeType": "Return",
															"src": "793:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "832:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1129,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "838:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1130,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "831:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1113,
														"id": 1131,
														"nodeType": "Return",
														"src": "824:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1103,
										"nodeType": "StructuredDocumentation",
										"src": "505:131:7",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "650:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "665:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "657:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "676:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "668:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "656:22:7"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "702:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "702:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "708:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:15:7"
									},
									"scope": 1411,
									"src": "641:216:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "1078:113:7",
										"statements": [
											{
												"id": 1160,
												"nodeType": "UncheckedBlock",
												"src": "1088:97:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1139,
																"src": "1116:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1147,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "1120:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1116:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1153,
														"nodeType": "IfStatement",
														"src": "1112:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1131:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1138:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1151,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1130:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1145,
															"id": 1152,
															"nodeType": "Return",
															"src": "1123:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1154,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1162:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1155,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1137,
																		"src": "1168:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1156,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1139,
																		"src": "1172:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1168:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1158,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1161:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1145,
														"id": 1159,
														"nodeType": "Return",
														"src": "1154:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "863:134:7",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1011:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1026:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1018:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1018:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1037:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1029:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1017:22:7"
									},
									"returnParameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1063:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1063:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "1069:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1062:15:7"
									},
									"scope": 1411,
									"src": "1002:189:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1203,
										"nodeType": "Block",
										"src": "1415:417:7",
										"statements": [
											{
												"id": 1202,
												"nodeType": "UncheckedBlock",
												"src": "1425:401:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1174,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "1683:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1688:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1683:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1181,
														"nodeType": "IfStatement",
														"src": "1679:28:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1699:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1178,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1705:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1179,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1698:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1173,
															"id": 1180,
															"nodeType": "Return",
															"src": "1691:16:7"
														}
													},
													{
														"assignments": [
															1183
														],
														"declarations": [
															{
																"constant": false,
																"id": 1183,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1729:1:7",
																"nodeType": "VariableDeclaration",
																"scope": 1202,
																"src": "1721:9:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1182,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1721:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1187,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1184,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "1733:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1185,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "1737:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1733:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1721:17:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1188,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "1756:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1189,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "1760:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1756:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1191,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "1765:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1756:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1197,
														"nodeType": "IfStatement",
														"src": "1752:33:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1776:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1195,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1775:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1173,
															"id": 1196,
															"nodeType": "Return",
															"src": "1768:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1807:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1199,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "1813:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1200,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1806:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1173,
														"id": 1201,
														"nodeType": "Return",
														"src": "1799:16:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "1197:137:7",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1348:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1363:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1355:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1355:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1374:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1366:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1354:22:7"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1400:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1400:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "1406:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1399:15:7"
									},
									"scope": 1411,
									"src": "1339:493:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1231,
										"nodeType": "Block",
										"src": "2057:114:7",
										"statements": [
											{
												"id": 1230,
												"nodeType": "UncheckedBlock",
												"src": "2067:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1216,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2095:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2095:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1223,
														"nodeType": "IfStatement",
														"src": "2091:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2111:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1220,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2118:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2110:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1215,
															"id": 1222,
															"nodeType": "Return",
															"src": "2103:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2142:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1225,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1207,
																		"src": "2148:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1226,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1209,
																		"src": "2152:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2148:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1228,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2141:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1215,
														"id": 1229,
														"nodeType": "Return",
														"src": "2134:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "1838:138:7",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1990:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2005:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "1997:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1997:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2016:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2008:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:22:7"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2042:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1211,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2042:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "2048:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2048:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2041:15:7"
									},
									"scope": 1411,
									"src": "1981:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1259,
										"nodeType": "Block",
										"src": "2406:114:7",
										"statements": [
											{
												"id": 1258,
												"nodeType": "UncheckedBlock",
												"src": "2416:98:7",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1244,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1237,
																"src": "2444:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2449:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2444:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1251,
														"nodeType": "IfStatement",
														"src": "2440:29:7",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2460:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2467:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2459:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1243,
															"id": 1250,
															"nodeType": "Return",
															"src": "2452:17:7"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2491:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1253,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1235,
																		"src": "2497:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1254,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1237,
																		"src": "2501:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2497:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1256,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2490:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1243,
														"id": 1257,
														"nodeType": "Return",
														"src": "2483:20:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "2177:148:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1260,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2339:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2354:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2346:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2346:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2365:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2357:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2345:22:7"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2391:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1239,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2391:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "2397:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2397:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2390:15:7"
									},
									"scope": 1411,
									"src": "2330:190:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2822:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "2839:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1271,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "2843:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2839:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1269,
												"id": 1273,
												"nodeType": "Return",
												"src": "2832:12:7"
											}
										]
									},
									"documentation": {
										"id": 1261,
										"nodeType": "StructuredDocumentation",
										"src": "2526:224:7",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2764:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2776:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2768:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2768:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2787:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2779:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1264,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2779:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2767:22:7"
									},
									"returnParameters": {
										"id": 1269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2813:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2813:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2812:9:7"
									},
									"scope": 1411,
									"src": "2755:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1289,
										"nodeType": "Block",
										"src": "3189:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1285,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1278,
														"src": "3206:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1286,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1280,
														"src": "3210:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3206:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1288,
												"nodeType": "Return",
												"src": "3199:12:7"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "2857:260:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3131:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3143:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3135:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3135:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3154:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3146:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1279,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3146:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3134:22:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1290,
												"src": "3180:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3179:9:7"
									},
									"scope": 1411,
									"src": "3122:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "3532:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1293,
														"src": "3549:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "3553:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3549:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1299,
												"id": 1303,
												"nodeType": "Return",
												"src": "3542:12:7"
											}
										]
									},
									"documentation": {
										"id": 1291,
										"nodeType": "StructuredDocumentation",
										"src": "3224:236:7",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3474:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3486:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3478:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3478:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3497:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3489:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3489:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3477:22:7"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1305,
												"src": "3523:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3522:9:7"
									},
									"scope": 1411,
									"src": "3465:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "3917:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1315,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1308,
														"src": "3934:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1316,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "3938:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3934:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1314,
												"id": 1318,
												"nodeType": "Return",
												"src": "3927:12:7"
											}
										]
									},
									"documentation": {
										"id": 1306,
										"nodeType": "StructuredDocumentation",
										"src": "3567:278:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3859:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1308,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3871:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "3863:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3882:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "3874:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3874:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3862:22:7"
									},
									"returnParameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "3908:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3908:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3907:9:7"
									},
									"scope": 1411,
									"src": "3850:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "4466:29:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1330,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "4483:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1331,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "4487:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4483:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1329,
												"id": 1333,
												"nodeType": "Return",
												"src": "4476:12:7"
											}
										]
									},
									"documentation": {
										"id": 1321,
										"nodeType": "StructuredDocumentation",
										"src": "3952:442:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4408:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4420:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4412:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4412:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4431:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4423:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4423:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4411:22:7"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "4457:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4457:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:9:7"
									},
									"scope": 1411,
									"src": "4399:96:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1359,
										"nodeType": "Block",
										"src": "5084:106:7",
										"statements": [
											{
												"id": 1358,
												"nodeType": "UncheckedBlock",
												"src": "5094:90:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1350,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1348,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1340,
																		"src": "5126:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1349,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1338,
																		"src": "5131:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5126:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1351,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1342,
																	"src": "5134:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1347,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5118:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5118:29:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1353,
														"nodeType": "ExpressionStatement",
														"src": "5118:29:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "5168:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1355,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1340,
																"src": "5172:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5168:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1346,
														"id": 1357,
														"nodeType": "Return",
														"src": "5161:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "4501:453:7",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1360,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4968:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4989:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "4981:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4981:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5008:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5000:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5000:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5033:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5019:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5019:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:80:7"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1360,
												"src": "5075:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5074:9:7"
									},
									"scope": 1411,
									"src": "4959:231:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "5799:105:7",
										"statements": [
											{
												"id": 1383,
												"nodeType": "UncheckedBlock",
												"src": "5809:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1373,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "5841:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5845:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5841:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1376,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "5848:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1372,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5833:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5833:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1378,
														"nodeType": "ExpressionStatement",
														"src": "5833:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1379,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "5882:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1380,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "5886:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5882:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1371,
														"id": 1382,
														"nodeType": "Return",
														"src": "5875:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1361,
										"nodeType": "StructuredDocumentation",
										"src": "5196:473:7",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5683:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5704:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5696:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5723:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5715:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5748:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5734:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1366,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5734:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5686:80:7"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "5790:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5790:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5789:9:7"
									},
									"scope": 1411,
									"src": "5674:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "6675:105:7",
										"statements": [
											{
												"id": 1408,
												"nodeType": "UncheckedBlock",
												"src": "6685:89:7",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1398,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1390,
																		"src": "6717:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6721:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6717:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1401,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1392,
																	"src": "6724:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1397,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6709:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6709:28:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1403,
														"nodeType": "ExpressionStatement",
														"src": "6709:28:7"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1404,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1388,
																"src": "6758:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1405,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1390,
																"src": "6762:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6758:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1396,
														"id": 1407,
														"nodeType": "Return",
														"src": "6751:12:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "5910:635:7",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6559:3:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6580:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "6572:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6572:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6599:1:7",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "6591:9:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6591:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6624:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "6610:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1391,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6610:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6562:80:7"
									},
									"returnParameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "6666:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6666:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6665:9:7"
									},
									"scope": 1411,
									"src": "6550:230:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1412,
							"src": "482:6300:7",
							"usedErrors": []
						}
					],
					"src": "107:6676:7"
				},
				"id": 7
			}
		}
	}
}